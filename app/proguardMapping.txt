# compiler: R8
# compiler_version: 3.1.66
# min_api: 24
# pg_map_id: dac1f83
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"1.0"}
android.support.v4.app.INotificationSideChannel$Default -> android.support.v4.app.INotificationSideChannel$Default:
    14:14:void <init>() -> <init>
    36:36:android.os.IBinder asBinder() -> asBinder
    27:27:void cancel(java.lang.String,int,java.lang.String) -> cancel
    33:33:void cancelAll(java.lang.String) -> cancelAll
    21:21:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    45:47:void <init>() -> <init>
    65:65:android.os.IBinder asBinder() -> asBinder
    54:61:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    224:224:android.support.v4.app.INotificationSideChannel getDefaultImpl() -> getDefaultImpl
    69:118:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    214:221:boolean setDefaultImpl(android.support.v4.app.INotificationSideChannel) -> setDefaultImpl
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    126:128:void <init>(android.os.IBinder) -> <init>
    131:131:android.os.IBinder asBinder() -> asBinder
    170:185:void cancel(java.lang.String,int,java.lang.String) -> cancel
    191:204:void cancelAll(java.lang.String) -> cancelAll
    135:135:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    142:164:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Default -> android.support.v4.os.IResultReceiver$Default:
    9:9:void <init>() -> <init>
    16:16:android.os.IBinder asBinder() -> asBinder
    13:13:void send(int,android.os.Bundle) -> send
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:27:void <init>() -> <init>
    45:45:android.os.IBinder asBinder() -> asBinder
    34:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    133:133:android.support.v4.os.IResultReceiver getDefaultImpl() -> getDefaultImpl
    49:74:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    123:130:boolean setDefaultImpl(android.support.v4.os.IResultReceiver) -> setDefaultImpl
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:84:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
    91:91:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    95:115:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:136:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    111:293:void <init>() -> <init>
    307:309:void <init>(int) -> <init>
    94:94:void access$001(androidx.activity.ComponentActivity) -> access$001
    94:94:androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity) -> access$100
    424:426:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    454:455:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    505:516:void ensureViewModelStore() -> ensureViewModelStore
    702:702:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    528:538:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    395:397:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    479:479:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    563:563:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    569:569:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    495:500:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    431:434:void initViewTreeOwners() -> initViewTreeOwners
    647:650:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    552:553:void onBackPressed() -> onBackPressed
    321:328:void onCreate(android.os.Bundle) -> onCreate
    667:674:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    383:383:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    351:371:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    333:339:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    439:439:android.content.Context peekAvailableContext() -> peekAvailableContext
    682:683:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    691:691:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    460:461:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
    708:726:void reportFullyDrawn() -> reportFullyDrawn
    402:404:void setContentView(int) -> setContentView
    408:410:void setContentView(android.view.View) -> setContentView
    416:418:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    583:584:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    597:598:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    614:616:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    631:633:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    122:122:void <init>(androidx.activity.ComponentActivity) -> <init>
    129:136:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    144:144:void <init>(androidx.activity.ComponentActivity) -> <init>
    152:212:void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> onLaunch
androidx.activity.ComponentActivity$2$1 -> androidx.activity.ComponentActivity$2$1:
    158:158:void <init>(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult) -> <init>
    161:162:void run() -> run
androidx.activity.ComponentActivity$2$2 -> androidx.activity.ComponentActivity$2$2:
    199:199:void <init>(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException) -> <init>
    202:205:void run() -> run
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    230:230:void <init>(androidx.activity.ComponentActivity) -> <init>
    234:241:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    244:244:void <init>(androidx.activity.ComponentActivity) -> <init>
    248:256:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    258:258:void <init>(androidx.activity.ComponentActivity) -> <init>
    262:264:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$6 -> androidx.activity.ComponentActivity$6:
    271:271:void <init>(androidx.activity.ComponentActivity) -> <init>
    276:278:android.os.Bundle saveState() -> saveState
androidx.activity.ComponentActivity$7 -> androidx.activity.ComponentActivity$7:
    281:281:void <init>(androidx.activity.ComponentActivity) -> <init>
    285:291:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    104:104:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    38:38:void <clinit>() -> <clinit>
    45:47:void <init>(android.app.Activity) -> <init>
    101:112:void initializeReflectiveFields() -> initializeReflectiveFields
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    107:108:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    67:68:void <init>() -> <init>
    59:79:void <init>(java.lang.Runnable) -> <init>
    97:98:void addCallback(androidx.activity.OnBackPressedCallback) -> addCallback
    148:155:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:117:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    165:172:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    187:199:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:227:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:252:void cancel() -> cancel
    232:242:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:205:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:211:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:50:void <init>() -> <init>
    73:77:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:109:void clearAvailableContext() -> clearAvailableContext
    97:101:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
    62:62:android.content.Context peekAvailableContext() -> peekAvailableContext
    87:88:void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> removeOnContextAvailableListener
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:48:void <init>(int,android.content.Intent) -> <init>
    50:53:void <init>(android.os.Parcel) -> <init>
    105:105:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    87:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:101:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
    47:48:void launch(java.lang.Object) -> launch
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:79:void <init>() -> <init>
    429:431:void bindRcKey(int,java.lang.String) -> bindRcKey
    345:352:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    366:384:boolean dispatchResult(int,java.lang.Object) -> dispatchResult
    389:399:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    419:425:int generateRandomNumber() -> generateRandomNumber
    298:330:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    281:290:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    118:162:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    204:221:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    402:408:int registerKey(java.lang.String) -> registerKey
    250:273:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    132:132:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
    137:157:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$2 -> androidx.activity.result.ActivityResultRegistry$2:
    162:162:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract) -> <init>
    178:178:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    165:168:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    172:173:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    221:221:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract) -> <init>
    237:237:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    224:227:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    231:232:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    439:442:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    449:452:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    455:457:void addObserver(androidx.lifecycle.LifecycleEventObserver) -> addObserver
    460:464:void clearObservers() -> clearObservers
androidx.activity.result.IntentSenderRequest -> androidx.activity.result.IntentSenderRequest:
    132:132:void <clinit>() -> <clinit>
    77:82:void <init>(android.content.IntentSender,android.content.Intent,int,int) -> <init>
    124:129:void <init>(android.os.Parcel) -> <init>
    146:146:int describeContents() -> describeContents
    102:102:android.content.Intent getFillInIntent() -> getFillInIntent
    111:111:int getFlagsMask() -> getFlagsMask
    120:120:int getFlagsValues() -> getFlagsValues
    91:91:android.content.IntentSender getIntentSender() -> getIntentSender
    151:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.IntentSenderRequest$1 -> androidx.activity.result.IntentSenderRequest$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.activity.result.IntentSenderRequest[] newArray(int) -> newArray
androidx.activity.result.IntentSenderRequest$Builder -> androidx.activity.result.IntentSenderRequest$Builder:
    187:189:void <init>(android.content.IntentSender) -> <init>
    199:200:void <init>(android.app.PendingIntent) -> <init>
    239:239:androidx.activity.result.IntentSenderRequest build() -> build
    211:212:androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent) -> setFillInIntent
    227:229:androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int) -> setFlags
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
    59:59:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
androidx.activity.result.contract.ActivityResultContract$SynchronousResult -> androidx.activity.result.contract.ActivityResultContract$SynchronousResult:
    75:77:void <init>(java.lang.Object) -> <init>
    83:83:java.lang.Object getValue() -> getValue
androidx.activity.result.contract.ActivityResultContracts -> androidx.activity.result.contract.ActivityResultContracts:
    58:58:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContracts$CreateDocument -> androidx.activity.result.contract.ActivityResultContracts$CreateDocument:
    641:641:void <init>() -> <init>
    640:640:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    647:649:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    640:640:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    656:656:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String) -> getSynchronousResult
    640:640:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    662:663:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$GetContent -> androidx.activity.result.contract.ActivityResultContracts$GetContent:
    420:420:void <init>() -> <init>
    420:420:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    426:428:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    420:420:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    435:435:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String) -> getSynchronousResult
    420:420:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    441:442:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents -> androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents:
    459:459:void <init>() -> <init>
    458:458:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    465:468:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    491:506:java.util.List getClipDataUris(android.content.Intent) -> getClipDataUris
    458:458:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    475:475:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String) -> getSynchronousResult
    458:458:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    481:484:java.util.List parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$OpenDocument -> androidx.activity.result.contract.ActivityResultContracts$OpenDocument:
    522:522:void <init>() -> <init>
    521:521:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    528:530:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    521:521:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    537:537:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    521:521:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    543:544:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree -> androidx.activity.result.contract.ActivityResultContracts$OpenDocumentTree:
    602:602:void <init>() -> <init>
    601:601:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    608:613:android.content.Intent createIntent(android.content.Context,android.net.Uri) -> createIntent
    601:601:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    620:620:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri) -> getSynchronousResult
    601:601:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    626:627:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments -> androidx.activity.result.contract.ActivityResultContracts$OpenMultipleDocuments:
    560:560:void <init>() -> <init>
    559:559:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    566:569:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    559:559:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    576:576:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    559:559:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    582:583:java.util.List parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$PickContact -> androidx.activity.result.contract.ActivityResultContracts$PickContact:
    392:392:void <init>() -> <init>
    392:392:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    397:397:android.content.Intent createIntent(android.content.Context,java.lang.Void) -> createIntent
    392:392:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    403:404:android.net.Uri parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    198:198:android.content.Intent createIntent(android.content.Context,java.lang.String[]) -> createIntent
    244:244:android.content.Intent createIntent(java.lang.String[]) -> createIntent
    158:158:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    205:221:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[]) -> getSynchronousResult
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    228:239:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$RequestPermission -> androidx.activity.result.contract.ActivityResultContracts$RequestPermission:
    251:251:void <init>() -> <init>
    251:251:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    256:256:android.content.Intent createIntent(android.content.Context,java.lang.String) -> createIntent
    251:251:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    271:278:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String) -> getSynchronousResult
    251:251:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    262:265:java.lang.Boolean parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    86:86:android.content.Intent createIntent(android.content.Context,android.content.Intent) -> createIntent
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult -> androidx.activity.result.contract.ActivityResultContracts$StartIntentSenderForResult:
    113:113:void <init>() -> <init>
    113:113:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    143:144:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    113:113:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    151:151:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$TakePicture -> androidx.activity.result.contract.ActivityResultContracts$TakePicture:
    325:325:void <init>() -> <init>
    325:325:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    331:332:android.content.Intent createIntent(android.content.Context,android.net.Uri) -> createIntent
    325:325:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    339:339:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri) -> getSynchronousResult
    325:325:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    345:345:java.lang.Boolean parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview -> androidx.activity.result.contract.ActivityResultContracts$TakePicturePreview:
    291:291:void <init>() -> <init>
    291:291:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    297:297:android.content.Intent createIntent(android.content.Context,java.lang.Void) -> createIntent
    291:291:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    304:304:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Void) -> getSynchronousResult
    291:291:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    310:311:android.graphics.Bitmap parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$TakeVideo -> androidx.activity.result.contract.ActivityResultContracts$TakeVideo:
    359:359:void <init>() -> <init>
    359:359:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    365:366:android.content.Intent createIntent(android.content.Context,android.net.Uri) -> createIntent
    359:359:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object) -> getSynchronousResult
    373:373:androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,android.net.Uri) -> getSynchronousResult
    359:359:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    379:380:android.graphics.Bitmap parseResult(int,android.content.Intent) -> parseResult
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
    151:200:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    151:151:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    151:151:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.OptIn -> androidx.annotation.OptIn:
# {"id":"sourceFile","fileName":"OptIn.kt"}
androidx.annotation.RequiresOptIn -> androidx.annotation.RequiresOptIn:
# {"id":"sourceFile","fileName":"RequiresOptIn.kt"}
androidx.annotation.RequiresOptIn$Level -> androidx.annotation.RequiresOptIn$Level:
# {"id":"sourceFile","fileName":"RequiresOptIn.kt"}
    80:80:void <init>(java.lang.String,int) -> <init>
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    60:107:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    60:60:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.annotation.experimental.Experimental -> androidx.annotation.experimental.Experimental:
# {"id":"sourceFile","fileName":"Experimental.kt"}
androidx.annotation.experimental.Experimental$Level -> androidx.annotation.experimental.Experimental$Level:
# {"id":"sourceFile","fileName":"Experimental.kt"}
    80:80:void <init>(java.lang.String,int) -> <init>
androidx.annotation.experimental.UseExperimental -> androidx.annotation.experimental.UseExperimental:
# {"id":"sourceFile","fileName":"UseExperimental.kt"}
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1098:1098:boolean collapseActionView() -> collapseActionView
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    1036:1036:float getElevation() -> getElevation
    993:993:int getHideOffset() -> getHideOffset
    859:859:android.content.Context getThemedContext() -> getThemedContext
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    980:980:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    870:870:boolean isTitleTruncated() -> isTitleTruncated
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1114:1114:boolean requestFocus() -> requestFocus
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    1021:1025:void setElevation(float) -> setElevation
    1006:1010:void setHideOffset(int) -> setHideOffset
    966:970:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    950:950:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    911:911:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    847:847:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1047:1047:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    120:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    400:400:boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    499:500:void setActionBarDescription(int) -> setActionBarDescription
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    354:364:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    328:333:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    507:513:void setPosition(float) -> setPosition
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
    282:289:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:531:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:549:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    45:45:void <clinit>() -> <clinit>
    138:139:void <init>() -> <init>
    90:93:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    70:86:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    51:65:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    101:135:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    408:416:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    303:304:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> setButton
    196:197:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    155:156:void setCustomTitle(android.view.View) -> setCustomTitle
    253:254:void setIcon(int) -> setIcon
    262:263:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    271:274:void setIconAttribute(int) -> setIconAttribute
    164:165:void setMessage(java.lang.CharSequence) -> setMessage
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
    172:173:void setView(android.view.View) -> setView
    187:188:void setView(android.view.View,int,int,int,int) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    957:958:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    966:967:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    935:942:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1008:1010:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    94:96:void <init>() -> <init>
    110:112:void <init>(int) -> <init>
    212:214:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    139:140:void attachBaseContext(android.content.Context) -> attachBaseContext
    650:655:void closeOptionsMenu() -> closeOptionsMenu
    593:599:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    259:259:android.view.View findViewById(int) -> findViewById
    583:586:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    553:553:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    189:189:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    604:607:android.content.res.Resources getResources() -> getResources
    163:163:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    500:500:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    116:135:void initDelegate() -> initDelegate
    219:222:void initViewTreeOwners() -> initViewTreeOwners
    314:315:void invalidateOptionsMenu() -> invalidateOptionsMenu
    226:236:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    540:541:void onContentChanged() -> onContentChanged
    417:418:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    278:280:void onDestroy() -> onDestroy
    633:636:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    264:273:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    564:564:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    664:664:void onNightModeChanged(int) -> onNightModeChanged
    575:576:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    150:152:void onPostCreate(android.os.Bundle) -> onPostCreate
    240:242:void onPostResume() -> onPostResume
    436:436:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    246:248:void onStart() -> onStart
    252:254:void onStop() -> onStop
    337:337:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    326:326:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    548:548:void onSupportContentChanged() -> onSupportContentChanged
    462:485:boolean onSupportNavigateUp() -> onSupportNavigateUp
    284:286:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    351:351:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    641:646:void openOptionsMenu() -> openOptionsMenu
    616:628:boolean performMenuItemShortcut(android.view.KeyEvent) -> performMenuItemShortcut
    194:196:void setContentView(int) -> setContentView
    200:202:void setContentView(android.view.View) -> setContentView
    206:208:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    183:184:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    391:391:void setSupportProgress(int) -> setSupportProgress
    384:384:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    377:377:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    370:370:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    144:146:void setTheme(int) -> setTheme
    362:362:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    309:310:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    533:534:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    303:303:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    517:517:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatActivity$1 -> androidx.appcompat.app.AppCompatActivity$1:
    117:117:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    121:123:android.os.Bundle saveState() -> saveState
androidx.appcompat.app.AppCompatActivity$2 -> androidx.appcompat.app.AppCompatActivity$2:
    126:126:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    129:133:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    166:175:void <clinit>() -> <clinit>
    271:271:void <init>() -> <init>
    655:662:void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate) -> addActiveDelegate
    686:697:void applyDayNightToActiveDelegates() -> applyDayNightToActiveDelegates
    387:387:void attachBaseContext(android.content.Context) -> attachBaseContext
    395:396:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    230:230:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    241:241:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    253:253:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> create
    265:265:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    604:604:int getDefaultNightMode() -> getDefaultNightMode
    551:551:int getLocalNightMode() -> getLocalNightMode
    651:651:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    665:669:void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate) -> removeActivityDelegate
    672:683:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    641:642:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    577:595:void setDefaultNightMode(int) -> setDefaultNightMode
    348:348:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    136:192:void <clinit>() -> <clinit>
    292:293:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    296:297:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    300:301:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    304:305:void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    213:343:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    721:725:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2374:2374:boolean applyDayNight() -> applyDayNight
    2379:2404:boolean applyDayNight(boolean) -> applyDayNight
    1028:1062:void applyFixedSizeWindow() -> applyFixedSizeWindow
    349:476:android.content.Context attachBaseContext2(android.content.Context) -> attachBaseContext2
    787:811:void attachToWindow(android.view.Window) -> attachToWindow
    2462:2462:int calculateNightMode() -> calculateNightMode
    2079:2104:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1964:1975:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    762:768:void cleanupAutoManagers() -> cleanupAutoManagers
    1978:1979:void closePanel(int) -> closePanel
    1982:2011:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    2470:2496:android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration) -> createOverrideConfigurationForDayNight
    848:1022:android.view.ViewGroup createSubDecor() -> createSubDecor
    1525:1569:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2348:2370:void dismissPopups() -> dismissPopups
    1457:1475:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2170:2194:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1396:1399:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    814:845:void ensureSubDecor() -> ensureSubDecor
    778:784:void ensureWindow() -> ensureWindow
    2107:2115:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    640:641:android.view.View findViewById(int) -> findViewById
    3417:3520:android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta
    611:622:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2642:2645:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context) -> getAutoBatteryNightModeManager
    2630:2630:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    2634:2638:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context) -> getAutoTimeNightModeManager
    3355:3355:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2426:2426:int getLocalNightMode() -> getLocalNightMode
    628:633:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2120:2132:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    2344:2344:android.view.ViewGroup getSubDecor() -> getSubDecor
    543:544:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    1147:1151:java.lang.CharSequence getTitle() -> getTitle
    552:552:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    1108:1129:boolean hasWindowFeature(int) -> hasWindowFeature
    556:570:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1839:1856:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1745:1748:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1796:1835:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1600:1609:void installViewFactory() -> installViewFactory
    1226:1230:void invalidateOptionsMenu() -> invalidateOptionsMenu
    2161:2167:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2649:2683:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1392:1392:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2432:2455:int mapNightMode(android.content.Context,int) -> mapNightMode
    1403:1415:boolean onBackPressed() -> onBackPressed
    648:667:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    498:531:void onCreate(android.os.Bundle) -> onCreate
    1617:1617:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1626:1626:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    733:758:void onDestroy() -> onDestroy
    1506:1519:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    2014:2021:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1420:1451:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1479:1502:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    2025:2074:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1181:1188:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1193:1194:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1171:1177:void onMenuOpened(int) -> onMenuOpened
    1155:1168:void onPanelClosed(int) -> onPanelClosed
    536:537:void onPostCreate(android.os.Bundle) -> onPostCreate
    686:690:void onPostResume() -> onPostResume
    729:729:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    673:674:void onStart() -> onStart
    678:682:void onStop() -> onStop
    1025:1025:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1647:1742:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    548:548:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    2137:2157:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1860:1960:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1752:1793:void reopenMenu(boolean) -> reopenMenu
    1066:1103:boolean requestWindowFeature(int) -> requestWindowFeature
    2330:2340:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    694:699:void setContentView(android.view.View) -> setContentView
    703:708:void setContentView(int) -> setContentView
    712:717:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    1387:1388:void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    2414:2422:void setLocalNightMode(int) -> setLocalNightMode
    574:608:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    772:773:void setTheme(int) -> setTheme
    1134:1143:void setTitle(java.lang.CharSequence) -> setTitle
    1382:1382:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1574:1594:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1198:1221:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1233:1376:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2323:2327:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1631:1642:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2509:2568:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2576:2621:void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration) -> updateResourcesConfigurationForNightMode
    2205:2311:int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> updateStatusGuard
    2315:2320:void updateStatusGuardColor(android.view.View) -> updateStatusGuardColor
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    164:164:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    181:186:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    168:178:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    269:269:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    272:280:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    947:947:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    951:963:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    969:969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    972:973:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    1012:1012:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1014:1014:void onAttachedFromWindow() -> onAttachedFromWindow
    1018:1019:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1288:1288:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1291:1316:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1299:1299:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1307:1310:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1302:1303:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1341:1341:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1352:1355:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1344:1348:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3359:3360:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3373:3373:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3364:3368:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3378:3379:boolean isNavigationVisible() -> isNavigationVisible
    3393:3397:void setActionBarDescription(int) -> setActionBarDescription
    3384:3389:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2781:2782:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2795:2796:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2786:2790:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2692:2694:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2709:2709:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2698:2698:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2714:2743:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2703:2704:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2722:2722:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2725:2735:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl:
    3525:3525:void <init>() -> <init>
    3536:3536:android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration) -> createConfigurationContext
    3529:3532:void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_densityDpi
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl:
    3542:3542:void <init>() -> <init>
    3545:3545:boolean isPowerSaveMode(android.os.PowerManager) -> isPowerSaveMode
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl:
    3551:3551:void <init>() -> <init>
    3555:3561:void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_locale
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl -> androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl:
    3566:3566:void <init>() -> <init>
    3570:3580:void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration) -> generateConfigDelta_colorMode
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    3079:3081:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    3089:3090:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3095:3096:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    3124:3124:void onContentChanged() -> onContentChanged
    3101:3106:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    3111:3117:android.view.View onCreatePanelView(int) -> onCreatePanelView
    3161:3163:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    3168:3170:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    3128:3156:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    3227:3236:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    3175:3177:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    3212:3220:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    3084:3085:void setActionBarCallback(androidx.appcompat.app.AppCompatDelegateImpl$ActionBarMenuCallback) -> setActionBarCallback
    3194:3205:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3323:3326:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3344:3347:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3331:3332:int getApplyableNightMode() -> getApplyableNightMode
    3339:3340:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    3244:3244:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3276:3285:void cleanup() -> cleanup
    3288:3288:boolean isListening() -> isListening
    3253:3270:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    3262:3262:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    3265:3266:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3295:3297:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3312:3316:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3302:3302:int getApplyableNightMode() -> getApplyableNightMode
    3307:3308:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl -> androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl:
    484:486:void <init>() -> <init>
    490:491:void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration) -> applyOverrideConfiguration
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    3031:3033:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3037:3038:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    3061:3061:boolean isOutOfBounds(int,int) -> isOutOfBounds
    3043:3052:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    3057:3058:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2864:2868:void <init>(int) -> <init>
    2970:2974:void applyFrozenState() -> applyFrozenState
    2881:2885:void clearMenuPresenters() -> clearMenuPresenters
    2932:2943:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2871:2874:boolean hasPanelItems() -> hasPanelItems
    2960:2967:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2947:2956:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2920:2929:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2888:2917:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    3011:3011:void <clinit>() -> <clinit>
    2981:2982:void <init>() -> <init>
    2986:2986:int describeContents() -> describeContents
    3000:3008:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2991:2997:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    3011:3011:void <init>() -> <init>
    3011:3011:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3011:3011:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3014:3014:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3019:3019:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3011:3011:java.lang.Object[] newArray(int) -> newArray
    3024:3024:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2747:2748:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2752:2765:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2770:2776:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    53:54:void <init>(android.content.Context) -> <init>
    45:68:void <init>(android.content.Context,int) -> <init>
    45:73:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    140:143:void dismiss() -> dismiss
    213:214:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    176:179:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    90:90:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    183:189:int getThemeResId(android.content.Context,int) -> getThemeResId
    169:170:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    198:198:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    194:194:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    203:203:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    208:208:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    160:160:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    43:44:void <init>() -> <init>
    48:49:void <init>(int) -> <init>
    54:54:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    61:78:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    75:93:void <clinit>() -> <clinit>
    73:96:void <init>() -> <init>
    395:416:void backportAccessibilityAttributes(android.content.Context,android.view.View,android.util.AttributeSet) -> backportAccessibilityAttributes
    320:336:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    247:247:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    211:211:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    231:231:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    241:241:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    216:216:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    226:226:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    206:206:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    253:253:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    236:236:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    258:258:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    263:263:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    221:221:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    201:201:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    268:268:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    101:196:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    280:280:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    340:358:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    284:311:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    367:390:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    272:276:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    429:432:void <init>(android.view.View,java.lang.String) -> <init>
    436:449:void onClick(android.view.View) -> onClick
    452:479:void resolveMethod(android.content.Context) -> resolveMethod
androidx.appcompat.app.LayoutIncludeDetector -> androidx.appcompat.app.LayoutIncludeDetector:
    36:38:void <init>() -> <init>
    45:61:boolean detect(android.util.AttributeSet) -> detect
    108:111:boolean isParserOutdated(org.xmlpull.v1.XmlPullParser) -> isParserOutdated
    95:103:org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque) -> popOutdatedAttrHolders
    66:83:boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser) -> shouldInheritContext
androidx.appcompat.app.NavItemSelectedListener -> androidx.appcompat.app.NavItemSelectedListener:
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    209:210:void <init>() -> <init>
    46:56:void flush(android.content.res.Resources) -> flush
    60:80:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    53:81:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    497:498:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    337:337:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    343:343:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    349:349:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    355:355:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    431:431:boolean closeOptionsMenu() -> closeOptionsMenu
    443:447:boolean collapseActionView() -> collapseActionView
    507:516:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    298:298:android.view.View getCustomView() -> getCustomView
    326:326:int getDisplayOptions() -> getDisplayOptions
    144:144:float getElevation() -> getElevation
    402:402:int getHeight() -> getHeight
    545:550:android.view.Menu getMenu() -> getMenu
    216:216:int getNavigationItemCount() -> getNavigationItemCount
    313:313:int getNavigationMode() -> getNavigationMode
    211:211:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    385:385:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    308:308:java.lang.CharSequence getSubtitle() -> getSubtitle
    391:391:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    397:397:int getTabCount() -> getTabCount
    149:149:android.content.Context getThemedContext() -> getThemedContext
    303:303:java.lang.CharSequence getTitle() -> getTitle
    416:417:void hide() -> hide
    436:438:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    421:421:boolean isShowing() -> isShowing
    154:154:boolean isTitleTruncated() -> isTitleTruncated
    331:331:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    189:190:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    492:493:void onDestroy() -> onDestroy
    479:486:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    471:474:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    426:426:boolean openOptionsMenu() -> openOptionsMenu
    451:467:void populateOptionsMenu() -> populateOptionsMenu
    373:373:void removeAllTabs() -> removeAllTabs
    502:503:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    361:361:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    367:367:void removeTabAt(int) -> removeTabAt
    236:241:boolean requestFocus() -> requestFocus
    379:379:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    293:294:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    85:86:void setCustomView(android.view.View) -> setCustomView
    90:94:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    98:100:void setCustomView(int) -> setCustomView
    175:175:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    278:279:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    257:258:void setDisplayOptions(int) -> setDisplayOptions
    262:264:void setDisplayOptions(int,int) -> setDisplayOptions
    288:289:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    273:274:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    283:284:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    268:269:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    139:140:void setElevation(float) -> setElevation
    169:170:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    179:180:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    159:160:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    164:165:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    135:135:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    104:105:void setIcon(int) -> setIcon
    109:110:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    194:195:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    114:115:void setLogo(int) -> setLogo
    119:120:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    318:322:void setNavigationMode(int) -> setNavigationMode
    199:207:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    185:185:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    130:130:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    125:125:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    246:247:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    251:252:void setSubtitle(int) -> setSubtitle
    221:222:void setTitle(java.lang.CharSequence) -> setTitle
    226:227:void setTitle(int) -> setTitle
    231:232:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    409:410:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    55:55:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    58:59:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    63:63:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    66:66:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    556:557:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    567:575:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    561:562:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    580:581:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    585:585:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    590:595:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback -> androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback:
    519:519:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    534:540:android.view.View onCreatePanelView(int) -> onCreatePanelView
    523:529:boolean onPreparePanel(int) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    60:61:void setInstance(androidx.appcompat.app.TwilightManager) -> setInstance
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    98:176:void <init>(android.app.Activity,boolean) -> <init>
    98:180:void <init>(android.app.Dialog) -> <init>
    98:189:void <init>(android.view.View) -> <init>
    338:339:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    558:559:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    563:564:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    568:574:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    578:584:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    871:907:void animateToMode(boolean) -> animateToMode
    756:761:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    426:434:void cleanupTabs() -> cleanupTabs
    971:975:boolean collapseActionView() -> collapseActionView
    309:314:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    540:554:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> configureTab
    348:357:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    833:861:void doHide(boolean) -> doHide
    784:830:void doShow(boolean) -> doShow
    670:671:void enableContentAnimations(boolean) -> enableContentAnimations
    285:306:void ensureTabsExist() -> ensureTabsExist
    495:495:android.view.View getCustomView() -> getCustomView
    234:240:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    515:515:int getDisplayOptions() -> getDisplayOptions
    251:251:float getElevation() -> getElevation
    665:665:int getHeight() -> getHeight
    742:742:int getHideOffset() -> getHideOffset
    1308:1314:int getNavigationItemCount() -> getNavigationItemCount
    510:510:int getNavigationMode() -> getNavigationMode
    1296:1302:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    660:660:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    505:505:java.lang.CharSequence getSubtitle() -> getSubtitle
    1355:1355:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    1320:1320:int getTabCount() -> getTabCount
    917:929:android.content.Context getThemedContext() -> getThemedContext
    500:500:java.lang.CharSequence getTitle() -> getTitle
    1370:1370:boolean hasIcon() -> hasIcon
    1384:1384:boolean hasLogo() -> hasLogo
    701:705:void hide() -> hide
    708:715:void hideForActionMode() -> hideForActionMode
    719:723:void hideForSystem() -> hideForSystem
    192:231:void init(android.view.View) -> init
    737:737:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    865:867:boolean isShowing() -> isShowing
    934:934:boolean isTitleTruncated() -> isTitleTruncated
    588:588:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    256:257:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    959:963:void onContentScrollStarted() -> onContentScrollStarted
    967:967:void onContentScrollStopped() -> onContentScrollStopped
    1396:1406:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    318:319:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    422:423:void removeAllTabs() -> removeAllTabs
    343:344:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    593:594:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    598:619:void removeTabAt(int) -> removeTabAt
    448:453:boolean requestFocus() -> requestFocus
    623:656:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    480:481:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    361:363:void setCustomView(int) -> setCustomView
    1280:1281:void setCustomView(android.view.View) -> setCustomView
    1285:1287:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    1389:1392:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    377:378:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    463:467:void setDisplayOptions(int) -> setDisplayOptions
    471:476:void setDisplayOptions(int,int) -> setDisplayOptions
    387:388:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    372:373:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    382:383:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    367:368:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    246:247:void setElevation(float) -> setElevation
    260:282:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    747:752:void setHideOffset(int) -> setHideOffset
    727:733:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    949:950:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    954:955:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    939:940:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    944:945:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    392:393:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1361:1362:void setIcon(int) -> setIcon
    1366:1367:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1291:1292:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    1375:1376:void setLogo(int) -> setLogo
    1380:1381:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    1325:1351:void setNavigationMode(int) -> setNavigationMode
    407:418:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    330:334:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    491:491:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    485:486:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    402:403:void setSubtitle(int) -> setSubtitle
    458:459:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    397:398:void setTitle(int) -> setTitle
    438:439:void setTitle(java.lang.CharSequence) -> setTitle
    443:444:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    912:912:boolean shouldAnimateContextView() -> shouldAnimateContextView
    675:679:void show() -> show
    682:689:void showForActionMode() -> showForActionMode
    693:697:void showForSystem() -> showForSystem
    520:536:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    767:781:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    134:134:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    137:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    151:151:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    154:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    160:160:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    163:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    989:995:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1054:1059:boolean dispatchOnCreate() -> dispatchOnCreate
    1009:1034:void finish() -> finish
    1111:1111:android.view.View getCustomView() -> getCustomView
    1004:1004:android.view.Menu getMenu() -> getMenu
    999:999:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1095:1095:java.lang.CharSequence getSubtitle() -> getSubtitle
    1090:1090:java.lang.CharSequence getTitle() -> getTitle
    1038:1051:void invalidate() -> invalidate
    1106:1106:boolean isTitleOptional() -> isTitleOptional
    1124:1124:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    1140:1140:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    1116:1119:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1144:1149:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1127:1136:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    1064:1066:void setCustomView(android.view.View) -> setCustomView
    1070:1071:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1085:1086:void setSubtitle(int) -> setSubtitle
    1075:1076:void setTitle(java.lang.CharSequence) -> setTitle
    1080:1081:void setTitle(int) -> setTitle
    1100:1102:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    1156:1162:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1177:1177:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1274:1274:java.lang.CharSequence getContentDescription() -> getContentDescription
    1188:1188:android.view.View getCustomView() -> getCustomView
    1208:1208:android.graphics.drawable.Drawable getIcon() -> getIcon
    1213:1213:int getPosition() -> getPosition
    1167:1167:java.lang.Object getTag() -> getTag
    1222:1222:java.lang.CharSequence getText() -> getText
    1255:1256:void select() -> select
    1260:1260:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    1265:1269:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1193:1197:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    1202:1203:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> setCustomView
    1227:1231:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1236:1236:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> setIcon
    1217:1218:void setPosition(int) -> setPosition
    1182:1183:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> setTabListener
    1172:1173:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    1241:1245:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    1250:1250:androidx.appcompat.app.ActionBar$Tab setText(int) -> setText
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    38:38:void <init>() -> <init>
    48:48:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    66:66:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    93:93:void <clinit>() -> <clinit>
    112:113:void <init>() -> <init>
    106:123:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    90:90:void addState(int[],android.graphics.drawable.Drawable) -> addState
    235:240:void addState(int[],android.graphics.drawable.Drawable,int) -> addState
    252:256:void addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    90:90:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    90:90:boolean canApplyTheme() -> canApplyTheme
    620:622:void clearMutated() -> clearMutated
    90:90:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    90:90:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    615:615:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    139:157:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme) -> create
    172:179:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    90:90:void draw(android.graphics.Canvas) -> draw
    90:90:int getAlpha() -> getAlpha
    90:90:int getChangingConfigurations() -> getChangingConfigurations
    90:90:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    90:90:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    90:90:int getIntrinsicHeight() -> getIntrinsicHeight
    90:90:int getIntrinsicWidth() -> getIntrinsicWidth
    90:90:int getMinimumHeight() -> getMinimumHeight
    90:90:int getMinimumWidth() -> getMinimumWidth
    90:90:int getOpacity() -> getOpacity
    90:90:void getOutline(android.graphics.Outline) -> getOutline
    90:90:boolean getPadding(android.graphics.Rect) -> getPadding
    202:211:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    484:501:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    473:474:void init() -> init
    90:90:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    90:90:boolean isAutoMirrored() -> isAutoMirrored
    260:260:boolean isStateful() -> isStateful
    265:273:void jumpToCurrentState() -> jumpToCurrentState
    606:610:android.graphics.drawable.Drawable mutate() -> mutate
    90:90:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    279:289:boolean onStateChange(int[]) -> onStateChange
    565:601:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    511:555:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    90:90:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    294:351:boolean selectTransition(int) -> selectTransition
    90:90:void setAlpha(int) -> setAlpha
    90:90:void setAutoMirrored(boolean) -> setAutoMirrored
    90:90:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    719:723:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    90:90:void setDither(boolean) -> setDither
    90:90:void setEnterFadeDuration(int) -> setEnterFadeDuration
    90:90:void setExitFadeDuration(int) -> setExitFadeDuration
    90:90:void setHotspot(float,float) -> setHotspot
    90:90:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    90:90:void setTintList(android.content.res.ColorStateList) -> setTintList
    90:90:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    215:224:boolean setVisible(boolean,boolean) -> setVisible
    90:90:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    450:470:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    371:373:void <init>(android.graphics.drawable.Animatable) -> <init>
    377:378:void start() -> start
    382:383:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    635:644:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    668:670:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    653:664:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    713:713:long generateTransitionKey(int,int) -> generateTransitionKey
    682:682:int getKeyframeIdAt(int) -> getKeyframeIdAt
    674:678:int indexOfKeyframe(int[]) -> indexOfKeyframe
    686:687:int indexOfTransition(int,int) -> indexOfTransition
    691:692:boolean isTransitionReversed(int,int) -> isTransitionReversed
    648:650:void mutate() -> mutate
    703:703:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    709:709:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    696:697:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    434:436:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    440:441:void start() -> start
    445:446:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    393:408:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    412:412:boolean canReverse() -> canReverse
    422:423:void reverse() -> reverse
    417:418:void start() -> start
    427:428:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    733:735:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    760:777:float getInterpolation(float) -> getInterpolation
    755:755:int getTotalDuration() -> getTotalDuration
    738:751:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    354:354:void <init>() -> <init>
    354:354:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    364:364:boolean canReverse() -> canReverse
    361:361:void reverse() -> reverse
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    54:75:void <init>() -> <init>
    535:572:void animate(boolean) -> animate
    594:595:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    600:600:boolean canApplyTheme() -> canApplyTheme
    634:636:void clearMutated() -> clearMutated
    630:630:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    87:93:void draw(android.graphics.Canvas) -> draw
    153:153:int getAlpha() -> getAlpha
    97:98:int getChangingConfigurations() -> getChangingConfigurations
    605:609:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    577:577:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    415:415:int getCurrentIndex() -> getCurrentIndex
    295:300:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    341:344:int getIntrinsicHeight() -> getIntrinsicHeight
    333:336:int getIntrinsicWidth() -> getIntrinsicWidth
    357:360:int getMinimumHeight() -> getMinimumHeight
    349:352:int getMinimumWidth() -> getMinimumWidth
    405:406:int getOpacity() -> getOpacity
    131:134:void getOutline(android.graphics.Outline) -> getOutline
    108:125:boolean getPadding(android.graphics.Rect) -> getPadding
    491:532:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    368:374:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    228:228:boolean isStateful() -> isStateful
    249:272:void jumpToCurrentState() -> jumpToCurrentState
    614:620:android.graphics.drawable.Drawable mutate() -> mutate
    102:103:boolean needsMirroring() -> needsMirroring
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    328:328:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    315:321:boolean onLevelChange(int) -> onLevelChange
    304:310:boolean onStateChange(int[]) -> onStateChange
    1207:1208:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    378:381:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    428:481:boolean selectDrawable(int) -> selectDrawable
    138:149:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1156:1167:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    411:412:void setCurrentIndex(int) -> setCurrentIndex
    159:165:void setDither(boolean) -> setDither
    203:204:void setEnterFadeDuration(int) -> setEnterFadeDuration
    213:214:void setExitFadeDuration(int) -> setExitFadeDuration
    276:279:void setHotspot(float,float) -> setHotspot
    283:291:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    392:399:boolean setVisible(boolean,boolean) -> setVisible
    385:388:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    588:589:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    467:467:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    470:472:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl -> androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl:
    1213:1215:void <init>() -> <init>
    1218:1218:boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState) -> canApplyTheme
    1226:1227:void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline) -> getOutline
    1222:1222:android.content.res.Resources getResources(android.content.res.Resources$Theme) -> getResources
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1189:1189:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1193:1196:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1203:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1183:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1177:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    653:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> addChild
    896:909:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    914:929:boolean canApplyTheme() -> canApplyTheme
    1137:1151:boolean canConstantState() -> canConstantState
    953:954:void clearMutated() -> clearMutated
    1045:1062:void computeConstantSize() -> computeConstantSize
    802:811:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:848:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1018:1021:int getConstantHeight() -> getConstantHeight
    1038:1041:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1028:1031:int getConstantMinimumWidth() -> getConstantMinimumWidth
    969:990:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1008:1011:int getConstantWidth() -> getConstantWidth
    1069:1069:int getEnterFadeDuration() -> getEnterFadeDuration
    1077:1077:int getExitFadeDuration() -> getExitFadeDuration
    1085:1097:int getOpacity() -> getOpacity
    1126:1131:void growArray(int,int) -> growArray
    793:795:void invalidateCache() -> invalidateCache
    1001:1001:boolean isConstantSize() -> isConstantSize
    1104:1119:boolean isStateful() -> isStateful
    935:943:void mutate() -> mutate
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    994:995:void setConstantSize(boolean) -> setConstantSize
    1065:1066:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1073:1074:void setExitFadeDuration(int) -> setExitFadeDuration
    852:870:boolean setLayoutDirection(int,int) -> setLayoutDirection
    962:963:void setVariablePadding(boolean) -> setVariablePadding
    880:892:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    113:113:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    139:139:int getIntrinsicHeight() -> getIntrinsicHeight
    134:134:int getIntrinsicWidth() -> getIntrinsicWidth
    149:149:int getMinimumHeight() -> getMinimumHeight
    144:144:int getMinimumWidth() -> getMinimumWidth
    124:124:int getOpacity() -> getOpacity
    154:154:boolean getPadding(android.graphics.Rect) -> getPadding
    103:103:int[] getState() -> getState
    129:129:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    222:222:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    162:163:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    193:193:boolean isAutoMirrored() -> isAutoMirrored
    93:93:boolean isStateful() -> isStateful
    108:109:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:183:boolean onLevelChange(int) -> onLevelChange
    170:171:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    83:84:void setAlpha(int) -> setAlpha
    188:189:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    88:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    73:74:void setDither(boolean) -> setDither
    78:79:void setFilterBitmap(boolean) -> setFilterBitmap
    213:214:void setHotspot(float,float) -> setHotspot
    218:219:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    98:98:boolean setState(int[]) -> setState
    198:199:void setTint(int) -> setTint
    203:204:void setTintList(android.content.res.ColorStateList) -> setTintList
    208:209:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    118:118:boolean setVisible(boolean,boolean) -> setVisible
    226:235:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    178:179:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    97:152:void <init>(android.content.Context) -> <init>
    326:401:void draw(android.graphics.Canvas) -> draw
    171:171:float getArrowHeadLength() -> getArrowHeadLength
    190:190:float getArrowShaftLength() -> getArrowShaftLength
    197:197:float getBarLength() -> getBarLength
    247:247:float getBarThickness() -> getBarThickness
    227:227:int getColor() -> getColor
    311:311:int getDirection() -> getDirection
    256:256:float getGapSize() -> getGapSize
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> getPaint
    437:437:float getProgress() -> getProgress
    289:289:boolean isSpinEnabled() -> isSpinEnabled
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    160:164:void setArrowHeadLength(float) -> setArrowHeadLength
    180:184:void setArrowShaftLength(float) -> setArrowShaftLength
    206:210:void setBarLength(float) -> setBarLength
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:281:void setDirection(int) -> setDirection
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    89:90:void <init>() -> <init>
    404:409:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    415:419:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    100:105:void addState(int[],android.graphics.drawable.Drawable) -> addState
    392:394:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    325:327:void clearMutated() -> clearMutated
    80:80:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    320:320:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    235:254:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    269:269:int getStateCount() -> getStateCount
    293:293:android.graphics.drawable.Drawable getStateDrawable(int) -> getStateDrawable
    305:305:int getStateDrawableIndex(int[]) -> getStateDrawableIndex
    258:258:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState() -> getStateListState
    281:281:int[] getStateSet(int) -> getStateSet
    144:151:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    180:226:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    109:109:boolean isStateful() -> isStateful
    311:315:android.graphics.drawable.Drawable mutate() -> mutate
    114:123:boolean onStateChange(int[]) -> onStateChange
    398:402:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    157:172:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    333:340:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    352:354:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    382:386:void growArray(int,int) -> growArray
    358:365:int indexOfStateSet(int[]) -> indexOfStateSet
    344:349:void mutate() -> mutate
    371:371:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    377:377:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.resources.Compatibility -> androidx.appcompat.resources.Compatibility:
    44:46:void <init>() -> <init>
androidx.appcompat.resources.Compatibility$Api15Impl -> androidx.appcompat.resources.Compatibility$Api15Impl:
    89:91:void <init>() -> <init>
    96:97:void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean) -> getValueForDensity
androidx.appcompat.resources.Compatibility$Api18Impl -> androidx.appcompat.resources.Compatibility$Api18Impl:
    77:79:void <init>() -> <init>
    83:84:void setAutoCancel(android.animation.ObjectAnimator,boolean) -> setAutoCancel
androidx.appcompat.resources.Compatibility$Api21Impl -> androidx.appcompat.resources.Compatibility$Api21Impl:
    50:52:void <init>() -> <init>
    71:71:android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    63:63:int getChangingConfigurations(android.content.res.TypedArray) -> getChangingConfigurations
    58:59:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    153:153:boolean isTitleOptional() -> isTitleOptional
    225:225:boolean isUiFocusable() -> isUiFocusable
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:105:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    200:200:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:126:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    161:167:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    147:156:android.content.res.Resources$Theme getTheme() -> getTheme
    142:142:int getThemeResId() -> getThemeResId
    186:195:void initializeTheme() -> initializeTheme
    182:183:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    131:135:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    130:130:android.view.View getCustomView() -> getCustomView
    115:115:android.view.Menu getMenu() -> getMenu
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    125:125:java.lang.CharSequence getSubtitle() -> getSubtitle
    120:120:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    166:166:boolean isUiFocusable() -> isUiFocusable
    144:144:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    156:156:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    140:140:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    160:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    147:152:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:137:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:259:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    530:532:void addItem() -> addItem
    535:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    542:542:boolean hasAddedItem() -> hasAddedItem
    549:556:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:527:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:55:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    53:85:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    437:449:void applyIconTint() -> applyIconTint
    371:371:boolean collapseActionView() -> collapseActionView
    366:366:boolean expandActionView() -> expandActionView
    340:340:android.view.ActionProvider getActionProvider() -> getActionProvider
    330:330:android.view.View getActionView() -> getActionView
    94:94:int getAlphabeticModifiers() -> getAlphabeticModifiers
    89:89:char getAlphabeticShortcut() -> getAlphabeticShortcut
    392:392:java.lang.CharSequence getContentDescription() -> getContentDescription
    99:99:int getGroupId() -> getGroupId
    104:104:android.graphics.drawable.Drawable getIcon() -> getIcon
    418:418:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    433:433:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    109:109:android.content.Intent getIntent() -> getIntent
    114:114:int getItemId() -> getItemId
    119:119:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    129:129:int getNumericModifiers() -> getNumericModifiers
    124:124:char getNumericShortcut() -> getNumericShortcut
    134:134:int getOrder() -> getOrder
    139:139:android.view.SubMenu getSubMenu() -> getSubMenu
    350:350:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    144:144:java.lang.CharSequence getTitle() -> getTitle
    149:149:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    403:403:java.lang.CharSequence getTooltipText() -> getTooltipText
    154:154:boolean hasSubMenu() -> hasSubMenu
    296:305:boolean invoke() -> invoke
    376:376:boolean isActionViewExpanded() -> isActionViewExpanded
    159:159:boolean isCheckable() -> isCheckable
    164:164:boolean isChecked() -> isChecked
    169:169:boolean isEnabled() -> isEnabled
    174:174:boolean isVisible() -> isVisible
    315:315:boolean requiresActionButton() -> requiresActionButton
    320:320:boolean requiresOverflow() -> requiresOverflow
    335:335:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    325:325:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    345:345:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    179:180:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    185:187:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    192:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    203:204:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    386:387:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    209:210:android.view.MenuItem setEnabled(boolean) -> setEnabled
    197:198:androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    215:218:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    223:226:android.view.MenuItem setIcon(int) -> setIcon
    408:413:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    423:428:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    231:232:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    237:238:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    243:245:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    381:381:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    250:251:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    256:258:android.view.MenuItem setShortcut(char,char) -> setShortcut
    264:268:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    311:311:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    360:361:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    355:355:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    273:274:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    279:280:android.view.MenuItem setTitle(int) -> setTitle
    285:286:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    397:398:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    291:292:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    254:254:boolean showsIcon() -> showsIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    239:239:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    234:234:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    229:229:boolean flagActionItems() -> flagActionItems
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    244:244:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:224:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    248:249:void setId(int) -> setId
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    34:36:void <init>(android.content.Context) -> <init>
    39:58:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    62:78:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    83:89:void internalClear() -> internalClear
    92:101:void internalRemoveGroup(int) -> internalRemoveGroup
    104:113:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:238:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    355:362:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    792:792:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    246:255:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    288:299:void dismiss() -> dismiss
    656:663:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    517:524:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    538:581:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    727:727:boolean flagActionItems() -> flagActionItems
    316:318:int getInitialMenuPosition() -> getInitialMenuPosition
    766:768:android.widget.ListView getListView() -> getListView
    330:349:int getNextMenuPosition(int) -> getNextMenuPosition
    589:589:boolean isShowing() -> isShowing
    668:723:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:613:void onDismiss() -> onDismiss
    303:307:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    737:737:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    732:732:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    630:646:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    750:757:void setAnchorView(android.view.View) -> setAnchorView
    624:625:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    242:243:void setForceShowIcon(boolean) -> setForceShowIcon
    741:746:void setGravity(int) -> setGravity
    773:775:void setHorizontalOffset(int) -> setHorizontalOffset
    761:762:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    785:786:void setShowTitle(boolean) -> setShowTitle
    779:781:void setVerticalOffset(int) -> setVerticalOffset
    260:280:void show() -> show
    370:504:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    617:620:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    801:805:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    808:808:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    78:98:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    138:139:void addContentView(android.view.View) -> addContentView
    142:147:void addContentView(android.view.View,int) -> addContentView
    347:355:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    327:330:android.view.LayoutInflater getInflater() -> getInflater
    166:166:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    124:135:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    309:314:void insertCheckBox() -> insertCheckBox
    294:298:void insertIconView() -> insertIconView
    301:306:void insertRadioButton() -> insertRadioButton
    102:120:void onFinishInflate() -> onFinishInflate
    282:291:void onMeasure(int,int) -> onMeasure
    318:318:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:213:void setCheckable(boolean) -> setCheckable
    219:232:void setChecked(boolean) -> setChecked
    150:151:void setForceShowIcon(boolean) -> setForceShowIcon
    339:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    256:278:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    242:252:void setShortcut(boolean,char) -> setShortcut
    235:238:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    155:162:void setTitle(java.lang.CharSequence) -> setTitle
    323:323:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    161:161:int getItemIndexOffset() -> getItemIndexOffset
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:204:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:197:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    207:208:void setId(int) -> setId
    165:169:void setItemIndexOffset(int) -> setItemIndexOffset
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    53:53:boolean getForceShowIcon() -> getForceShowIcon
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:236:void <init>(android.content.Context) -> <init>
    466:466:android.view.MenuItem add(java.lang.CharSequence) -> add
    471:471:android.view.MenuItem add(int) -> add
    476:476:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    481:481:android.view.MenuItem add(int,int,int,int) -> add
    520:544:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    441:454:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    250:251:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    263:266:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    486:486:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    491:491:android.view.SubMenu addSubMenu(int) -> addSubMenu
    496:500:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    505:505:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    841:844:void changeMenuMode() -> changeMenuMode
    604:610:void clear() -> clear
    592:600:void clearAll() -> clearAll
    1213:1218:void clearHeader() -> clearHeader
    1030:1042:void close(boolean) -> close
    1046:1047:void close() -> close
    1373:1391:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    460:460:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    834:834:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    284:296:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    344:362:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    321:341:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    300:317:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1351:1369:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    724:724:int findGroupIndex(int) -> findGroupIndex
    728:742:int findGroupIndex(int,int) -> findGroupIndex
    847:854:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    693:707:android.view.MenuItem findItem(int) -> findItem
    711:720:int findItemIndex(int) -> findItemIndex
    930:965:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    882:914:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1163:1200:void flagActionItems() -> flagActionItems
    1203:1204:java.util.ArrayList getActionItems() -> getActionItems
    430:430:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    830:830:android.content.Context getContext() -> getContext
    1395:1395:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1316:1316:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1312:1312:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1320:1320:android.view.View getHeaderView() -> getHeaderView
    752:752:android.view.MenuItem getItem(int) -> getItem
    1208:1209:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1347:1347:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    779:785:int getOrdering(int) -> getOrdering
    826:826:android.content.res.Resources getResources() -> getResources
    1328:1328:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1118:1133:java.util.ArrayList getVisibleItems() -> getVisibleItems
    675:688:boolean hasVisibleItems() -> hasVisibleItems
    514:514:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    792:792:boolean isQwertyMode() -> isQwertyMode
    757:757:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    822:822:boolean isShortcutsVisible() -> isShortcutsVisible
    1112:1114:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1101:1103:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1057:1070:void onItemsChanged(boolean) -> onItemsChanged
    971:971:boolean performIdentifierAction(int,int) -> performIdentifierAction
    975:975:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    979:1018:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    859:871:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    554:567:void removeGroup(int) -> removeGroup
    549:550:void removeItem(int) -> removeItem
    588:589:void removeItemAt(int) -> removeItemAt
    580:585:void removeItemAtInt(int,boolean) -> removeItemAtInt
    275:281:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    400:427:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    369:370:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    373:397:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    365:366:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    434:435:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1339:1340:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    239:240:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    613:628:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    632:641:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    510:511:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    663:671:void setGroupEnabled(int,boolean) -> setGroupEnabled
    645:659:void setGroupVisible(int,boolean) -> setGroupVisible
    1283:1284:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1295:1296:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1222:1249:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1259:1260:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1271:1272:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1307:1308:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1343:1344:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1404:1405:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    762:765:void setQwertyMode(boolean) -> setQwertyMode
    803:809:void setShortcutsVisible(boolean) -> setShortcutsVisible
    812:816:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    747:747:int size() -> size
    1086:1092:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1078:1083:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    43:45:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    140:143:void dismiss() -> dismiss
    170:171:void onClick(android.content.DialogInterface,int) -> onClick
    152:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    147:148:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:126:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    162:165:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    131:132:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    54:91:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:851:boolean collapseActionView() -> collapseActionView
    824:833:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    233:233:java.lang.Runnable getCallback() -> getCallback
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:861:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:867:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    720:725:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:61:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    484:485:void refreshVisibility() -> refreshVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    69:70:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    74:75:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View) -> <init>
    80:81:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    61:340:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    230:265:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    304:307:void dismiss() -> dismiss
    140:140:int getGravity() -> getGravity
    351:351:android.widget.ListView getListView() -> getListView
    161:164:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    326:326:boolean isShowing() -> isShowing
    318:323:void onDismiss() -> onDismiss
    106:107:void setAnchorView(android.view.View) -> setAnchorView
    119:123:void setForceShowIcon(boolean) -> setForceShowIcon
    133:134:void setGravity(int) -> setGravity
    95:96:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    331:335:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    144:147:void show() -> show
    150:153:void show(int,int) -> show
    269:297:void showPopup(int,int,boolean,boolean) -> showPopup
    174:183:boolean tryShow() -> tryShow
    210:219:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    340:340:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    343:344:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:46:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    43:47:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    138:138:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    90:91:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    133:133:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    143:147:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    75:75:android.view.MenuItem getItem() -> getItem
    70:70:android.view.Menu getParentMenu() -> getParentMenu
    85:85:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    157:157:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    56:56:boolean isQwertyMode() -> isQwertyMode
    66:66:boolean isShortcutsVisible() -> isShortcutsVisible
    80:81:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    152:153:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    108:108:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    113:113:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    118:118:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    123:123:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    128:128:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    96:97:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    102:103:android.view.SubMenu setIcon(int) -> setIcon
    51:52:void setQwertyMode(boolean) -> setQwertyMode
    61:62:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    54:55:void <init>(android.content.Context) -> <init>
    58:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    39:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    36:36:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    36:36:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    181:183:void animateToVisibility(int) -> animateToVisibility
    237:237:boolean canShowOverflowMenu() -> canShowOverflowMenu
    241:244:void dismissPopupMenus() -> dismissPopupMenus
    153:156:int getAnimatedVisibility() -> getAnimatedVisibility
    146:146:int getContentHeight() -> getContentHeight
    212:215:boolean hideOverflowMenu() -> hideOverflowMenu
    226:229:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    219:222:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    233:233:boolean isOverflowReserved() -> isOverflowReserved
    248:254:int measureChildView(android.view.View,int,int,int) -> measureChildView
    258:258:int next(int,int,boolean) -> next
    75:87:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:137:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    96:112:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    262:272:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    203:209:void postShowOverflowMenu() -> postShowOverflowMenu
    141:143:void setContentHeight(int) -> setContentHeight
    187:193:void setVisibility(int) -> setVisibility
    160:176:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    196:199:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.AbsActionBarView$1 -> androidx.appcompat.widget.AbsActionBarView$1:
    203:203:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    206:207:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    275:276:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    302:303:void onAnimationCancel(android.view.View) -> onAnimationCancel
    294:298:void onAnimationEnd(android.view.View) -> onAnimationEnd
    288:290:void onAnimationStart(android.view.View) -> onAnimationStart
    281:283:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:178:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:41:void animateToVisibility(int) -> animateToVisibility
    41:41:boolean canShowOverflowMenu() -> canShowOverflowMenu
    195:199:void closeMode() -> closeMode
    41:41:void dismissPopupMenus() -> dismissPopupMenus
    239:239:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    244:244:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    41:41:int getAnimatedVisibility() -> getAnimatedVisibility
    41:41:int getContentHeight() -> getContentHeight
    132:132:java.lang.CharSequence getSubtitle() -> getSubtitle
    128:128:java.lang.CharSequence getTitle() -> getTitle
    221:224:boolean hideOverflowMenu() -> hideOverflowMenu
    163:192:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    136:160:void initTitle() -> initTitle
    41:41:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    229:232:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    41:41:boolean isOverflowReserved() -> isOverflowReserved
    371:371:boolean isTitleOptional() -> isTitleOptional
    202:209:void killMode() -> killMode
    89:94:void onDetachedFromWindow() -> onDetachedFromWindow
    41:41:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    329:356:void onLayout(boolean,int,int,int,int) -> onLayout
    249:325:void onMeasure(int,int) -> onMeasure
    41:41:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    41:41:void postShowOverflowMenu() -> postShowOverflowMenu
    98:99:void setContentHeight(int) -> setContentHeight
    102:114:void setCustomView(android.view.View) -> setCustomView
    123:125:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    117:120:void setTitle(java.lang.CharSequence) -> setTitle
    364:368:void setTitleOptional(boolean) -> setTitleOptional
    41:41:void setVisibility(int) -> setVisibility
    41:41:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    360:360:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    213:216:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    172:172:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    175:176:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    147:147:void <clinit>() -> <clinit>
    155:156:void <init>(android.content.Context) -> <init>
    71:163:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    741:743:void addActionBarHideOffset() -> addActionBarHideOffset
    287:305:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    822:823:boolean canShowOverflowMenu() -> canShowOverflowMenu
    404:404:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    876:878:void dismissPopups() -> dismissPopups
    543:552:void draw(android.graphics.Canvas) -> draw
    311:313:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    63:63:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    389:389:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    63:63:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    394:394:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    399:399:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    707:707:int getActionBarHideOffset() -> getActionBarHideOffset
    682:688:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    670:670:int getNestedScrollAxes() -> getNestedScrollAxes
    765:766:java.lang.CharSequence getTitle() -> getTitle
    718:723:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    792:793:boolean hasIcon() -> hasIcon
    798:799:boolean hasLogo() -> hasLogo
    846:847:boolean hideOverflowMenu() -> hideOverflowMenu
    166:176:void init(android.content.Context) -> init
    771:783:void initFeature(int) -> initFeature
    703:703:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    211:211:boolean isInOverlayMode() -> isInOverlayMode
    834:835:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    828:829:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    347:384:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    241:244:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    180:182:void onDetachedFromWindow() -> onDetachedFromWindow
    520:539:void onLayout(boolean,int,int,int,int) -> onLayout
    410:516:void onMeasure(int,int) -> onMeasure
    646:655:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    665:665:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    598:601:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    661:661:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    564:565:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    591:594:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    626:628:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    576:579:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    615:621:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    571:571:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    607:610:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    583:586:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    632:642:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    253:274:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    278:283:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    731:733:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    726:728:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    674:679:void pullChildren() -> pullChildren
    736:738:void removeActionBarHideOffset() -> removeActionBarHideOffset
    870:872:void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    864:866:void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    711:715:void setActionBarHideOffset(int) -> setActionBarHideOffset
    185:196:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    215:216:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    693:700:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    804:806:void setIcon(int) -> setIcon
    810:812:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    816:818:void setLogo(int) -> setLogo
    858:860:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    852:854:void setMenuPrepared() -> setMenuPrepared
    199:208:void setOverlayMode(boolean) -> setOverlayMode
    237:237:void setShowingForActionMode(boolean) -> setShowingForActionMode
    788:788:void setUiOptions(int) -> setUiOptions
    753:755:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    759:761:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    556:556:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    746:748:boolean shouldHideActionBarOnFling(float) -> shouldHideActionBarOnFling
    840:841:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    114:114:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    123:125:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    117:119:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    128:128:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    131:134:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    137:137:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    140:144:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    882:883:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    886:887:void <init>(int,int) -> <init>
    890:891:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    894:895:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    54:54:androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter) -> access$600
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    373:375:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    413:543:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    354:365:boolean hideOverflowMenu() -> hideOverflowMenu
    384:388:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    399:399:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    395:395:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    406:406:boolean isOverflowReserved() -> isOverflowReserved
    548:550:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    561:573:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    554:556:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    577:583:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    153:155:void setItemLimit(int) -> setItemLimit
    586:588:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    142:145:void setWidthLimit(int,boolean) -> setWidthLimit
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    733:743:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    747:751:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    800:801:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    805:805:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    782:784:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    788:796:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    628:667:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    687:687:boolean needsDividerAfter() -> needsDividerAfter
    682:682:boolean needsDividerBefore() -> needsDividerBefore
    671:677:boolean performClick() -> performClick
    692:709:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    638:638:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    641:645:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    650:651:boolean onForwardingStarted() -> onForwardingStarted
    659:664:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    715:719:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    723:729:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    755:756:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    769:776:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    760:764:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    611:611:void <clinit>() -> <clinit>
    594:595:void <init>() -> <init>
    597:599:void <init>(android.os.Parcel) -> <init>
    603:603:int describeContents() -> describeContents
    608:609:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    612:612:void <init>() -> <init>
    612:612:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    615:615:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    612:612:java.lang.Object[] newArray(int) -> newArray
    620:620:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    79:80:void <init>(android.content.Context) -> <init>
    83:90:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    50:50:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    50:50:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    116:116:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    407:437:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    131:141:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    442:540:void onLayout(boolean,int,int,int,int) -> onLayout
    150:177:void onMeasure(int,int) -> onMeasure
    181:390:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    144:145:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    100:108:void setPopupTheme(int) -> setPopupTheme
    125:127:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
    851:853:void <init>(int,int,boolean) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    156:222:void <clinit>() -> <clinit>
    228:353:void <init>(android.content.Context,java.lang.String) -> <init>
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    456:487:android.content.Intent chooseActivity(int) -> chooseActivity
    654:661:void ensureConsistentState() -> ensureConsistentState
    329:336:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    409:412:android.content.pm.ResolveInfo getActivity(int) -> getActivity
    394:397:int getActivityCount() -> getActivityCount
    423:434:int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    511:517:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    630:632:int getHistoryMaxSize() -> getHistoryMaxSize
    641:644:int getHistorySize() -> getHistorySize
    381:383:android.content.Intent getIntent() -> getIntent
    687:699:boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    565:577:void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    710:717:boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    964:1032:void readHistoricalDataImpl() -> readHistoricalDataImpl
    587:596:void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    531:553:void setDefaultActivity(int) -> setDefaultActivity
    612:622:void setHistoryMaxSize(int) -> setHistoryMaxSize
    365:373:void setIntent(android.content.Intent) -> setIntent
    496:499:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    671:677:boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo:
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    852:852:int compareTo(java.lang.Object) -> compareTo
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> androidx.appcompat.widget.ActivityChooserModel$DefaultSorter:
    918:922:void <init>() -> <init>
    927:960:void sort(android.content.Intent,java.util.List,java.util.List) -> sort
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord:
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    1040:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1100:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    201:202:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    135:296:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    416:423:boolean dismissPopup() -> dismissPopup
    489:489:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    533:541:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    432:432:boolean isShowingPopup() -> isShowingPopup
    437:443:void onAttachedToWindow() -> onAttachedToWindow
    447:460:void onDetachedFromWindow() -> onDetachedFromWindow
    478:482:void onLayout(boolean,int,int,int,int) -> onLayout
    464:474:void onMeasure(int,int) -> onMeasure
    305:310:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    524:525:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    338:340:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    324:325:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    510:511:void setInitialActivityCount(int) -> setInitialActivityCount
    498:499:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    348:349:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    357:362:boolean showPopup() -> showPopup
    371:408:void showPopupUnchecked(int) -> showPopupUnchecked
    549:577:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:141:void onChanged() -> onChanged
    144:146:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:162:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
    254:254:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    257:259:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
    261:261:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    264:264:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    269:270:boolean onForwardingStarted() -> onForwardingStarted
    275:276:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
    285:285:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    288:290:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
    687:696:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    840:840:int getActivityCount() -> getActivityCount
    726:734:int getCount() -> getCount
    848:848:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    829:829:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    844:844:int getHistorySize() -> getHistorySize
    739:749:java.lang.Object getItem(int) -> getItem
    755:755:long getItemId(int) -> getItemId
    712:715:int getItemViewType(int) -> getItemViewType
    862:862:boolean getShowDefaultActivity() -> getShowDefaultActivity
    760:793:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    721:721:int getViewTypeCount() -> getViewTypeCount
    800:818:int measureContentWidth() -> measureContentWidth
    699:708:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
    822:826:void setMaxActivityCount(int) -> setMaxActivityCount
    853:859:void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    833:837:void setShowFooterView(boolean) -> setShowFooterView
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
    585:586:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    664:667:void notifyOnDismissListener() -> notifyOnDismissListener
    623:638:void onClick(android.view.View) -> onClick
    657:661:void onDismiss() -> onDismiss
    591:618:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    643:651:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    873:873:void <clinit>() -> <clinit>
    878:882:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    62:62:void <clinit>() -> <clinit>
    72:73:void <init>(android.content.Context) -> <init>
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:102:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    219:226:void drawableStateChanged() -> drawableStateChanged
    257:258:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    185:186:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    213:214:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    125:138:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    279:279:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    238:240:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    155:159:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    147:151:void setBackgroundResource(int) -> setBackgroundResource
    250:252:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    142:143:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    274:275:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    269:270:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    170:173:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    198:201:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    230:234:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatAutoCompleteTextView$InspectionCompanion -> androidx.appcompat.widget.AppCompatAutoCompleteTextView$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatAutoCompleteTextView$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    28:31:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    36:41:void readProperties(androidx.appcompat.widget.AppCompatAutoCompleteTextView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    37:46:void <init>(android.view.View) -> <init>
    178:200:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    123:140:void applySupportBackgroundTint() -> applySupportBackgroundTint
    105:105:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    119:119:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    49:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    89:93:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    80:86:void onSetBackgroundResource(int) -> onSetBackgroundResource
    143:153:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    96:102:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    109:116:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    156:160:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    71:72:void <init>(android.content.Context) -> <init>
    75:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:93:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    169:176:void drawableStateChanged() -> drawableStateChanged
    337:344:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    321:328:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    305:312:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    353:360:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    287:296:int getAutoSizeTextType() -> getAutoSizeTextType
    392:393:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    453:456:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    135:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    163:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    415:415:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    437:437:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    473:473:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    188:190:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    194:196:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    200:204:void onLayout(boolean,int,int,int,int) -> onLayout
    219:223:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    461:463:void setAllCaps(boolean) -> setAllCaps
    251:260:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    269:276:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    232:239:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    105:109:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    97:101:void setBackgroundResource(int) -> setBackgroundResource
    385:387:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    468:469:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    443:444:void setFilters(android.text.InputFilter[]) -> setFilters
    373:376:void setSupportAllCaps(boolean) -> setSupportAllCaps
    120:123:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    148:151:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    403:405:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    425:427:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    180:184:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    208:215:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatButton$InspectionCompanion -> androidx.appcompat.widget.AppCompatButton$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatButton$InspectionCompanion.java"}
    21:22:void <init>() -> <init>
    42:63:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    19:19:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    68:79:void readProperties(androidx.appcompat.widget.AppCompatButton,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatButton$InspectionCompanion$1 -> androidx.appcompat.widget.AppCompatButton$InspectionCompanion$1:
# {"id":"sourceFile","fileName":"AppCompatButton$InspectionCompanion.java"}
    45:45:void <init>(androidx.appcompat.widget.AppCompatButton$InspectionCompanion) -> <init>
    45:45:java.lang.Object apply(int) -> apply
    48:54:java.lang.String apply(int) -> apply
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    75:90:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    247:254:void drawableStateChanged() -> drawableStateChanged
    118:121:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    97:100:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    197:198:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    225:226:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    144:146:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    169:171:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    274:274:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    263:265:void setAllCaps(boolean) -> setAllCaps
    231:235:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    239:243:void setBackgroundResource(int) -> setBackgroundResource
    105:109:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    113:114:void setButtonDrawable(int) -> setButtonDrawable
    269:270:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    258:259:void setFilters(android.text.InputFilter[]) -> setFilters
    182:185:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    210:213:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    131:134:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    156:159:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckBox$InspectionCompanion -> androidx.appcompat.widget.AppCompatCheckBox$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatCheckBox$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.AppCompatCheckBox,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    76:77:void <init>(android.content.Context) -> <init>
    80:81:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    85:101:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    251:261:void drawableStateChanged() -> drawableStateChanged
    284:285:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    294:297:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    193:194:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    221:222:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    138:140:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    165:167:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    314:314:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    266:266:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    302:304:void setAllCaps(boolean) -> setAllCaps
    227:231:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    235:239:void setBackgroundResource(int) -> setBackgroundResource
    105:109:void setCheckMarkDrawable(android.graphics.drawable.Drawable) -> setCheckMarkDrawable
    113:114:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    277:279:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    309:310:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    178:181:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    206:209:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    124:127:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    151:154:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
    243:247:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCheckedTextView$InspectionCompanion -> androidx.appcompat.widget.AppCompatCheckedTextView$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatCheckedTextView$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.AppCompatCheckedTextView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatCheckedTextViewHelper -> androidx.appcompat.widget.AppCompatCheckedTextViewHelper:
    43:52:void <init>(android.widget.CheckedTextView) -> <init>
    133:151:void applyCheckMarkTint() -> applyCheckMarkTint
    108:108:android.content.res.ColorStateList getSupportCheckMarkTintList() -> getSupportCheckMarkTintList
    119:119:android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode() -> getSupportCheckMarkTintMode
    55:98:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    123:130:void onSetCheckMarkDrawable() -> onSetCheckMarkDrawable
    101:105:void setSupportCheckMarkTintList(android.content.res.ColorStateList) -> setSupportCheckMarkTintList
    112:116:void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode) -> setSupportCheckMarkTintMode
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    39:48:void <init>(android.widget.CompoundButton) -> <init>
    127:145:void applyButtonTint() -> applyButtonTint
    148:156:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    102:102:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    113:113:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    51:92:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    117:124:void onSetButtonDrawable() -> onSetButtonDrawable
    95:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    106:110:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    54:54:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:android.graphics.PorterDuff$Mode access$000() -> access$000
    465:469:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    475:475:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    507:507:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    498:498:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    483:485:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    489:489:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    58:460:void preload() -> preload
    502:503:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    494:494:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    62:128:void <init>() -> <init>
    360:365:boolean arrayContains(int[],int) -> arrayContains
    143:143:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    154:181:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    148:149:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    136:137:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    234:254:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    185:228:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    260:309:android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> getRatingBarLayerDrawable
    372:396:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    450:456:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    313:318:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    323:356:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    402:445:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    87:88:void <init>(android.content.Context) -> <init>
    91:92:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    96:113:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    239:246:void drawableStateChanged() -> drawableStateChanged
    296:297:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    205:206:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    233:234:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    75:75:java.lang.CharSequence getText() -> getText
    157:162:android.text.Editable getText() -> getText
    324:327:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    136:149:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    392:392:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    265:279:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    332:335:boolean onDragEvent(android.view.DragEvent) -> onDragEvent
    371:371:androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
    346:349:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    175:179:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    167:171:void setBackgroundResource(int) -> setBackgroundResource
    289:291:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    387:388:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    382:383:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    190:193:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    218:221:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    250:254:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    306:311:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatEditText$InspectionCompanion -> androidx.appcompat.widget.AppCompatEditText$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatEditText$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    28:31:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    36:41:void readProperties(androidx.appcompat.widget.AppCompatEditText,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatEmojiEditTextHelper -> androidx.appcompat.widget.AppCompatEmojiEditTextHelper:
    50:54:void <init>(android.widget.EditText) -> <init>
    123:126:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    86:86:boolean isEmojiCapableKeyListener(android.text.method.KeyListener) -> isEmojiCapableKeyListener
    103:103:boolean isEnabled() -> isEnabled
    63:75:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    148:148:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    96:97:void setEnabled(boolean) -> setEnabled
androidx.appcompat.widget.AppCompatEmojiTextHelper -> androidx.appcompat.widget.AppCompatEmojiTextHelper:
    41:44:void <init>(android.widget.TextView) -> <init>
    99:99:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    84:84:boolean isEnabled() -> isEnabled
    52:64:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    109:110:void setAllCaps(boolean) -> setAllCaps
    77:78:void setEnabled(boolean) -> setEnabled
    122:122:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    43:44:void <init>() -> <init>
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    69:70:void <init>(android.content.Context) -> <init>
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    256:263:void drawableStateChanged() -> drawableStateChanged
    167:168:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    195:196:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    222:223:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    250:251:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    267:267:boolean hasOverlappingRendering() -> hasOverlappingRendering
    137:141:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    129:133:void setBackgroundResource(int) -> setBackgroundResource
    113:117:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    97:109:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    272:274:void setImageLevel(int) -> setImageLevel
    92:93:void setImageResource(int) -> setImageResource
    121:125:void setImageURI(android.net.Uri) -> setImageURI
    152:155:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    180:183:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    207:210:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    235:238:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageButton$InspectionCompanion -> androidx.appcompat.widget.AppCompatImageButton$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatImageButton$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.AppCompatImageButton,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    46:50:void <init>(android.widget.ImageView) -> <init>
    201:223:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    238:241:void applyImageLevel() -> applyImageLevel
    142:163:void applySupportImageTint() -> applySupportImageTint
    124:124:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    138:138:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    104:111:boolean hasOverlappingRendering() -> hasOverlappingRendering
    53:87:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    231:232:void obtainLevelFromDrawable(android.graphics.drawable.Drawable) -> obtainLevelFromDrawable
    90:101:void setImageResource(int) -> setImageResource
    166:176:void setInternalImageTint(android.content.res.ColorStateList) -> setInternalImageTint
    115:121:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    128:135:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    179:183:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    69:70:void <init>(android.content.Context) -> <init>
    73:74:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    268:275:void drawableStateChanged() -> drawableStateChanged
    178:179:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    206:207:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    234:235:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    262:263:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    279:279:boolean hasOverlappingRendering() -> hasOverlappingRendering
    148:152:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    140:144:void setBackgroundResource(int) -> setBackgroundResource
    124:128:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    108:120:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    284:286:void setImageLevel(int) -> setImageLevel
    100:104:void setImageResource(int) -> setImageResource
    132:136:void setImageURI(android.net.Uri) -> setImageURI
    163:166:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    191:194:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    219:222:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    247:250:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageView$InspectionCompanion -> androidx.appcompat.widget.AppCompatImageView$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatImageView$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.AppCompatImageView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    59:59:void <clinit>() -> <clinit>
    69:70:void <init>(android.content.Context) -> <init>
    74:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    79:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    217:224:void drawableStateChanged() -> drawableStateChanged
    183:184:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    211:212:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    123:136:void initEmojiKeyListener(androidx.appcompat.widget.AppCompatEmojiEditTextHelper) -> initEmojiKeyListener
    259:259:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    236:238:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    153:157:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    145:149:void setBackgroundResource(int) -> setBackgroundResource
    140:141:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    254:255:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    249:250:void setKeyListener(android.text.method.KeyListener) -> setKeyListener
    168:171:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    196:199:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    228:232:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView$InspectionCompanion -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatMultiAutoCompleteTextView$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    28:31:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    37:42:void readProperties(androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    40:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    41:41:void <clinit>() -> <clinit>
    50:52:void <init>(android.widget.ProgressBar) -> <init>
    147:148:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    152:152:android.graphics.Bitmap getSampleTile() -> getSampleTile
    55:69:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:120:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    129:143:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl -> androidx.appcompat.widget.AppCompatProgressBarHelper$Api23Impl:
    157:159:void <init>() -> <init>
    165:174:void transferLayerProperties(android.graphics.drawable.LayerDrawable,android.graphics.drawable.LayerDrawable,int) -> transferLayerProperties
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    246:253:void drawableStateChanged() -> drawableStateChanged
    116:119:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    95:98:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    196:197:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    224:225:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    142:144:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    167:169:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    273:273:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    262:264:void setAllCaps(boolean) -> setAllCaps
    230:234:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    238:242:void setBackgroundResource(int) -> setBackgroundResource
    103:107:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    111:112:void setButtonDrawable(int) -> setButtonDrawable
    268:269:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    257:258:void setFilters(android.text.InputFilter[]) -> setFilters
    181:184:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    209:212:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    129:132:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    154:157:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRadioButton$InspectionCompanion -> androidx.appcompat.widget.AppCompatRadioButton$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatRadioButton$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.AppCompatRadioButton,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    42:43:void <init>(android.content.Context) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:57:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    60:69:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatReceiveContentHelper -> androidx.appcompat.widget.AppCompatReceiveContentHelper:
    47:47:void <init>() -> <init>
    85:113:boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent) -> maybeHandleDragEventViaPerformReceiveContent
    59:73:boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int) -> maybeHandleMenuActionViaPerformReceiveContent
    158:165:android.app.Activity tryGetActivity(android.view.View) -> tryGetActivity
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl -> androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl:
    118:118:void <init>() -> <init>
    123:134:boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity) -> onDropForTextView
    140:144:boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity) -> onDropForView
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    41:42:void <init>(android.content.Context) -> <init>
    45:46:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    66:68:void drawableStateChanged() -> drawableStateChanged
    72:74:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    59:62:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:44:void <init>(android.widget.SeekBar) -> <init>
    128:145:void applyTickMarkTint() -> applyTickMarkTint
    165:185:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    154:159:void drawableStateChanged() -> drawableStateChanged
    100:100:android.graphics.drawable.Drawable getTickMark() -> getTickMark
    112:112:android.content.res.ColorStateList getTickMarkTintList() -> getTickMarkTintList
    124:124:android.graphics.PorterDuff$Mode getTickMarkTintMode() -> getTickMarkTintMode
    148:151:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:77:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    80:96:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
    104:108:void setTickMarkTintList(android.content.res.ColorStateList) -> setTickMarkTintList
    116:120:void setTickMarkTintMode(android.graphics.PorterDuff$Mode) -> setTickMarkTintMode
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    81:81:void <clinit>() -> <clinit>
    118:119:void <init>(android.content.Context) -> <init>
    134:135:void <init>(android.content.Context,int) -> <init>
    146:147:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    162:163:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    182:183:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    108:304:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    560:600:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    553:557:void drawableStateChanged() -> drawableStateChanged
    375:378:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    349:352:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    394:397:int getDropDownWidth() -> getDropDownWidth
    605:605:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    330:333:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    311:311:android.content.Context getPopupContext() -> getPopupContext
    474:474:java.lang.CharSequence getPrompt() -> getPrompt
    518:519:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    547:548:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    421:426:void onDetachedFromWindow() -> onDetachedFromWindow
    438:447:void onMeasure(int,int) -> onMeasure
    627:653:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    619:622:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    430:433:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    451:460:boolean performClick() -> performClick
    78:78:void setAdapter(android.widget.Adapter) -> setAdapter
    406:417:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    487:491:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    479:483:void setBackgroundResource(int) -> setBackgroundResource
    359:365:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    340:345:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    385:390:void setDropDownWidth(int) -> setDropDownWidth
    316:321:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    325:326:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    465:470:void setPrompt(java.lang.CharSequence) -> setPrompt
    503:506:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    532:535:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    609:614:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    266:266:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    269:269:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    275:278:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    634:634:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    637:648:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    860:860:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    868:872:void dismiss() -> dismiss
    939:939:android.graphics.drawable.Drawable getBackground() -> getBackground
    891:891:java.lang.CharSequence getHintText() -> getHintText
    949:949:int getHorizontalOffset() -> getHorizontalOffset
    959:959:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    944:944:int getVerticalOffset() -> getVerticalOffset
    876:876:boolean isShowing() -> isShowing
    915:920:void onClick(android.content.DialogInterface,int) -> onClick
    881:882:void setAdapter(android.widget.ListAdapter) -> setAdapter
    924:925:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    934:935:void setHorizontalOffset(int) -> setHorizontalOffset
    954:955:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    886:887:void setPromptText(java.lang.CharSequence) -> setPromptText
    929:930:void setVerticalOffset(int) -> setVerticalOffset
    896:911:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    705:727:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    780:784:boolean areAllItemsEnabled() -> areAllItemsEnabled
    731:731:int getCount() -> getCount
    751:752:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    736:736:java.lang.Object getItem(int) -> getItem
    741:741:long getItemId(int) -> getItemId
    804:804:int getItemViewType(int) -> getItemViewType
    746:746:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    809:809:int getViewTypeCount() -> getViewTypeCount
    757:757:boolean hasStableIds() -> hasStableIds
    814:814:boolean isEmpty() -> isEmpty
    794:798:boolean isEnabled(int) -> isEnabled
    762:765:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    769:772:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    967:988:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    964:964:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    1008:1043:void computeContentWidth() -> computeContentWidth
    998:998:java.lang.CharSequence getHintText() -> getHintText
    1114:1114:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1104:1104:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    992:994:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1109:1110:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    1004:1005:void setPromptText(java.lang.CharSequence) -> setPromptText
    1047:1098:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    977:977:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    980:986:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1073:1073:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1076:1085:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1088:1088:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1091:1095:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$InspectionCompanion -> androidx.appcompat.widget.AppCompatSpinner$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatSpinner$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    28:31:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    36:41:void readProperties(androidx.appcompat.widget.AppCompatSpinner,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    673:673:void <clinit>() -> <clinit>
    659:660:void <init>(android.os.Parcelable) -> <init>
    663:665:void <init>(android.os.Parcel) -> <init>
    669:671:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    674:674:void <init>() -> <init>
    674:674:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    677:677:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    674:674:java.lang.Object[] newArray(int) -> newArray
    682:682:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:44:void <init>(android.widget.TextView) -> <init>
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    73:81:void <init>(android.widget.TextView) -> <init>
    541:544:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    523:538:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    579:580:void autoSizeText() -> autoSizeText
    548:555:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    624:624:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    620:620:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    616:616:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    628:628:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    612:612:int getAutoSizeTextType() -> getAutoSizeTextType
    633:633:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    647:647:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    585:585:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    85:339:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    437:454:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    561:564:void onLayout(boolean,int,int,int,int) -> onLayout
    519:520:void onSetCompoundDrawables() -> onSetCompoundDrawables
    457:512:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    722:725:void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> populateSurroundingTextIfNeeded
    515:516:void setAllCaps(boolean) -> setAllCaps
    601:603:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    607:608:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    593:594:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    637:643:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    651:657:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    672:704:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    660:666:void setCompoundTints() -> setCompoundTints
    569:574:void setTextSize(int,float) -> setTextSize
    589:590:void setTextSizeInternal(int,float) -> setTextSizeInternal
    342:433:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    362:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference) -> <init>
    377:377:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    365:372:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$2 -> androidx.appcompat.widget.AppCompatTextHelper$2:
    443:443:void <init>(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int) -> <init>
    446:447:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    99:100:void <init>(android.content.Context) -> <init>
    103:104:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    93:123:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    538:547:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    240:247:void drawableStateChanged() -> drawableStateChanged
    412:419:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    393:400:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    374:381:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    431:438:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    353:362:int getAutoSizeTextType() -> getAutoSizeTextType
    497:498:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    131:134:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    470:470:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    475:475:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    177:178:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    205:206:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    690:690:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    733:733:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    551:552:java.lang.CharSequence getText() -> getText
    579:582:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    510:510:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    235:235:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    443:445:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    251:255:void onLayout(boolean,int,int,int,int) -> onLayout
    606:608:void onMeasure(int,int) -> onMeasure
    270:274:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    224:226:void setAllCaps(boolean) -> setAllCaps
    310:319:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    332:339:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    287:294:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    147:151:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    139:143:void setBackgroundResource(int) -> setBackgroundResource
    613:617:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    623:627:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    655:659:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    665:674:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    632:636:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    640:649:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    490:492:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    230:231:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    219:220:void setFilters(android.text.InputFilter[]) -> setFilters
    450:455:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    460:466:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    480:481:void setLineHeight(int) -> setLineHeight
    534:535:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    162:165:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    190:193:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    713:715:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    753:755:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    211:215:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    561:566:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    598:602:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    521:522:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    259:266:void setTextSize(int,float) -> setTextSize
    759:778:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextView$InspectionCompanion -> androidx.appcompat.widget.AppCompatTextView$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatTextView$InspectionCompanion.java"}
    21:22:void <init>() -> <init>
    42:63:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    19:19:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    68:79:void readProperties(androidx.appcompat.widget.AppCompatTextView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.AppCompatTextView$InspectionCompanion$1 -> androidx.appcompat.widget.AppCompatTextView$InspectionCompanion$1:
# {"id":"sourceFile","fileName":"AppCompatTextView$InspectionCompanion.java"}
    45:45:void <init>(androidx.appcompat.widget.AppCompatTextView$InspectionCompanion) -> <init>
    45:45:java.lang.Object apply(int) -> apply
    48:54:java.lang.String apply(int) -> apply
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    64:79:void <clinit>() -> <clinit>
    87:162:void <init>(android.widget.TextView) -> <init>
    864:872:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    603:637:void autoSizeText() -> autoSizeText
    510:534:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    640:646:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    734:735:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    779:799:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    822:829:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    805:811:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    697:717:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    467:467:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    451:451:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    435:435:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    480:480:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    421:421:int getAutoSizeTextType() -> getAutoSizeTextType
    899:911:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    879:892:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    722:729:void initTempTextPaint(int) -> initTempTextPaint
    841:857:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    923:923:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    165:243:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    328:344:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    371:401:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    261:291:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    659:690:void setRawTextSize(float) -> setRawTextSize
    651:656:void setTextSizeInternal(int,float) -> setTextSizeInternal
    573:593:boolean setupAutoSizeText() -> setupAutoSizeText
    484:494:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    497:505:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    744:772:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    932:932:boolean supportsAutoSizeText() -> supportsAutoSizeText
    548:570:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl:
    112:112:void <init>() -> <init>
    119:119:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    115:115:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23:
    124:124:void <init>() -> <init>
    129:133:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29 -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29:
    138:138:void <init>() -> <init>
    148:149:void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView) -> computeAndSetTextDirection
    142:142:boolean isHorizontallyScrollable(android.widget.TextView) -> isHorizontallyScrollable
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    158:165:void drawableStateChanged() -> drawableStateChanged
    179:182:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    124:125:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    152:153:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    198:198:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    187:189:void setAllCaps(boolean) -> setAllCaps
    94:98:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    86:90:void setBackgroundResource(int) -> setBackgroundResource
    193:194:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    169:170:void setFilters(android.text.InputFilter[]) -> setFilters
    109:112:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    137:140:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatToggleButton$InspectionCompanion -> androidx.appcompat.widget.AppCompatToggleButton$InspectionCompanion:
# {"id":"sourceFile","fileName":"AppCompatToggleButton$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    28:31:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    36:41:void readProperties(androidx.appcompat.widget.AppCompatToggleButton,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    50:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    156:161:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    186:186:boolean isStacked() -> isStacked
    79:153:void onMeasure(int,int) -> onMeasure
    68:75:void setAllowStacking(boolean) -> setAllowStacking
    165:183:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    60:61:void <init>(android.content.Context) -> <init>
    64:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    78:79:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    197:198:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    202:203:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    187:188:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    192:193:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    177:178:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    182:183:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    208:212:void onAttachedToWindow() -> onAttachedToWindow
    216:220:void onDetachedFromWindow() -> onDetachedFromWindow
    101:174:void onMeasure(int,int) -> onMeasure
    82:83:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    93:97:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    42:43:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:51:void <init>(android.content.Context) -> <init>
    55:82:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    50:53:void <clinit>() -> <clinit>
    55:57:void <init>() -> <init>
    107:137:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    88:100:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    144:154:void forceDrawableStateChange(android.graphics.drawable.Drawable) -> forceDrawableStateChange
    65:74:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    160:174:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DrawableUtils$Api18Impl -> androidx.appcompat.widget.DrawableUtils$Api18Impl:
    189:227:void <clinit>() -> <clinit>
    229:231:void <init>() -> <init>
    236:253:android.graphics.Rect getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DrawableUtils$Api29Impl -> androidx.appcompat.widget.DrawableUtils$Api29Impl:
    259:261:void <init>() -> <init>
    265:265:android.graphics.Insets getOpticalInsets(android.graphics.drawable.Drawable) -> getOpticalInsets
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:129:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    541:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    199:205:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    564:571:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    187:195:void drawableStateChanged() -> drawableStateChanged
    165:165:boolean hasFocus() -> hasFocus
    145:145:boolean hasWindowFocus() -> hasWindowFocus
    155:155:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    230:257:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    291:368:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    470:472:void onDetachedFromWindow() -> onDetachedFromWindow
    481:533:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    429:465:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:218:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    585:600:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    574:580:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    553:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    170:182:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    372:375:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    557:561:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    381:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    399:402:void draw(android.graphics.Canvas) -> draw
    386:387:void setEnabled(boolean) -> setEnabled
    406:409:void setHotspot(float,float) -> setHotspot
    413:416:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    391:394:boolean setState(int[]) -> setState
    420:423:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:56:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    48:49:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    139:143:boolean onForwardingStarted() -> onForwardingStarted
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    153:154:void <init>(android.content.Context) -> <init>
    157:158:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    104:197:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1781:1781:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    342:380:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    315:339:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    383:386:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    389:392:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1341:1360:void forceUniformHeight(int,int) -> forceUniformHeight
    919:938:void forceUniformWidth(int,int) -> forceUniformWidth
    61:61:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1764:1769:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    61:61:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1751:1751:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1774:1774:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    445:493:int getBaseline() -> getBaseline
    503:503:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1371:1371:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    240:240:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    288:288:int getDividerPadding() -> getDividerPadding
    298:298:int getDividerWidth() -> getDividerWidth
    1730:1730:int getGravity() -> getGravity
    1413:1413:int getLocationOffset(android.view.View) -> getLocationOffset
    1425:1425:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1695:1695:int getOrientation() -> getOrientation
    230:230:int getShowDividers() -> getShowDividers
    528:528:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    541:541:int getVirtualChildCount() -> getVirtualChildCount
    553:553:float getWeightSum() -> getWeightSum
    590:604:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    402:402:boolean isBaselineAligned() -> isBaselineAligned
    426:426:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    1545:1666:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1450:1530:void layoutVertical(int,int,int,int) -> layoutVertical
    1401:1403:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    952:1335:void measureHorizontal(int,int) -> measureHorizontal
    1382:1382:int measureNullChild(int) -> measureNullChild
    619:915:void measureVertical(int,int) -> measureVertical
    303:312:void onDraw(android.graphics.Canvas) -> onDraw
    1786:1788:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1792:1794:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1430:1435:void onLayout(boolean,int,int,int,int) -> onLayout
    574:579:void onMeasure(int,int) -> onMeasure
    413:414:void setBaselineAligned(boolean) -> setBaselineAligned
    511:516:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1669:1670:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    251:264:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    276:277:void setDividerPadding(int) -> setDividerPadding
    1707:1719:void setGravity(int) -> setGravity
    1734:1739:void setHorizontalGravity(int) -> setHorizontalGravity
    440:441:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1678:1682:void setOrientation(int) -> setOrientation
    207:211:void setShowDividers(int) -> setShowDividers
    1742:1747:void setVerticalGravity(int) -> setVerticalGravity
    569:570:void setWeightSum(float) -> setWeightSum
    215:215:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion -> androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion:
# {"id":"sourceFile","fileName":"LinearLayoutCompat$InspectionCompanion.java"}
    23:24:void <init>() -> <init>
    46:86:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    21:21:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    91:103:void readProperties(androidx.appcompat.widget.LinearLayoutCompat,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion$1 -> androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion$1:
# {"id":"sourceFile","fileName":"LinearLayoutCompat$InspectionCompanion.java"}
    49:49:void <init>(androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion) -> <init>
    49:49:java.lang.Object apply(int) -> apply
    52:58:java.lang.String apply(int) -> apply
androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion$2 -> androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion$2:
# {"id":"sourceFile","fileName":"LinearLayoutCompat$InspectionCompanion.java"}
    66:66:void <init>(androidx.appcompat.widget.LinearLayoutCompat$InspectionCompanion) -> <init>
    66:66:java.lang.Object apply(int) -> apply
    69:82:java.util.Set apply(int) -> apply
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1805:1806:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1812:1813:void <init>(int,int) -> <init>
    1826:1827:void <init>(int,int,float) -> <init>
    1833:1834:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1840:1841:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    85:110:void <clinit>() -> <clinit>
    225:226:void <init>(android.content.Context) -> <init>
    236:237:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:250:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    116:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1157:1330:int buildDropDown() -> buildDropDown
    847:854:void clearListSelection() -> clearListSelection
    1141:1141:android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    773:778:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    452:452:int getAnimationStyle() -> getAnimationStyle
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    529:529:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    579:579:int getHeight() -> getHeight
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    821:821:int getInputMethodMode() -> getInputMethodMode
    947:947:android.widget.ListView getListView() -> getListView
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    323:323:int getPromptPosition() -> getPromptPosition
    896:899:java.lang.Object getSelectedItem() -> getSelectedItem
    922:925:long getSelectedItemId() -> getSelectedItemId
    909:912:int getSelectedItemPosition() -> getSelectedItemPosition
    935:938:android.view.View getSelectedView() -> getSelectedView
    408:408:int getSoftInputMode() -> getSoftInputMode
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    1428:1428:boolean isConfirmKey(int) -> isConfirmKey
    384:384:boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    977:1057:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1096:1117:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1072:1081:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    880:889:boolean performItemClick(int) -> performItemClick
    655:656:void postShow() -> postShow
    790:797:void removePromptView() -> removePromptView
    288:301:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:472:void setAnchorView(android.view.View) -> setAnchorView
    442:443:void setAnimationStyle(int) -> setAnimationStyle
    433:434:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:573:void setContentWidth(int) -> setContentWidth
    374:375:void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    539:540:void setDropDownGravity(int) -> setDropDownGravity
    518:519:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    358:359:void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    591:597:void setHeight(int) -> setHeight
    487:488:void setHorizontalOffset(int) -> setHorizontalOffset
    812:813:void setInputMethodMode(int) -> setInputMethodMode
    961:962:void setListItemExpandMax(int) -> setListItemExpandMax
    417:418:void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    336:338:void setModal(boolean) -> setModal
    786:787:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:621:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    631:632:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1339:1341:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1432:1443:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    313:314:void setPromptPosition(int) -> setPromptPosition
    641:649:void setPromptView(android.view.View) -> setPromptView
    831:840:void setSelection(int) -> setSelection
    398:399:void setSoftInputMode(int) -> setSoftInputMode
    506:508:void setVerticalOffset(int) -> setVerticalOffset
    556:557:void setWidth(int) -> setWidth
    609:610:void setWindowLayoutType(int) -> setWindowLayoutType
    664:766:void show() -> show
androidx.appcompat.widget.ListPopupWindow$1 -> androidx.appcompat.widget.ListPopupWindow$1:
    1141:1141:void <init>(androidx.appcompat.widget.ListPopupWindow,android.view.View) -> <init>
    1141:1141:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    1144:1144:androidx.appcompat.widget.ListPopupWindow getPopup() -> getPopup
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1199:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1203:1203:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1362:1363:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1368:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1344:1345:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1353:void onChanged() -> onChanged
    1357:1358:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1408:1409:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1415:1415:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1419:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1387:1388:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1372:1373:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1383:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    61:68:void <clinit>() -> <clinit>
    74:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:82:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    122:125:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    130:133:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    86:89:void setEnterTransition(java.lang.Object) -> setEnterTransition
    92:95:void setExitTransition(java.lang.Object) -> setExitTransition
    98:99:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    106:117:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    147:159:void <init>(android.content.Context,boolean) -> <init>
    166:167:void clearSelection() -> clearSelection
    138:138:boolean hasFocus() -> hasFocus
    138:138:boolean hasWindowFocus() -> hasWindowFocus
    138:138:boolean isFocused() -> isFocused
    138:138:boolean isInTouchMode() -> isInTouchMode
    138:138:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    138:138:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    138:138:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    201:242:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    171:195:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    138:138:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    162:163:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    138:138:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> androidx.appcompat.widget.PopupMenu:
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    247:248:void dismiss() -> dismiss
    174:196:android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    153:153:int getGravity() -> getGravity
    209:209:android.view.Menu getMenu() -> getMenu
    219:219:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    319:322:android.widget.ListView getMenuListView() -> getMenuListView
    229:230:void inflate(int) -> inflate
    279:280:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    266:267:void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
    257:258:void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    238:239:void show() -> show
androidx.appcompat.widget.PopupMenu$1 -> androidx.appcompat.widget.PopupMenu$1:
    109:109:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.PopupMenu$2 -> androidx.appcompat.widget.PopupMenu$2:
    125:125:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> androidx.appcompat.widget.PopupMenu$3:
    175:175:void <init>(androidx.appcompat.widget.PopupMenu,android.view.View) -> <init>
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    178:179:boolean onForwardingStarted() -> onForwardingStarted
    184:185:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    86:116:void <clinit>() -> <clinit>
    62:122:void <init>() -> <init>
    371:375:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    339:350:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    406:415:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    486:499:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    171:171:long createCacheKey(android.util.TypedValue) -> createCacheKey
    176:199:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    464:468:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    96:101:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    318:335:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    140:159:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    473:482:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    382:393:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    397:401:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    378:378:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    108:114:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    502:503:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    233:314:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    162:168:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    354:362:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    131:133:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    204:229:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    440:460:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    367:367:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    540:540:void <init>() -> <init>
    545:549:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    524:525:void <init>() -> <init>
    531:535:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    420:421:void <init>(int) -> <init>
    432:435:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    424:424:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    428:428:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate -> androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate:
    554:554:void <init>() -> <init>
    558:577:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    507:508:void <init>() -> <init>
    514:518:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    50:52:void <init>(android.content.res.Resources) -> <init>
    209:209:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    194:194:boolean getBoolean(int) -> getBoolean
    183:183:int getColor(int) -> getColor
    189:189:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    272:272:android.content.res.Configuration getConfiguration() -> getConfiguration
    112:112:float getDimension(int) -> getDimension
    117:117:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    122:122:int getDimensionPixelSize(int) -> getDimensionPixelSize
    267:267:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    133:133:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    155:155:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    149:149:android.graphics.drawable.Drawable getDrawableCanonical(int) -> getDrawableCanonical
    165:165:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    171:171:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    127:127:float getFraction(int,int,int) -> getFraction
    277:277:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    102:102:int[] getIntArray(int) -> getIntArray
    199:199:int getInteger(int) -> getInteger
    204:204:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    177:177:android.graphics.Movie getMovie(int) -> getMovie
    77:77:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    82:82:java.lang.String getQuantityString(int,int) -> getQuantityString
    61:61:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    297:297:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    282:282:java.lang.String getResourceName(int) -> getResourceName
    287:287:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    292:292:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    66:66:java.lang.String getString(int) -> getString
    71:71:java.lang.String getString(int,java.lang.Object[]) -> getString
    97:97:java.lang.String[] getStringArray(int) -> getStringArray
    56:56:java.lang.CharSequence getText(int) -> getText
    87:87:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    92:92:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    235:236:void getValue(int,android.util.TypedValue,boolean) -> getValue
    248:249:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    242:243:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    214:214:android.content.res.XmlResourceParser getXml(int) -> getXml
    253:253:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    107:107:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    219:219:java.io.InputStream openRawResource(int) -> openRawResource
    224:224:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    229:229:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    309:310:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    303:304:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    259:263:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    78:78:void <clinit>() -> <clinit>
    76:94:void <init>(android.content.Context) -> <init>
    311:323:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    326:338:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    261:274:void animateToTab(int) -> animateToTab
    236:258:void animateToVisibility(int) -> animateToVisibility
    215:221:android.widget.Spinner createSpinner() -> createSpinner
    205:211:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    294:307:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    147:147:boolean isCollapsed() -> isCollapsed
    278:283:void onAttachedToWindow() -> onAttachedToWindow
    226:233:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    287:291:void onDetachedFromWindow() -> onDetachedFromWindow
    372:374:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    98:139:void onMeasure(int,int) -> onMeasure
    379:379:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    155:171:void performCollapse() -> performCollapse
    174:180:boolean performExpand() -> performExpand
    361:368:void removeAllTabs() -> removeAllTabs
    351:358:void removeTabAt(int) -> removeTabAt
    151:152:void setAllowCollapse(boolean) -> setAllowCollapse
    200:202:void setContentHeight(int) -> setContentHeight
    184:197:void setTabSelected(int) -> setTabSelected
    341:348:void updateTab(int) -> updateTab
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    265:265:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    268:271:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    527:528:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    532:532:int getCount() -> getCount
    537:537:java.lang.Object getItem(int) -> getItem
    542:542:long getItemId(int) -> getItemId
    547:552:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    557:558:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    562:569:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    382:411:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    414:416:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    522:522:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    429:432:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    436:440:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    444:451:void onMeasure(int,int) -> onMeasure
    420:425:void setSelected(boolean) -> setSelected
    454:519:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    572:573:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    599:600:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    591:595:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    585:587:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    578:580:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:177:void <clinit>() -> <clinit>
    268:269:void <init>(android.content.Context) -> <init>
    272:273:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    132:1720:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1371:1392:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    501:506:void clearFocus() -> clearFocus
    1544:1567:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1663:1699:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1589:1644:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1574:1578:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1209:1210:void dismissSuggestions() -> dismissSuggestions
    1704:1710:void forceSuggestionQuery() -> forceSuggestionQuery
    858:863:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1095:1105:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    456:456:int getImeOptions() -> getImeOptions
    478:478:int getInputType() -> getInputType
    784:784:int getMaxWidth() -> getMaxWidth
    871:872:int getPreferredHeight() -> getPreferredHeight
    866:867:int getPreferredWidth() -> getPreferredWidth
    563:563:java.lang.CharSequence getQuery() -> getQuery
    624:631:java.lang.CharSequence getQueryHint() -> getQueryHint
    397:397:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    393:393:int getSuggestionRowLayout() -> getSuggestionRowLayout
    761:761:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    900:913:boolean hasVoiceSearch() -> hasVoiceSearch
    661:661:boolean isIconfiedByDefault() -> isIconfiedByDefault
    689:689:boolean isIconified() -> isIconified
    1713:1713:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    741:741:boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    917:917:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    711:711:boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    1501:1511:void launchIntent(android.content.Intent) -> launchIntent
    1523:1526:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1484:1494:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1286:1291:void onActionViewCollapsed() -> onActionViewCollapsed
    1298:1305:void onActionViewExpanded() -> onActionViewExpanded
    1213:1230:void onCloseClicked() -> onCloseClicked
    971:974:void onDetachedFromWindow() -> onDetachedFromWindow
    1395:1402:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1406:1411:boolean onItemSelected(int) -> onItemSelected
    839:855:void onLayout(boolean,int,int,int,int) -> onLayout
    790:835:void onMeasure(int,int) -> onMeasure
    980:981:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1360:1368:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1352:1355:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1233:1239:void onSearchClicked() -> onSearchClicked
    1195:1206:void onSubmitQuery() -> onSubmitQuery
    1050:1089:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1181:1192:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1265:1272:void onTextFocusChanged() -> onTextFocusChanged
    1243:1262:void onVoiceClicked() -> onVoiceClicked
    1276:1279:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    952:953:void postUpdateFocusedState() -> postUpdateFocusedState
    484:495:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1451:1471:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    432:433:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    675:680:void setIconified(boolean) -> setIconified
    647:651:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    444:445:void setImeOptions(int) -> setImeOptions
    468:469:void setInputType(int) -> setInputType
    770:773:void setMaxWidth(int) -> setMaxWidth
    524:525:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    533:534:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    515:516:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    554:555:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    542:543:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    575:585:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1517:1520:void setQuery(java.lang.CharSequence) -> setQuery
    598:600:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    729:734:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    409:423:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    701:703:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    751:754:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    940:949:void updateCloseButton() -> updateCloseButton
    956:967:void updateFocusedState() -> updateFocusedState
    1109:1111:void updateQueryHint() -> updateQueryHint
    1117:1151:void updateSearchAutoComplete() -> updateSearchAutoComplete
    930:937:void updateSubmitArea() -> updateSubmitArea
    921:927:void updateSubmitButton(boolean) -> updateSubmitButton
    876:897:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1160:1166:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    179:179:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    182:183:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1720:1720:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1732:1732:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1722:1722:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1727:1728:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    186:186:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    189:192:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    334:334:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    337:340:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    379:379:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    383:384:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    983:983:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    986:997:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    1005:1005:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1009:1039:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1168:1168:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1175:1176:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1414:1414:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1422:1423:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1426:1426:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1434:1435:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1444:1444:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$InspectionCompanion -> androidx.appcompat.widget.SearchView$InspectionCompanion:
# {"id":"sourceFile","fileName":"SearchView$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    32:37:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    42:49:void readProperties(androidx.appcompat.widget.SearchView,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector:
    2044:2074:void <init>() -> <init>
    2087:2094:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2077:2084:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2097:2104:void ensureImeVisible(android.widget.AutoCompleteTextView) -> ensureImeVisible
    2107:2111:void preApi29Check() -> preApi29Check
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1332:1332:void <clinit>() -> <clinit>
    1311:1312:void <init>(android.os.Parcelable) -> <init>
    1315:1317:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1327:1328:java.lang.String toString() -> toString
    1321:1323:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1332:1332:void <init>() -> <init>
    1332:1332:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1332:1332:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1335:1335:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1340:1340:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1332:1332:java.lang.Object[] newArray(int) -> newArray
    1345:1345:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1849:1850:void <init>(android.content.Context) -> <init>
    1853:1854:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1841:1859:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1938:1938:boolean enoughToFilter() -> enoughToFilter
    2032:2040:void ensureImeVisible() -> ensureImeVisible
    1971:1981:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1883:1883:boolean isEmpty() -> isEmpty
    1990:1995:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1863:1867:void onFinishInflate() -> onFinishInflate
    1928:1930:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1943:1964:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1910:1924:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1902:1902:void performCompletion() -> performCompletion
    1892:1892:void replaceText(java.lang.CharSequence) -> replaceText
    2008:2029:void setImeVisibility(boolean) -> setImeVisibility
    1870:1871:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1875:1877:void setThreshold(int) -> setThreshold
    1999:2005:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1841:1841:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1844:1845:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1767:1774:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1785:1826:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1777:1781:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.ShareActionProvider -> androidx.appcompat.widget.ShareActionProvider:
    164:199:void <init>(android.content.Context) -> <init>
    249:249:boolean hasSubMenu() -> hasSubMenu
    222:241:android.view.View onCreateActionView() -> onCreateActionView
    258:286:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    383:391:void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    212:214:void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    321:323:void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    342:351:void setShareIntent(android.content.Intent) -> setShareIntent
    411:419:void updateIntent(android.content.Intent) -> updateIntent
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    397:398:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    402:406:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    357:358:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    362:374:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    73:104:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    273:323:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    215:235:void changeCursor(android.database.Cursor) -> changeCursor
    582:587:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    172:174:void close() -> close
    414:437:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    334:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    645:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    623:634:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    674:675:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    604:610:android.graphics.drawable.Drawable getDefaultIcon1() -> getDefaultIcon1
    549:575:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    697:728:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    506:538:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    472:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    361:369:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    373:377:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    124:124:int getQueryRefinement() -> getQueryRefinement
    735:776:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    679:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    449:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    133:133:boolean hasStableIds() -> hasStableIds
    242:248:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    179:182:void notifyDataSetChanged() -> notifyDataSetChanged
    187:190:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    327:331:void onClick(android.view.View) -> onClick
    144:167:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    116:117:void setQueryRefinement(int) -> setQueryRefinement
    387:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    351:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    591:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    193:206:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    262:268:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    122:212:void <clinit>() -> <clinit>
    222:223:void <init>(android.content.Context) -> <init>
    233:234:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    136:332:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1126:1133:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    747:764:void applyThumbTint() -> applyThumbTint
    621:638:void applyTrackTint() -> applyTrackTint
    1136:1139:void cancelPositionAnimator() -> cancelPositionAnimator
    1086:1090:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1544:1544:float constrain(float,float,float) -> constrain
    869:873:java.lang.CharSequence doTransformForOnOffText(java.lang.CharSequence) -> doTransformForOnOffText
    1241:1302:void draw(android.graphics.Canvas) -> draw
    1461:1472:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1439:1457:void drawableStateChanged() -> drawableStateChanged
    1371:1378:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1383:1390:int getCompoundPaddingRight() -> getCompoundPaddingRight
    1536:1537:android.view.ActionMode$Callback getCustomSelectionActionModeCallback() -> getCustomSelectionActionModeCallback
    1582:1585:androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper() -> getEmojiTextViewHelper
    898:898:boolean getShowText() -> getShowText
    787:787:boolean getSplitTrack() -> getSplitTrack
    492:492:int getSwitchMinWidth() -> getSwitchMinWidth
    466:466:int getSwitchPadding() -> getSwitchPadding
    1142:1142:boolean getTargetCheckedState() -> getTargetCheckedState
    836:836:java.lang.CharSequence getTextOff() -> getTextOff
    797:797:java.lang.CharSequence getTextOn() -> getTextOn
    681:681:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1401:1406:int getThumbOffset() -> getThumbOffset
    1410:1424:int getThumbScrollRange() -> getThumbScrollRange
    516:516:int getThumbTextPadding() -> getThumbTextPadding
    713:713:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    743:743:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    557:557:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    588:588:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    617:617:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    990:1003:boolean hitThumb(float,float) -> hitThumb
    1599:1599:boolean isEmojiCompatEnabled() -> isEmojiCompatEnabled
    1481:1495:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    980:982:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1430:1434:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1306:1367:void onDraw(android.graphics.Canvas) -> onDraw
    1633:1636:void onEmojiCompatInitializedForSwitchText() -> onEmojiCompatInitializedForSwitchText
    1499:1501:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1505:1520:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1185:1237:void onLayout(boolean,int,int,int,int) -> onLayout
    903:967:void onMeasure(int,int) -> onMeasure
    971:977:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1008:1082:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1567:1569:void setAllCaps(boolean) -> setAllCaps
    1162:1181:void setChecked(boolean) -> setChecked
    1529:1531:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    1590:1595:void setEmojiCompatEnabled(boolean) -> setEmojiCompatEnabled
    1573:1574:void setFilters(android.text.InputFilter[]) -> setFilters
    1557:1563:void setOffStateDescriptionOnRAndAbove() -> setOffStateDescriptionOnRAndAbove
    1548:1554:void setOnStateDescriptionOnRAndAbove() -> setOnStateDescriptionOnRAndAbove
    883:890:void setShowText(boolean) -> setShowText
    776:778:void setSplitTrack(boolean) -> setSplitTrack
    478:480:void setSwitchMinWidth(int) -> setSwitchMinWidth
    453:455:void setSwitchPadding(int) -> setSwitchPadding
    341:380:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    408:426:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    436:443:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    383:399:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    858:865:void setTextOff(java.lang.CharSequence) -> setTextOff
    844:850:void setTextOffInternal(java.lang.CharSequence) -> setTextOffInternal
    820:827:void setTextOn(java.lang.CharSequence) -> setTextOn
    805:811:void setTextOnInternal(java.lang.CharSequence) -> setTextOnInternal
    649:657:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1151:1153:void setThumbPosition(float) -> setThumbPosition
    668:669:void setThumbResource(int) -> setThumbResource
    503:505:void setThumbTextPadding(int) -> setThumbTextPadding
    699:703:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    728:732:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    527:535:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    545:546:void setTrackResource(int) -> setTrackResource
    574:578:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    602:606:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1610:1623:void setupEmojiCompatLoadCallback() -> setupEmojiCompatLoadCallback
    1098:1123:void stopDrag(android.view.MotionEvent) -> stopDrag
    1157:1158:void toggle() -> toggle
    1476:1476:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    123:123:void <init>(java.lang.Class,java.lang.String) -> <init>
    123:123:java.lang.Object get(java.lang.Object) -> get
    126:126:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    123:123:void set(java.lang.Object,java.lang.Object) -> set
    131:132:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback -> androidx.appcompat.widget.SwitchCompat$EmojiCompatInitCallback:
    1642:1644:void <init>(androidx.appcompat.widget.SwitchCompat) -> <init>
    1657:1661:void onFailed(java.lang.Throwable) -> onFailed
    1649:1653:void onInitialized() -> onInitialized
androidx.appcompat.widget.SwitchCompat$InspectionCompanion -> androidx.appcompat.widget.SwitchCompat$InspectionCompanion:
# {"id":"sourceFile","fileName":"SwitchCompat$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    50:64:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    69:85:void readProperties(androidx.appcompat.widget.SwitchCompat,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    41:53:void <clinit>() -> <clinit>
    178:179:void <init>() -> <init>
    162:176:void checkAppCompatTheme(android.view.View,android.content.Context) -> checkAppCompatTheme
    66:80:android.content.res.ColorStateList createDisabledStateList(int,int) -> createDisabledStateList
    126:138:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    91:97:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    152:154:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    109:115:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    143:148:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper -> androidx.appcompat.widget.ThemedSpinnerAdapter$Helper:
    111:114:void <init>(android.content.Context) -> <init>
    152:152:android.view.LayoutInflater getDropDownViewInflater() -> getDropDownViewInflater
    140:140:android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
    124:132:void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    158:158:boolean getBoolean(int,boolean) -> getBoolean
    257:257:int getChangingConfigurations() -> getChangingConfigurations
    170:170:int getColor(int,int) -> getColor
    174:184:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    192:192:float getDimension(int,float) -> getDimension
    196:196:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    200:200:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    80:86:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    90:96:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    166:166:float getFloat(int,float) -> getFloat
    119:126:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    212:212:float getFraction(int,int,int,float) -> getFraction
    138:138:int getIndex(int) -> getIndex
    134:134:int getIndexCount() -> getIndexCount
    162:162:int getInt(int,int) -> getInt
    188:188:int getInteger(int,int) -> getInteger
    204:204:int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    208:208:int getLayoutDimension(int,int) -> getLayoutDimension
    154:154:java.lang.String getNonResourceString(int) -> getNonResourceString
    248:248:java.lang.String getPositionDescription() -> getPositionDescription
    216:216:int getResourceId(int,int) -> getResourceId
    142:142:android.content.res.Resources getResources() -> getResources
    150:150:java.lang.String getString(int) -> getString
    146:146:java.lang.CharSequence getText(int) -> getText
    220:220:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    228:229:int getType(int) -> getType
    224:224:boolean getValue(int,android.util.TypedValue) -> getValue
    76:76:android.content.res.TypedArray getWrappedTypeArray() -> getWrappedTypeArray
    240:240:boolean hasValue(int) -> hasValue
    130:130:int length() -> length
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    244:244:android.util.TypedValue peekValue(int) -> peekValue
    252:253:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    242:243:void <init>(android.content.Context) -> <init>
    246:247:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    190:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2296:2302:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2188:2214:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    2390:2391:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    2396:2397:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner) -> addMenuProvider
    2404:2405:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State) -> addMenuProvider
    1559:1576:void addSystemView(android.view.View,boolean) -> addSystemView
    537:537:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2270:2270:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    747:752:void collapseActionView() -> collapseActionView
    615:618:void dismissPopupMenus() -> dismissPopupMenus
    1540:1556:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2333:2336:void ensureContentInsets() -> ensureContentInsets
    717:720:void ensureLogoView() -> ensureLogoView
    1184:1194:void ensureMenu() -> ensureMenu
    1197:1207:void ensureMenuView() -> ensureMenuView
    1519:1526:void ensureNavButtonView() -> ensureNavButtonView
    154:154:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2265:2265:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    154:154:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2247:2247:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2252:2259:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2217:2226:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2137:2164:int getChildTop(android.view.View,int) -> getChildTop
    2169:2176:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1065:1065:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1111:1111:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1300:1300:int getContentInsetEnd() -> getContentInsetEnd
    1426:1428:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1344:1344:int getContentInsetLeft() -> getContentInsetLeft
    1365:1365:int getContentInsetRight() -> getContentInsetRight
    1279:1279:int getContentInsetStart() -> getContentInsetStart
    1382:1384:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1478:1485:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1498:1500:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1513:1515:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1464:1466:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2368:2375:java.util.ArrayList getCurrentMenuItems() -> getCurrentMenuItems
    2235:2237:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    674:674:android.graphics.drawable.Drawable getLogo() -> getLogo
    713:713:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1158:1159:android.view.Menu getMenu() -> getMenu
    1210:1210:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1536:1536:android.view.View getNavButtonView() -> getNavButtonView
    942:942:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1036:1036:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2360:2360:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1179:1180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2364:2364:android.content.Context getPopupContext() -> getPopupContext
    395:395:int getPopupTheme() -> getPopupTheme
    818:818:java.lang.CharSequence getSubtitle() -> getSubtitle
    2353:2353:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    761:761:java.lang.CharSequence getTitle() -> getTitle
    496:496:int getTitleMarginBottom() -> getTitleMarginBottom
    473:473:int getTitleMarginEnd() -> getTitleMarginEnd
    427:427:int getTitleMarginStart() -> getTitleMarginStart
    450:450:int getTitleMarginTop() -> getTitleMarginTop
    2344:2344:android.widget.TextView getTitleTextView() -> getTitleTextView
    2241:2242:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2092:2107:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2276:2279:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    733:733:boolean hasExpandedActionView() -> hasExpandedActionView
    571:571:boolean hideOverflowMenu() -> hideOverflowMenu
    1223:1224:void inflateMenu(int) -> inflateMenu
    2423:2427:void invalidateMenu() -> invalidateMenu
    2305:2305:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    553:553:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    547:547:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    623:638:boolean isTitleTruncated() -> isTitleTruncated
    2112:2120:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2125:2133:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1701:1718:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1676:1693:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    2379:2385:void onCreateMenu() -> onCreateMenu
    1620:1622:void onDetachedFromWindow() -> onDetachedFromWindow
    1655:1671:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1874:2089:void onLayout(boolean,int,int,int,int) -> onLayout
    1740:1870:void onMeasure(int,int) -> onMeasure
    1592:1611:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    513:519:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1580:1587:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1631:1647:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1614:1616:void postShowOverflowMenu() -> postShowOverflowMenu
    2283:2293:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2410:2411:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
    1079:1080:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1093:1099:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1125:1126:void setCollapseIcon(int) -> setCollapseIcon
    1139:1145:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2315:2317:void setCollapsible(boolean) -> setCollapsible
    1444:1453:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1401:1410:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1322:1324:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1257:1259:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    531:532:void setLogo(int) -> setLogo
    651:663:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    686:687:void setLogoDescription(int) -> setLogoDescription
    698:704:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    577:609:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2325:2330:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    956:957:void setNavigationContentDescription(int) -> setNavigationContentDescription
    970:977:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    994:995:void setNavigationIcon(int) -> setNavigationIcon
    1012:1024:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1049:1051:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1235:1236:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1168:1170:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    377:385:void setPopupTheme(int) -> setPopupTheme
    829:830:void setSubtitle(int) -> setSubtitle
    840:864:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    882:886:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    915:916:void setSubtitleTextColor(int) -> setSubtitleTextColor
    924:928:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    773:774:void setTitle(int) -> setTitle
    785:809:void setTitle(java.lang.CharSequence) -> setTitle
    412:418:void setTitleMargin(int,int,int,int) -> setTitleMargin
    507:509:void setTitleMarginBottom(int) -> setTitleMarginBottom
    484:487:void setTitleMarginEnd(int) -> setTitleMarginEnd
    438:441:void setTitleMarginStart(int) -> setTitleMarginStart
    461:464:void setTitleMarginTop(int) -> setTitleMarginTop
    871:875:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    894:895:void setTitleTextColor(int) -> setTitleTextColor
    903:907:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1725:1735:boolean shouldCollapse() -> shouldCollapse
    2231:2231:boolean shouldLayout(android.view.View) -> shouldLayout
    562:562:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$$ExternalSyntheticLambda0 -> androidx.appcompat.widget.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.appcompat.widget.Toolbar androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$0f521ada4515edfb067afc708efe22015b16e75255ea8bb46dc9fce8fa414f14$0.f$0 -> b
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$0f521ada4515edfb067afc708efe22015b16e75255ea8bb46dc9fce8fa414f14$0.<init>(androidx.appcompat.widget.Toolbar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.appcompat.widget.Toolbar$$InternalSyntheticLambda$0$0f521ada4515edfb067afc708efe22015b16e75255ea8bb46dc9fce8fa414f14$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    214:214:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    217:223:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    235:235:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    237:238:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1549:1549:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1552:1553:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2554:2555:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2652:2665:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2615:2645:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2610:2610:boolean flagActionItems() -> flagActionItems
    2670:2670:int getId() -> getId
    2568:2568:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2560:2564:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2606:2606:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2680:2680:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2675:2675:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2601:2601:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2597:2597:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2574:2593:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$InspectionCompanion -> androidx.appcompat.widget.Toolbar$InspectionCompanion:
# {"id":"sourceFile","fileName":"Toolbar$InspectionCompanion.java"}
    19:20:void <init>() -> <init>
    64:85:void mapProperties(android.view.inspector.PropertyMapper) -> mapProperties
    17:17:void readProperties(java.lang.Object,android.view.inspector.PropertyReader) -> readProperties
    89:112:void readProperties(androidx.appcompat.widget.Toolbar,android.view.inspector.PropertyReader) -> readProperties
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2458:2462:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2458:2467:void <init>(int,int) -> <init>
    2458:2472:void <init>(int,int,int) -> <init>
    2475:2476:void <init>(int) -> <init>
    2458:2482:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2458:2486:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2458:2493:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2458:2497:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2500:2504:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2532:2532:void <clinit>() -> <clinit>
    2512:2513:void <init>(android.os.Parcel) -> <init>
    2516:2519:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2522:2523:void <init>(android.os.Parcelable) -> <init>
    2527:2530:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2532:2532:void <init>() -> <init>
    2532:2532:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2532:2532:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2535:2535:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2540:2540:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2532:2532:java.lang.Object[] newArray(int) -> newArray
    2545:2545:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    559:564:void animateToVisibility(int) -> animateToVisibility
    338:338:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    378:379:void dismissPopupMenus() -> dismissPopupMenus
    506:512:void ensureSpinner() -> ensureSpinner
    222:222:android.content.Context getContext() -> getContext
    554:554:android.view.View getCustomView() -> getCustomView
    383:383:int getDisplayOptions() -> getDisplayOptions
    538:538:int getDropdownItemCount() -> getDropdownItemCount
    533:533:int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    659:659:int getHeight() -> getHeight
    680:680:android.view.Menu getMenu() -> getMenu
    461:461:int getNavigationMode() -> getNavigationMode
    271:271:java.lang.CharSequence getSubtitle() -> getSubtitle
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    669:669:int getVisibility() -> getVisibility
    441:441:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    294:294:boolean hasIcon() -> hasIcon
    299:299:boolean hasLogo() -> hasLogo
    358:358:boolean hideOverflowMenu() -> hideOverflowMenu
    289:290:void initIndeterminateProgress() -> initIndeterminateProgress
    284:285:void initProgress() -> initProgress
    348:348:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    343:343:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    446:446:boolean isTitleTruncated() -> isTitleTruncated
    649:650:void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    644:645:void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    654:655:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    451:452:void setCollapsible(boolean) -> setCollapsible
    543:550:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    607:611:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    388:421:void setDisplayOptions(int) -> setDisplayOptions
    517:520:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    524:529:void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    425:437:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    457:457:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    304:305:void setIcon(int) -> setIcon
    309:311:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    315:316:void setLogo(int) -> setLogo
    320:322:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    368:374:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    675:676:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    363:364:void setMenuPrepared() -> setMenuPrepared
    623:625:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    629:630:void setNavigationContentDescription(int) -> setNavigationContentDescription
    596:598:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    602:603:void setNavigationIcon(int) -> setNavigationIcon
    466:503:void setNavigationMode(int) -> setNavigationMode
    276:280:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:267:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    664:665:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    569:572:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    353:353:boolean showOverflowMenu() -> showOverflowMenu
    633:640:void updateHomeAccessibility() -> updateHomeAccessibility
    614:619:void updateNavigationIcon() -> updateNavigationIcon
    325:334:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    572:573:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    589:590:void onAnimationCancel(android.view.View) -> onAnimationCancel
    582:585:void onAnimationEnd(android.view.View) -> onAnimationEnd
    577:578:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    48:48:void <init>() -> <init>
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    54:74:void <init>(android.content.Context) -> <init>
    105:185:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    188:208:android.view.View getAppRootView(android.view.View) -> getAppRootView
    91:97:void hide() -> hide
    100:100:boolean isShowing() -> isShowing
    78:88:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    56:58:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    37:37:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    37:37:boolean getBoolean(int) -> getBoolean
    37:37:int getColor(int) -> getColor
    37:37:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    37:37:android.content.res.Configuration getConfiguration() -> getConfiguration
    37:37:float getDimension(int) -> getDimension
    37:37:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    37:37:int getDimensionPixelSize(int) -> getDimensionPixelSize
    37:37:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    37:37:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    67:74:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    37:37:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    37:37:float getFraction(int,int,int) -> getFraction
    37:37:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    37:37:int[] getIntArray(int) -> getIntArray
    37:37:int getInteger(int) -> getInteger
    37:37:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    37:37:android.graphics.Movie getMovie(int) -> getMovie
    37:37:java.lang.String getQuantityString(int,int) -> getQuantityString
    37:37:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    37:37:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    37:37:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    37:37:java.lang.String getResourceName(int) -> getResourceName
    37:37:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    37:37:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    37:37:java.lang.String getString(int) -> getString
    37:37:java.lang.String getString(int,java.lang.Object[]) -> getString
    37:37:java.lang.String[] getStringArray(int) -> getStringArray
    37:37:java.lang.CharSequence getText(int) -> getText
    37:37:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    37:37:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    37:37:void getValue(int,android.util.TypedValue,boolean) -> getValue
    37:37:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    37:37:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    37:37:android.content.res.XmlResourceParser getXml(int) -> getXml
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    37:37:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    37:37:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    37:37:java.io.InputStream openRawResource(int) -> openRawResource
    37:37:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    37:37:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    37:37:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    37:37:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    83:84:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    37:37:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    55:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:72:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    157:157:void draw(android.graphics.Canvas) -> draw
    85:85:int getInflatedId() -> getInflatedId
    146:146:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    115:115:int getLayoutResource() -> getLayoutResource
    198:237:android.view.View inflate() -> inflate
    151:152:void onMeasure(int,int) -> onMeasure
    99:100:void setInflatedId(int) -> setInflatedId
    139:140:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    131:132:void setLayoutResource(int) -> setLayoutResource
    250:251:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    175:188:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> setDelegate
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:60:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:73:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:50:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
    54:59:void executeOnMainThread(java.lang.Runnable) -> executeOnMainThread
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    261:265:void <init>(androidx.collection.ArraySet) -> <init>
    271:275:void <init>(java.util.Collection) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    410:423:void addAll(androidx.collection.ArraySet) -> addAll
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    506:514:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:50:void <init>() -> <init>
    58:77:void <init>(int) -> <init>
    84:89:void addFirst(java.lang.Object) -> addFirst
    96:101:void addLast(java.lang.Object) -> addLast
    138:139:void clear() -> clear
    30:43:void doubleCapacity() -> doubleCapacity
    240:243:java.lang.Object get(int) -> get
    215:218:java.lang.Object getFirst() -> getFirst
    227:230:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:115:java.lang.Object popFirst() -> popFirst
    124:131:java.lang.Object popLast() -> popLast
    182:207:void removeFromEnd(int) -> removeFromEnd
    149:172:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:51:void <init>() -> <init>
    59:78:void <init>(int) -> <init>
    85:90:void addFirst(int) -> addFirst
    97:102:void addLast(int) -> addLast
    133:134:void clear() -> clear
    31:44:void doubleCapacity() -> doubleCapacity
    197:198:int get(int) -> get
    176:177:int getFirst() -> getFirst
    186:187:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:113:int popFirst() -> popFirst
    122:126:int popLast() -> popLast
    161:168:void removeFromEnd(int) -> removeFromEnd
    144:151:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    83:84:void <init>() -> <init>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    456:483:void append(long,java.lang.Object) -> append
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.LongSparseArray clone() -> clone
    428:428:boolean containsKey(long) -> containsKey
    433:433:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(long) -> delete
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:123:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    415:423:int indexOfValue(java.lang.Object) -> indexOfValue
    339:339:boolean isEmpty() -> isEmpty
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    300:303:void putAll(androidx.collection.LongSparseArray) -> putAll
    315:319:java.lang.Object putIfAbsent(long,java.lang.Object) -> putIfAbsent
    139:147:void remove(long) -> remove
    156:164:boolean remove(long,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    185:191:java.lang.Object replace(long,java.lang.Object) -> replace
    203:211:boolean replace(long,java.lang.Object,java.lang.Object) -> replace
    386:391:void setValueAt(int,java.lang.Object) -> setValueAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:282:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    83:126:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    200:216:java.lang.Object remove(java.lang.Object) -> remove
    65:73:void resize(int) -> resize
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:490:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:626:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:94:androidx.collection.SparseArrayCompat clone() -> clone
    432:432:boolean containsKey(int) -> containsKey
    437:437:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(int) -> delete
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:123:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    352:352:boolean isEmpty() -> isEmpty
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    313:316:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    328:332:java.lang.Object putIfAbsent(int,java.lang.Object) -> putIfAbsent
    139:147:void remove(int) -> remove
    156:164:boolean remove(int,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    184:188:void removeAtRange(int,int) -> removeAtRange
    198:204:java.lang.Object replace(int,java.lang.Object) -> replace
    216:224:boolean replace(int,java.lang.Object,java.lang.Object) -> replace
    388:393:void setValueAt(int,java.lang.Object) -> setValueAt
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.AbstractResolvableFuture:
    64:217:void <clinit>() -> <clinit>
    317:318:void <init>() -> <init>
    1023:1032:void addDoneString(java.lang.StringBuilder) -> addDoneString
    653:669:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    922:922:void afterDone() -> afterDone
    555:617:boolean cancel(boolean) -> cancel
    1192:1194:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> cancellationExceptionWithCause
    1200:1203:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    960:969:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> clearListeners
    868:907:void complete(androidx.concurrent.futures.AbstractResolvableFuture) -> complete
    1053:1064:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> executeListener
    359:456:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    470:506:java.lang.Object get() -> get
    513:524:java.lang.Object getDoneValue(java.lang.Object) -> getDoneValue
    800:841:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> getFutureValue
    849:862:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    633:633:void interruptTask() -> interruptTask
    536:537:boolean isCancelled() -> isCancelled
    530:531:boolean isDone() -> isDone
    930:933:void maybePropagateCancellationTo(java.util.concurrent.Future) -> maybePropagateCancellationTo
    1010:1018:java.lang.String pendingToString() -> pendingToString
    939:945:void releaseWaiters() -> releaseWaiters
    171:198:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> removeWaiter
    685:690:boolean set(java.lang.Object) -> set
    710:715:boolean setException(java.lang.Throwable) -> setException
    746:789:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    975:999:java.lang.String toString() -> toString
    1041:1044:java.lang.String userObjectToString(java.lang.Object) -> userObjectToString
    642:643:boolean wasInterrupted() -> wasInterrupted
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper:
    1066:1066:void <init>() -> <init>
    1066:1066:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.AbstractResolvableFuture$Cancellation:
    243:250:void <clinit>() -> <clinit>
    256:259:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.AbstractResolvableFuture$Failure:
    221:221:void <clinit>() -> <clinit>
    231:233:void <init>(java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1 -> androidx.concurrent.futures.AbstractResolvableFuture$Failure$1:
    223:223:void <init>(java.lang.String) -> <init>
    226:226:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.AbstractResolvableFuture$Listener:
    202:202:void <clinit>() -> <clinit>
    210:213:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper:
    1102:1108:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1127:1127:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1132:1132:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1122:1122:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1117:1118:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1112:1113:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$0$3db0564daf1dc134285d0a8b314b3a600d361208d767adb67015ffece93503ee$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture -> androidx.concurrent.futures.AbstractResolvableFuture$SetFuture:
    267:270:void <init>(androidx.concurrent.futures.AbstractResolvableFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    274:282:void run() -> run
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper:
    1143:1144:void <init>() -> <init>
    1169:1175:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> casListeners
    1180:1186:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> casValue
    1158:1164:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> casWaiters
    1153:1154:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> putNext
    1148:1149:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> putThread
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.AbstractResolvableFuture$Waiter:
    121:121:void <clinit>() -> <clinit>
    132:133:void <init>(boolean) -> <init>
    135:138:void <init>() -> <init>
    143:144:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> setNext
    151:156:void unpark() -> unpark
androidx.concurrent.futures.CallbackToFutureAdapter -> androidx.concurrent.futures.CallbackToFutureAdapter:
    77:78:void <init>() -> <init>
    89:109:com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver) -> getFuture
androidx.concurrent.futures.CallbackToFutureAdapter$Completer -> androidx.concurrent.futures.CallbackToFutureAdapter$Completer:
    225:235:void <init>() -> <init>
    306:310:void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor) -> addCancellationListener
    332:352:void finalize() -> finalize
    313:316:void fireCancellationListeners() -> fireCancellationListeners
    247:253:boolean set(java.lang.Object) -> set
    285:292:boolean setCancelled() -> setCancelled
    322:325:void setCompletedNormally() -> setCompletedNormally
    267:273:boolean setException(java.lang.Throwable) -> setException
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException -> androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException:
    357:358:void <init>(java.lang.String) -> <init>
    362:362:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture -> androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture:
    143:147:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    210:211:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    164:170:boolean cancel(boolean) -> cancel
    174:174:boolean cancelWithoutNotifyingCompleter(boolean) -> cancelWithoutNotifyingCompleter
    199:199:java.lang.Object get() -> get
    205:205:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    189:189:boolean isCancelled() -> isCancelled
    194:194:boolean isDone() -> isDone
    180:180:boolean set(java.lang.Object) -> set
    184:184:boolean setException(java.lang.Throwable) -> setException
    215:215:java.lang.String toString() -> toString
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1 -> androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1:
    147:147:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture) -> <init>
    151:155:java.lang.String pendingToString() -> pendingToString
androidx.concurrent.futures.DirectExecutor -> androidx.concurrent.futures.DirectExecutor:
    25:26:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    30:31:void execute(java.lang.Runnable) -> execute
    35:35:java.lang.String toString() -> toString
    25:25:androidx.concurrent.futures.DirectExecutor valueOf(java.lang.String) -> valueOf
    25:25:androidx.concurrent.futures.DirectExecutor[] values() -> values
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.ResolvableFuture:
    63:64:void <init>() -> <init>
    45:45:androidx.concurrent.futures.ResolvableFuture create() -> create
    50:50:boolean set(java.lang.Object) -> set
    55:55:boolean setException(java.lang.Throwable) -> setException
    60:60:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> androidx.core.accessibilityservice.AccessibilityServiceInfoCompat:
    181:181:void <init>() -> <init>
    307:317:java.lang.String capabilityToString(int) -> capabilityToString
    215:242:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    255:269:java.lang.String flagToString(int) -> flagToString
    287:288:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    198:199:java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
androidx.core.animation.AnimatorKt -> androidx.core.animation.AnimatorKt:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    100:100:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):100 -> addListener
    106:106:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    106:106:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):106 -> addListener
    107:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    107:107:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):107 -> addListener
    94:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener$default
    120:120:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addPauseListener
    120:120:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):120 -> addPauseListener
    124:124:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addPauseListener
    124:124:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):124 -> addPauseListener
    125:125:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addPauseListener
    125:125:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):125 -> addPauseListener
    116:125:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addPauseListener$default
    53:53:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnCancel
    94:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    94:107:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):53 -> doOnCancel
    53:53:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnCancel
    31:31:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnEnd
    94:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    94:107:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):31 -> doOnEnd
    31:31:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnEnd
    87:87:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnPause
    116:125:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    116:125:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1):87 -> doOnPause
    87:87:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnPause
    63:63:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnRepeat
    94:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnRepeat
    94:107:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):63 -> doOnRepeat
    63:63:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnRepeat
    75:75:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnResume
    116:125:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    116:125:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1):75 -> doOnResume
    75:75:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnResume
    42:42:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnStart
    94:107:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    94:107:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):42 -> doOnStart
    42:42:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnStart
androidx.core.animation.AnimatorKt$addListener$1 -> androidx.core.animation.AnimatorKt$addListener$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    95:95:java.lang.Object invoke(java.lang.Object) -> invoke
    95:95:java.lang.Object invoke(java.lang.Object) -> invoke
    95:95:void invoke(android.animation.Animator):95 -> invoke
androidx.core.animation.AnimatorKt$addListener$2 -> androidx.core.animation.AnimatorKt$addListener$2:
# {"id":"sourceFile","fileName":"Animator.kt"}
    96:96:java.lang.Object invoke(java.lang.Object) -> invoke
    96:96:java.lang.Object invoke(java.lang.Object) -> invoke
    96:96:void invoke(android.animation.Animator):96 -> invoke
androidx.core.animation.AnimatorKt$addListener$3 -> androidx.core.animation.AnimatorKt$addListener$3:
# {"id":"sourceFile","fileName":"Animator.kt"}
    97:97:java.lang.Object invoke(java.lang.Object) -> invoke
    97:97:java.lang.Object invoke(java.lang.Object) -> invoke
    97:97:void invoke(android.animation.Animator):97 -> invoke
androidx.core.animation.AnimatorKt$addListener$4 -> androidx.core.animation.AnimatorKt$addListener$4:
# {"id":"sourceFile","fileName":"Animator.kt"}
    98:98:java.lang.Object invoke(java.lang.Object) -> invoke
    98:98:java.lang.Object invoke(java.lang.Object) -> invoke
    98:98:void invoke(android.animation.Animator):98 -> invoke
androidx.core.animation.AnimatorKt$addListener$listener$1 -> androidx.core.animation.AnimatorKt$addListener$listener$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    103:103:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    102:102:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    101:101:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    104:104:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.animation.AnimatorKt$addPauseListener$1 -> androidx.core.animation.AnimatorKt$addPauseListener$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    117:117:java.lang.Object invoke(java.lang.Object) -> invoke
    117:117:java.lang.Object invoke(java.lang.Object) -> invoke
    117:117:void invoke(android.animation.Animator):117 -> invoke
androidx.core.animation.AnimatorKt$addPauseListener$2 -> androidx.core.animation.AnimatorKt$addPauseListener$2:
# {"id":"sourceFile","fileName":"Animator.kt"}
    118:118:java.lang.Object invoke(java.lang.Object) -> invoke
    118:118:java.lang.Object invoke(java.lang.Object) -> invoke
    118:118:void invoke(android.animation.Animator):118 -> invoke
androidx.core.animation.AnimatorKt$addPauseListener$listener$1 -> androidx.core.animation.AnimatorKt$addPauseListener$listener$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    120:120:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    121:121:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    122:122:void onAnimationResume(android.animation.Animator) -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1 -> androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    100:100:void <init>(kotlin.jvm.functions.Function1):100 -> <init>
    103:103:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    103:103:void onAnimationCancel(android.animation.Animator):103 -> onAnimationCancel
    102:102:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    102:102:void onAnimationEnd(android.animation.Animator):102 -> onAnimationEnd
    95:95:java.lang.Object androidx.core.animation.AnimatorKt$addListener$1.invoke(java.lang.Object) -> onAnimationEnd
    95:95:void onAnimationEnd(android.animation.Animator):129 -> onAnimationEnd
    101:101:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    101:101:void onAnimationRepeat(android.animation.Animator):101 -> onAnimationRepeat
    98:98:java.lang.Object androidx.core.animation.AnimatorKt$addListener$4.invoke(java.lang.Object) -> onAnimationRepeat
    98:98:void onAnimationRepeat(android.animation.Animator):128 -> onAnimationRepeat
    104:104:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    104:104:void onAnimationStart(android.animation.Animator):104 -> onAnimationStart
    96:96:java.lang.Object androidx.core.animation.AnimatorKt$addListener$2.invoke(java.lang.Object) -> onAnimationStart
    96:96:void onAnimationStart(android.animation.Animator):130 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1 -> androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    100:100:void <init>(kotlin.jvm.functions.Function1):100 -> <init>
    103:103:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    103:103:void onAnimationCancel(android.animation.Animator):103 -> onAnimationCancel
    97:97:java.lang.Object androidx.core.animation.AnimatorKt$addListener$3.invoke(java.lang.Object) -> onAnimationCancel
    97:97:void onAnimationCancel(android.animation.Animator):129 -> onAnimationCancel
    102:102:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    102:102:void onAnimationEnd(android.animation.Animator):102 -> onAnimationEnd
    101:101:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    101:101:void onAnimationRepeat(android.animation.Animator):101 -> onAnimationRepeat
    98:98:java.lang.Object androidx.core.animation.AnimatorKt$addListener$4.invoke(java.lang.Object) -> onAnimationRepeat
    98:98:void onAnimationRepeat(android.animation.Animator):128 -> onAnimationRepeat
    104:104:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    104:104:void onAnimationStart(android.animation.Animator):104 -> onAnimationStart
    96:96:java.lang.Object androidx.core.animation.AnimatorKt$addListener$2.invoke(java.lang.Object) -> onAnimationStart
    96:96:void onAnimationStart(android.animation.Animator):130 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$default$1 -> androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    120:120:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    120:120:void <init>(kotlin.jvm.functions.Function1):120 -> <init>
    121:121:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationPause(android.animation.Animator) -> onAnimationPause
    121:121:void onAnimationPause(android.animation.Animator):121 -> onAnimationPause
    122:122:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationResume(android.animation.Animator) -> onAnimationResume
    122:122:void onAnimationResume(android.animation.Animator):122 -> onAnimationResume
    117:117:java.lang.Object androidx.core.animation.AnimatorKt$addPauseListener$1.invoke(java.lang.Object) -> onAnimationResume
    117:117:void onAnimationResume(android.animation.Animator):128 -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1 -> androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    100:100:void <init>(kotlin.jvm.functions.Function1):100 -> <init>
    103:103:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    103:103:void onAnimationCancel(android.animation.Animator):103 -> onAnimationCancel
    97:97:java.lang.Object androidx.core.animation.AnimatorKt$addListener$3.invoke(java.lang.Object) -> onAnimationCancel
    97:97:void onAnimationCancel(android.animation.Animator):129 -> onAnimationCancel
    102:102:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    102:102:void onAnimationEnd(android.animation.Animator):102 -> onAnimationEnd
    95:95:java.lang.Object androidx.core.animation.AnimatorKt$addListener$1.invoke(java.lang.Object) -> onAnimationEnd
    95:95:void onAnimationEnd(android.animation.Animator):128 -> onAnimationEnd
    101:101:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    101:101:void onAnimationRepeat(android.animation.Animator):101 -> onAnimationRepeat
    104:104:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    104:104:void onAnimationStart(android.animation.Animator):104 -> onAnimationStart
    96:96:java.lang.Object androidx.core.animation.AnimatorKt$addListener$2.invoke(java.lang.Object) -> onAnimationStart
    96:96:void onAnimationStart(android.animation.Animator):130 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$default$1 -> androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    120:120:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    120:120:void <init>(kotlin.jvm.functions.Function1):120 -> <init>
    121:121:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationPause(android.animation.Animator) -> onAnimationPause
    121:121:void onAnimationPause(android.animation.Animator):121 -> onAnimationPause
    118:118:java.lang.Object androidx.core.animation.AnimatorKt$addPauseListener$2.invoke(java.lang.Object) -> onAnimationPause
    118:118:void onAnimationPause(android.animation.Animator):128 -> onAnimationPause
    122:122:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationResume(android.animation.Animator) -> onAnimationResume
    122:122:void onAnimationResume(android.animation.Animator):122 -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1 -> androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Animator.kt"}
    100:100:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    100:100:void <init>(kotlin.jvm.functions.Function1):100 -> <init>
    103:103:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    103:103:void onAnimationCancel(android.animation.Animator):103 -> onAnimationCancel
    97:97:java.lang.Object androidx.core.animation.AnimatorKt$addListener$3.invoke(java.lang.Object) -> onAnimationCancel
    97:97:void onAnimationCancel(android.animation.Animator):130 -> onAnimationCancel
    102:102:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    102:102:void onAnimationEnd(android.animation.Animator):102 -> onAnimationEnd
    95:95:java.lang.Object androidx.core.animation.AnimatorKt$addListener$1.invoke(java.lang.Object) -> onAnimationEnd
    95:95:void onAnimationEnd(android.animation.Animator):129 -> onAnimationEnd
    101:101:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    101:101:void onAnimationRepeat(android.animation.Animator):101 -> onAnimationRepeat
    98:98:java.lang.Object androidx.core.animation.AnimatorKt$addListener$4.invoke(java.lang.Object) -> onAnimationRepeat
    98:98:void onAnimationRepeat(android.animation.Animator):128 -> onAnimationRepeat
    104:104:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    104:104:void onAnimationStart(android.animation.Animator):104 -> onAnimationStart
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    154:156:void <init>() -> <init>
    292:297:void finishAffinity(android.app.Activity) -> finishAffinity
    309:314:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    174:174:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    334:335:android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    212:213:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    583:593:boolean isLaunchedFromBubble(android.app.Activity) -> isLaunchedFromBubble
    416:419:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    618:644:void recreate(android.app.Activity) -> recreate
    607:607:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> requestDragAndDropPermissions
    500:540:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    367:375:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    388:394:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    407:413:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    678:681:void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle) -> setLocusContext
    166:167:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> setPermissionCompatDelegate
    554:555:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    238:243:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    275:282:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    422:425:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    521:521:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    524:537:void run() -> run
androidx.core.app.ActivityCompat$2 -> androidx.core.app.ActivityCompat$2:
    626:626:void <init>(android.app.Activity) -> <init>
    629:636:void run() -> run
androidx.core.app.ActivityCompat$Api30Impl -> androidx.core.app.ActivityCompat$Api30Impl:
    747:749:void <init>() -> <init>
    753:754:void setLocusContext(android.app.Activity,androidx.core.content.LocusIdCompat,android.os.Bundle) -> setLocusContext
androidx.core.app.ActivityCompat$Api31Impl -> androidx.core.app.ActivityCompat$Api31Impl:
    763:765:void <init>() -> <init>
    768:768:boolean isLaunchedFromBubble(android.app.Activity) -> isLaunchedFromBubble
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    687:689:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    718:718:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    724:724:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    712:713:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    707:708:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    701:703:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    694:696:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    731:738:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    732:732:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    735:736:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityManagerCompat -> androidx.core.app.ActivityManagerCompat:
    30:30:void <init>() -> <init>
    40:41:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    300:301:void <init>() -> <init>
    325:325:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    246:247:androidx.core.app.ActivityOptionsCompat makeBasic() -> makeBasic
    122:123:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    68:69:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    98:99:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    179:180:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    207:217:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> makeSceneTransitionAnimation
    234:235:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    151:152:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    375:375:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    315:315:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    337:337:android.os.Bundle toBundle() -> toBundle
    347:347:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl:
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    293:296:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    284:288:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    262:262:android.os.Bundle toBundle() -> toBundle
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:100:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    378:380:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:362:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    316:325:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    302:311:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:352:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:372:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:297:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:171:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:147:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:167:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:292:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:196:void <init>(android.app.Activity) -> <init>
    200:200:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:248:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:228:void onActivityPaused(android.app.Activity) -> onActivityPaused
    214:214:void onActivityResumed(android.app.Activity) -> onActivityResumed
    232:232:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:210:void onActivityStarted(android.app.Activity) -> onActivityStarted
    237:237:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AlarmManagerCompat -> androidx.core.app.AlarmManagerCompat:
    231:232:void <init>() -> <init>
    61:68:void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> setAlarmClock
    119:124:void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setAndAllowWhileIdle
    164:169:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExact
    224:229:void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExactAndAllowWhileIdle
androidx.core.app.AppComponentFactory -> androidx.core.app.AppComponentFactory:
    40:40:void <init>() -> <init>
    50:50:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    137:140:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivityCompat
    61:61:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    113:116:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> instantiateApplicationCompat
    83:83:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    204:207:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> instantiateProviderCompat
    72:72:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    157:160:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiverCompat
    94:94:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
    181:184:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateServiceCompat
androidx.core.app.AppLaunchChecker -> androidx.core.app.AppLaunchChecker:
    88:89:void <init>() -> <init>
    53:54:boolean hasStartedFromLauncher(android.content.Context) -> hasStartedFromLauncher
    69:84:void onActivityCreate(android.app.Activity) -> onActivityCreate
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    63:63:void <init>() -> <init>
    201:216:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String) -> checkOrNoteProxyOp
    107:110:int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    127:130:int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String) -> noteOpNoThrow
    159:161:int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    178:180:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    78:79:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.AppOpsManagerCompat$Api29Impl:
    225:226:void <init>() -> <init>
    242:246:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String) -> checkOpNoThrow
    254:254:java.lang.String getOpPackageName(android.content.Context) -> getOpPackageName
    233:233:android.app.AppOpsManager getSystemService(android.content.Context) -> getSystemService
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    94:94:void <init>() -> <init>
    105:106:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    44:45:void <init>() -> <init>
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    71:91:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    107:107:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    113:113:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    85:87:void onCreate(android.os.Bundle) -> onCreate
    92:94:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    79:80:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    151:151:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:86:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.DialogCompat -> androidx.core.app.DialogCompat:
    32:33:void <init>() -> <init>
    55:63:android.view.View requireViewById(android.app.Dialog,int) -> requireViewById
androidx.core.app.FrameMetricsAggregator -> androidx.core.app.FrameMetricsAggregator:
    199:200:void <init>() -> <init>
    212:218:void <init>(int) -> <init>
    226:227:void add(android.app.Activity) -> add
    301:301:android.util.SparseIntArray[] getMetrics() -> getMetrics
    243:243:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    273:273:android.util.SparseIntArray[] reset() -> reset
    260:260:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl:
    341:342:void <clinit>() -> <clinit>
    339:348:void <init>(int) -> <init>
    411:423:void add(android.app.Activity) -> add
    399:407:void addDurationItem(android.util.SparseIntArray,long) -> addDurationItem
    453:453:android.util.SparseIntArray[] getMetrics() -> getMetrics
    427:434:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    458:460:android.util.SparseIntArray[] reset() -> reset
    439:448:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1:
    349:349:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    353:395:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl:
    309:310:void <init>() -> <init>
    313:313:void add(android.app.Activity) -> add
    324:324:android.util.SparseIntArray[] getMetrics() -> getMetrics
    316:316:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    328:328:android.util.SparseIntArray[] reset() -> reset
    320:320:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    109:110:void <clinit>() -> <clinit>
    103:426:void <init>() -> <init>
    644:653:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    603:607:boolean doStopCurrentWork() -> doStopCurrentWork
    505:506:void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> enqueueWork
    521:529:void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> enqueueWork
    612:620:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    533:545:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    584:584:boolean isStopped() -> isStopped
    469:474:android.os.IBinder onBind(android.content.Intent) -> onBind
    430:440:void onCreate() -> onCreate
    480:487:void onDestroy() -> onDestroy
    448:459:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    599:599:boolean onStopCurrentWork() -> onStopCurrentWork
    623:641:void processorFinished() -> processorFinished
    576:577:void setInterruptIfStopped(boolean) -> setInterruptIfStopped
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
    387:387:void <init>(androidx.core.app.JobIntentService) -> <init>
    387:387:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    394:403:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    387:387:void onCancelled(java.lang.Object) -> onCancelled
    408:409:void onCancelled(java.lang.Void) -> onCancelled
    387:387:void onPostExecute(java.lang.Object) -> onPostExecute
    413:414:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
    167:179:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    183:201:void enqueueWork(android.content.Intent) -> enqueueWork
    228:239:void serviceProcessingFinished() -> serviceProcessingFinished
    214:224:void serviceProcessingStarted() -> serviceProcessingStarted
    205:210:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
    367:370:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    380:381:void complete() -> complete
    374:374:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
    253:281:void <init>(androidx.core.app.JobIntentService) -> <init>
    285:285:android.os.IBinder compatGetBinder() -> compatGetBinder
    315:325:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    291:294:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    300:306:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    259:261:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    270:275:void complete() -> complete
    265:265:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
    336:342:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    347:348:void enqueueWork(android.content.Intent) -> enqueueWork
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
    122:124:void <init>(android.content.ComponentName) -> <init>
    127:134:void ensureJobId(int) -> ensureJobId
    145:145:void serviceProcessingFinished() -> serviceProcessingFinished
    142:142:void serviceProcessingStarted() -> serviceProcessingStarted
    139:139:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    282:283:void <init>() -> <init>
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    168:178:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    81:92:void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:61:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationChannelCompat -> androidx.core.app.NotificationChannelCompat:
    59:280:void <init>(java.lang.String,int) -> <init>
    284:309:void <init>(android.app.NotificationChannel) -> <init>
    508:508:boolean canBubble() -> canBubble
    485:485:boolean canBypassDnd() -> canBypassDnd
    444:444:boolean canShowBadge() -> canShowBadge
    403:403:android.media.AudioAttributes getAudioAttributes() -> getAudioAttributes
    474:474:java.lang.String getConversationId() -> getConversationId
    374:374:java.lang.String getDescription() -> getDescription
    454:454:java.lang.String getGroup() -> getGroup
    358:358:java.lang.String getId() -> getId
    387:387:int getImportance() -> getImportance
    418:418:int getLightColor() -> getLightColor
    497:497:int getLockscreenVisibility() -> getLockscreenVisibility
    366:366:java.lang.CharSequence getName() -> getName
    317:332:android.app.NotificationChannel getNotificationChannel() -> getNotificationChannel
    464:464:java.lang.String getParentChannelId() -> getParentChannelId
    395:395:android.net.Uri getSound() -> getSound
    434:434:long[] getVibrationPattern() -> getVibrationPattern
    523:523:boolean isImportantConversation() -> isImportantConversation
    410:410:boolean shouldShowLights() -> shouldShowLights
    425:425:boolean shouldVibrate() -> shouldVibrate
    340:350:androidx.core.app.NotificationChannelCompat$Builder toBuilder() -> toBuilder
androidx.core.app.NotificationChannelCompat$Builder -> androidx.core.app.NotificationChannelCompat$Builder:
    89:91:void <init>(java.lang.String,int) -> <init>
    270:270:androidx.core.app.NotificationChannelCompat build() -> build
    258:262:androidx.core.app.NotificationChannelCompat$Builder setConversationId(java.lang.String,java.lang.String) -> setConversationId
    131:132:androidx.core.app.NotificationChannelCompat$Builder setDescription(java.lang.String) -> setDescription
    149:150:androidx.core.app.NotificationChannelCompat$Builder setGroup(java.lang.String) -> setGroup
    119:120:androidx.core.app.NotificationChannelCompat$Builder setImportance(int) -> setImportance
    207:208:androidx.core.app.NotificationChannelCompat$Builder setLightColor(int) -> setLightColor
    193:194:androidx.core.app.NotificationChannelCompat$Builder setLightsEnabled(boolean) -> setLightsEnabled
    104:105:androidx.core.app.NotificationChannelCompat$Builder setName(java.lang.CharSequence) -> setName
    164:165:androidx.core.app.NotificationChannelCompat$Builder setShowBadge(boolean) -> setShowBadge
    179:181:androidx.core.app.NotificationChannelCompat$Builder setSound(android.net.Uri,android.media.AudioAttributes) -> setSound
    220:221:androidx.core.app.NotificationChannelCompat$Builder setVibrationEnabled(boolean) -> setVibrationEnabled
    234:236:androidx.core.app.NotificationChannelCompat$Builder setVibrationPattern(long[]) -> setVibrationPattern
androidx.core.app.NotificationChannelGroupCompat -> androidx.core.app.NotificationChannelGroupCompat:
    48:105:void <init>(java.lang.String) -> <init>
    109:110:void <init>(android.app.NotificationChannelGroup) -> <init>
    115:130:void <init>(android.app.NotificationChannelGroup,java.util.List) -> <init>
    216:216:java.util.List getChannels() -> getChannels
    134:140:java.util.List getChannelsCompat(java.util.List) -> getChannelsCompat
    190:190:java.lang.String getDescription() -> getDescription
    174:174:java.lang.String getId() -> getId
    182:182:java.lang.CharSequence getName() -> getName
    149:156:android.app.NotificationChannelGroup getNotificationChannelGroup() -> getNotificationChannelGroup
    205:205:boolean isBlocked() -> isBlocked
    164:166:androidx.core.app.NotificationChannelGroupCompat$Builder toBuilder() -> toBuilder
androidx.core.app.NotificationChannelGroupCompat$Builder -> androidx.core.app.NotificationChannelGroupCompat$Builder:
    62:64:void <init>(java.lang.String) -> <init>
    99:99:androidx.core.app.NotificationChannelGroupCompat build() -> build
    90:91:androidx.core.app.NotificationChannelGroupCompat$Builder setDescription(java.lang.String) -> setDescription
    77:78:androidx.core.app.NotificationChannelGroupCompat$Builder setName(java.lang.CharSequence) -> setName
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    7791:7792:void <init>() -> <init>
    7356:7357:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    7395:7446:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> getActionCompatFromAction
    7339:7340:int getActionCount(android.app.Notification) -> getActionCount
    7781:7784:boolean getAllowSystemGeneratedContextualActions(android.app.Notification) -> getAllowSystemGeneratedContextualActions
    7600:7600:boolean getAutoCancel(android.app.Notification) -> getAutoCancel
    7714:7717:int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    7384:7387:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification) -> getBubbleMetadata
    7534:7535:java.lang.String getCategory(android.app.Notification) -> getCategory
    7689:7692:java.lang.String getChannelId(android.app.Notification) -> getChannelId
    7610:7611:int getColor(android.app.Notification) -> getColor
    7519:7519:java.lang.CharSequence getContentInfo(android.app.Notification) -> getContentInfo
    7513:7513:java.lang.CharSequence getContentText(android.app.Notification) -> getContentText
    7507:7507:java.lang.CharSequence getContentTitle(android.app.Notification) -> getContentTitle
    7325:7326:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    7565:7566:java.lang.String getGroup(android.app.Notification) -> getGroup
    7768:7771:int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    7638:7638:boolean getHighPriority(android.app.Notification) -> getHighPriority
    7459:7475:java.util.List getInvisibleActions(android.app.Notification) -> getInvisibleActions
    7548:7549:boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    7753:7757:androidx.core.content.LocusIdCompat getLocusId(android.app.Notification) -> getLocusId
    7306:7315:android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    7605:7605:boolean getOngoing(android.app.Notification) -> getOngoing
    7595:7595:boolean getOnlyAlertOnce(android.app.Notification) -> getOnlyAlertOnce
    7484:7501:java.util.List getPeople(android.app.Notification) -> getPeople
    7628:7629:android.app.Notification getPublicVersion(android.app.Notification) -> getPublicVersion
    7737:7740:java.lang.CharSequence getSettingsText(android.app.Notification) -> getSettingsText
    7726:7729:java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    7582:7582:boolean getShowWhen(android.app.Notification) -> getShowWhen
    7673:7674:java.lang.String getSortKey(android.app.Notification) -> getSortKey
    7525:7525:java.lang.CharSequence getSubText(android.app.Notification) -> getSubText
    7701:7704:long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    7590:7590:boolean getUsesChronometer(android.app.Notification) -> getUsesChronometer
    7619:7620:int getVisibility(android.app.Notification) -> getVisibility
    7648:7649:boolean isGroupSummary(android.app.Notification) -> isGroupSummary
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    4572:4573:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4581:4583:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4590:4593:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4549:4615:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4642:4642:android.app.PendingIntent getActionIntent() -> getActionIntent
    4657:4657:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    4700:4700:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    4649:4649:android.os.Bundle getExtras() -> getExtras
    4623:4623:int getIcon() -> getIcon
    4631:4634:androidx.core.graphics.drawable.IconCompat getIconCompat() -> getIconCompat
    4666:4666:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    4677:4677:int getSemanticAction() -> getSemanticAction
    4708:4708:boolean getShowsUserInterface() -> getShowsUserInterface
    4638:4638:java.lang.CharSequence getTitle() -> getTitle
    4686:4686:boolean isContextual() -> isContextual
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
    4774:4776:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4785:4793:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    4801:4806:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    4718:4823:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    4833:4836:androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    4856:4862:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> addRemoteInput
    4945:4962:androidx.core.app.NotificationCompat$Action build() -> build
    4929:4935:void checkContextualActionNullFields() -> checkContextualActionNullFields
    4920:4921:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender) -> extend
    4735:4760:androidx.core.app.NotificationCompat$Action$Builder fromAndroidAction(android.app.Notification$Action) -> fromAndroidAction
    4845:4845:android.os.Bundle getExtras() -> getExtras
    4875:4876:androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> setAllowGeneratedReplies
    4898:4899:androidx.core.app.NotificationCompat$Action$Builder setContextual(boolean) -> setContextual
    4888:4889:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> setSemanticAction
    4911:4912:androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean) -> setShowsUserInterface
androidx.core.app.NotificationCompat$Action$WearableExtender -> androidx.core.app.NotificationCompat$Action$WearableExtender:
    5014:5025:void <init>() -> <init>
    5014:5040:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    4996:4996:java.lang.Object clone() -> clone
    5070:5075:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
    5049:5065:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> extend
    5189:5189:java.lang.CharSequence getCancelLabel() -> getCancelLabel
    5161:5161:java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    5240:5240:boolean getHintDisplayActionInline() -> getHintDisplayActionInline
    5213:5213:boolean getHintLaunchesActivity() -> getHintLaunchesActivity
    5132:5132:java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    5096:5096:boolean isAvailableOffline() -> isAvailableOffline
    5085:5086:androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    5175:5176:androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    5146:5147:androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    5100:5105:void setFlag(int,boolean) -> setFlag
    5227:5228:androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> setHintDisplayActionInline
    5201:5202:androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> setHintLaunchesActivity
    5118:5119:androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    3037:3038:void <init>() -> <init>
    3040:3042:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    3107:3137:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3157:3167:androidx.core.graphics.drawable.IconCompat asIconCompat(android.os.Parcelable) -> asIconCompat
    3086:3088:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    3066:3067:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    3176:3180:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3098:3098:java.lang.String getClassName() -> getClassName
    3145:3153:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    3049:3050:androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    3057:3059:androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    3078:3079:androidx.core.app.NotificationCompat$BigPictureStyle showBigPictureWhenCollapsed(boolean) -> showBigPictureWhenCollapsed
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl:
    3189:3190:void <init>() -> <init>
    3197:3198:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap) -> setBigLargeIcon
    3205:3206:void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl:
    3216:3217:void <init>() -> <init>
    3224:3225:void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon) -> setBigLargeIcon
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl -> androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl:
    3235:3236:void <init>() -> <init>
    3244:3245:void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean) -> showBigPictureWhenCollapsed
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    3277:3278:void <init>() -> <init>
    3280:3282:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    3355:3363:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    3327:3336:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3307:3308:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    3371:3373:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3318:3318:java.lang.String getClassName() -> getClassName
    3344:3347:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    3289:3290:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    3297:3299:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BubbleMetadata -> androidx.core.app.NotificationCompat$BubbleMetadata:
    6714:6714:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String,androidx.core.app.NotificationCompat$1) -> <init>
    6759:6767:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,java.lang.String) -> <init>
    6882:6890:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    6833:6833:boolean getAutoExpandBubble() -> getAutoExpandBubble
    6794:6794:android.app.PendingIntent getDeleteIntent() -> getDeleteIntent
    6814:6814:int getDesiredHeight() -> getDesiredHeight
    6824:6824:int getDesiredHeightResId() -> getDesiredHeightResId
    6804:6804:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    6776:6776:android.app.PendingIntent getIntent() -> getIntent
    6786:6786:java.lang.String getShortcutId() -> getShortcutId
    6842:6842:boolean isNotificationSuppressed() -> isNotificationSuppressed
    6848:6849:void setFlags(int) -> setFlags
    6861:6869:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl -> androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl:
    7131:7132:void <init>() -> <init>
    7184:7207:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    7145:7170:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl -> androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl:
    7214:7215:void <init>() -> <init>
    7269:7294:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    7228:7255:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Builder -> androidx.core.app.NotificationCompat$BubbleMetadata$Builder:
    6912:6913:void <init>() -> <init>
    6937:6942:void <init>(java.lang.String) -> <init>
    6958:6967:void <init>(android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat) -> <init>
    7103:7114:androidx.core.app.NotificationCompat$BubbleMetadata build() -> build
    7064:7065:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setAutoExpandBubble(boolean) -> setAutoExpandBubble
    7091:7092:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    7030:7032:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeight(int) -> setDesiredHeight
    7046:7048:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeightResId(int) -> setDesiredHeightResId
    7119:7124:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setFlag(int,boolean) -> setFlag
    7007:7016:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    6979:6988:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIntent(android.app.PendingIntent) -> setIntent
    7082:7083:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setSuppressNotification(boolean) -> setSuppressNotification
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    968:1071:void <init>(android.content.Context,android.app.Notification) -> <init>
    895:1142:void <init>(android.content.Context,java.lang.String) -> <init>
    1150:1151:void <init>(android.content.Context) -> <init>
    1938:1939:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1957:1960:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1876:1883:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1985:1986:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1999:2002:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1780:1783:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1807:1810:androidx.core.app.NotificationCompat$Builder addPerson(androidx.core.app.Person) -> addPerson
    2430:2430:android.app.Notification build() -> build
    1967:1968:androidx.core.app.NotificationCompat$Builder clearActions() -> clearActions
    2009:2018:androidx.core.app.NotificationCompat$Builder clearInvisibleActions() -> clearInvisibleActions
    1818:1820:androidx.core.app.NotificationCompat$Builder clearPeople() -> clearPeople
    2121:2142:android.widget.RemoteViews createBigContentView() -> createBigContentView
    2091:2108:android.widget.RemoteViews createContentView() -> createContentView
    2155:2177:android.widget.RemoteViews createHeadsUpContentView() -> createHeadsUpContentView
    2404:2405:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    2454:2454:android.widget.RemoteViews getBigContentView() -> getBigContentView
    2513:2513:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata() -> getBubbleMetadata
    2503:2503:int getColor() -> getColor
    2446:2446:android.widget.RemoteViews getContentView() -> getContentView
    1914:1917:android.os.Bundle getExtras() -> getExtras
    1078:1116:android.os.Bundle getExtrasWithoutDuplicateData(android.app.Notification,androidx.core.app.NotificationCompat$Style) -> getExtrasWithoutDuplicateData
    2492:2492:int getForegroundServiceBehavior() -> getForegroundServiceBehavior
    2462:2462:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    2422:2422:android.app.Notification getNotification() -> getNotification
    2482:2482:int getPriority() -> getPriority
    2472:2472:long getWhenIfShowing() -> getWhenIfShowing
    2434:2438:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1485:1504:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    2413:2414:androidx.core.app.NotificationCompat$Builder setAllowSystemGeneratedContextualActions(boolean) -> setAllowSystemGeneratedContextualActions
    1665:1666:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    2339:2340:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    2395:2396:androidx.core.app.NotificationCompat$Builder setBubbleMetadata(androidx.core.app.NotificationCompat$BubbleMetadata) -> setBubbleMetadata
    1688:1689:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    2227:2228:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1216:1218:androidx.core.app.NotificationCompat$Builder setChronometerCountDown(boolean) -> setChronometerCountDown
    2047:2048:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1646:1648:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    1390:1391:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    1371:1372:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    1403:1404:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    1283:1284:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    1275:1276:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    2204:2205:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    2191:2192:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    2217:2218:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1713:1717:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    1415:1416:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1899:1900:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1721:1726:void setFlag(int,boolean) -> setFlag
    2379:2380:androidx.core.app.NotificationCompat$Builder setForegroundServiceBehavior(int) -> setForegroundServiceBehavior
    1441:1443:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1835:1836:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    2354:2355:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1847:1848:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    1476:1477:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1601:1607:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1676:1677:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    2325:2326:androidx.core.app.NotificationCompat$Builder setLocusId(androidx.core.content.LocusIdCompat) -> setLocusId
    1257:1258:androidx.core.app.NotificationCompat$Builder setNotificationSilent() -> setNotificationSilent
    1357:1358:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1623:1624:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1656:1657:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1751:1752:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    1380:1383:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    2072:2073:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    1344:1345:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1325:1326:androidx.core.app.NotificationCompat$Builder setSettingsText(java.lang.CharSequence) -> setSettingsText
    2284:2285:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    2298:2313:androidx.core.app.NotificationCompat$Builder setShortcutInfo(androidx.core.content.pm.ShortcutInfoCompat) -> setShortcutInfo
    1173:1174:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    1267:1268:androidx.core.app.NotificationCompat$Builder setSilent(boolean) -> setSilent
    1186:1187:androidx.core.app.NotificationCompat$Builder setSmallIcon(androidx.core.graphics.drawable.IconCompat) -> setSmallIcon
    1229:1230:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    1244:1246:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1864:1865:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1524:1532:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1553:1561:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    2030:2036:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    1306:1307:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    1452:1453:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    1467:1469:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    2238:2239:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    1202:1203:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1583:1584:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    2059:2060:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    1161:1162:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
    2082:2082:boolean useExistingRemoteView() -> useExistingRemoteView
androidx.core.app.NotificationCompat$CarExtender -> androidx.core.app.NotificationCompat$CarExtender:
    6302:6308:void <init>() -> <init>
    6302:6329:void <init>(android.app.Notification) -> <init>
    6426:6445:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    6387:6415:android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> getBundleForUnreadConversation
    6468:6468:int getColor() -> getColor
    6492:6492:android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    6520:6520:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
    6333:6382:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle) -> getUnreadConversationFromBundle
    6457:6458:androidx.core.app.NotificationCompat$CarExtender setColor(int) -> setColor
    6481:6482:androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    6507:6508:androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation:
    6541:6548:void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    6599:6599:long getLatestTimestamp() -> getLatestTimestamp
    6554:6554:java.lang.String[] getMessages() -> getMessages
    6592:6592:java.lang.String getParticipant() -> getParticipant
    6585:6585:java.lang.String[] getParticipants() -> getParticipants
    6578:6578:android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    6562:6562:androidx.core.app.RemoteInput getRemoteInput() -> getRemoteInput
    6570:6570:android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    6606:6620:void <init>(java.lang.String) -> <init>
    6631:6634:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    6691:6693:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    6681:6682:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    6665:6666:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    6650:6653:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput) -> setReplyAction
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    4304:4305:void <init>() -> <init>
    4332:4335:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    4395:4420:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> createRemoteViews
    4323:4323:boolean displayCustomViewInline() -> displayCustomViewInline
    4436:4453:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> generateActionButton
    4314:4314:java.lang.String getClassName() -> getClassName
    4425:4432:java.util.List getNonContextualActions(java.util.List) -> getNonContextualActions
    4360:4362:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    4343:4345:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    4381:4383:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    4178:4181:void <init>() -> <init>
    4178:4185:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    4209:4212:androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    4231:4242:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    4264:4266:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    4222:4222:java.lang.String getClassName() -> getClassName
    4250:4256:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    4192:4193:androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    4200:4202:androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    3419:3426:void <init>() -> <init>
    3419:3438:void <init>(java.lang.CharSequence) -> <init>
    3419:3453:void <init>(androidx.core.app.Person) -> <init>
    3809:3828:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    3573:3579:androidx.core.app.NotificationCompat$MessagingStyle addHistoricMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> addHistoricMessage
    3520:3525:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> addMessage
    3538:3539:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person) -> addMessage
    3550:3556:androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    3675:3749:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3872:3880:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3648:3652:androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> extractMessagingStyleFromNotification
    3753:3765:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    3662:3662:java.lang.String getClassName() -> getClassName
    3495:3495:java.lang.CharSequence getConversationTitle() -> getConversationTitle
    3593:3593:java.util.List getHistoricMessages() -> getHistoricMessages
    3586:3586:java.util.List getMessages() -> getMessages
    3468:3468:androidx.core.app.Person getUser() -> getUser
    3463:3463:java.lang.CharSequence getUserDisplayName() -> getUserDisplayName
    3769:3775:boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    3625:3633:boolean isGroupConversation() -> isGroupConversation
    3804:3804:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    3779:3799:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    3836:3864:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    3486:3487:androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    3603:3604:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
androidx.core.app.NotificationCompat$MessagingStyle$Message -> androidx.core.app.NotificationCompat$MessagingStyle$Message:
    3896:3915:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    3933:3934:void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    4055:4060:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    4011:4011:java.lang.String getDataMimeType() -> getDataMimeType
    4020:4020:android.net.Uri getDataUri() -> getDataUri
    3988:3988:android.os.Bundle getExtras() -> getExtras
    4080:4115:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> getMessageFromBundle
    4065:4074:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> getMessagesFromBundleArray
    4005:4005:androidx.core.app.Person getPerson() -> getPerson
    3999:3999:java.lang.CharSequence getSender() -> getSender
    3977:3977:java.lang.CharSequence getText() -> getText
    3982:3982:long getTimestamp() -> getTimestamp
    3966:3968:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    4129:4144:android.app.Notification$MessagingStyle$Message toAndroidMessage() -> toAndroidMessage
    4024:4050:android.os.Bundle toBundle() -> toBundle
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    2524:2532:void <init>() -> <init>
    2624:2634:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2576:2576:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2765:2908:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    2551:2555:android.app.Notification build() -> build
    2972:2981:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    2990:2999:int calculateTopPadding() -> calculateTopPadding
    2653:2656:void clearCompatExtraKeys(android.os.Bundle) -> clearCompatExtraKeys
    3003:3003:float constrain(float,float,float) -> constrain
    2702:2716:androidx.core.app.NotificationCompat$Style constructCompatStyleByName(java.lang.String) -> constructCompatStyleByName
    2674:2697:androidx.core.app.NotificationCompat$Style constructCompatStyleByPlatformName(java.lang.String) -> constructCompatStyleByPlatformName
    2723:2741:androidx.core.app.NotificationCompat$Style constructCompatStyleForBundle(android.os.Bundle) -> constructCompatStyleForBundle
    2746:2754:androidx.core.app.NotificationCompat$Style constructStyleForExtras(android.os.Bundle) -> constructStyleForExtras
    2919:2919:android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    2927:2927:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int) -> createColoredBitmap
    2931:2931:android.graphics.Bitmap createColoredBitmap(int,int,int) -> createColoredBitmap
    2936:2947:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int) -> createColoredBitmap
    2952:2961:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> createIconWithBackground
    2584:2584:boolean displayCustomViewInline() -> displayCustomViewInline
    2664:2668:androidx.core.app.NotificationCompat$Style extractStyleFromNotification(android.app.Notification) -> extractStyleFromNotification
    2565:2565:java.lang.String getClassName() -> getClassName
    2984:2987:void hideNormalContent(android.widget.RemoteViews) -> hideNormalContent
    2600:2600:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    2592:2592:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    2608:2608:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    2641:2646:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    2538:2544:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    5445:5466:void <init>() -> <init>
    5445:5513:void <init>(android.app.Notification) -> <init>
    5661:5662:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    5678:5679:androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    5760:5761:androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    5777:5778:androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    5688:5689:androidx.core.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    5789:5790:androidx.core.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    5320:5320:java.lang.Object clone() -> clone
    5630:5645:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    5524:5585:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    5591:5624:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> getActionFromActionCompat
    5696:5696:java.util.List getActions() -> getActions
    5833:5833:android.graphics.Bitmap getBackground() -> getBackground
    6239:6239:java.lang.String getBridgeTag() -> getBridgeTag
    5909:5909:int getContentAction() -> getContentAction
    5854:5854:int getContentIcon() -> getContentIcon
    5881:5881:int getContentIconGravity() -> getContentIconGravity
    6037:6037:boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    5996:5996:int getCustomContentHeight() -> getCustomContentHeight
    5968:5968:int getCustomSizePreset() -> getCustomSizePreset
    6218:6218:java.lang.String getDismissalId() -> getDismissalId
    5744:5744:android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    5936:5936:int getGravity() -> getGravity
    6173:6173:boolean getHintAmbientBigPicture() -> getHintAmbientBigPicture
    6118:6118:boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    6196:6196:boolean getHintContentIntentLaunchesActivity() -> getHintContentIntentLaunchesActivity
    6062:6062:boolean getHintHideIcon() -> getHintHideIcon
    6146:6146:int getHintScreenTimeout() -> getHintScreenTimeout
    6087:6087:boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    5803:5803:java.util.List getPages() -> getPages
    6015:6015:boolean getStartScrollBottom() -> getStartScrollBottom
    5818:5819:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    6230:6231:androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> setBridgeTag
    5895:5896:androidx.core.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    5843:5844:androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    5867:5868:androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    6026:6027:androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    5982:5983:androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    5952:5953:androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    6209:6210:androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> setDismissalId
    5732:5733:androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    6243:6248:void setFlag(int,boolean) -> setFlag
    5922:5923:androidx.core.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    6159:6160:androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> setHintAmbientBigPicture
    6103:6104:androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    6185:6186:androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> setHintContentIntentLaunchesActivity
    6049:6050:androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    6132:6133:androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    6074:6075:androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    6005:6006:androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    60:277:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    355:405:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    316:351:android.app.Notification build() -> build
    409:429:android.app.Notification buildInternal() -> buildInternal
    282:291:java.util.List combineLists(java.util.List,java.util.List) -> combineLists
    308:308:android.app.Notification$Builder getBuilder() -> getBuilder
    312:312:android.content.Context getContext() -> getContext
    296:303:java.util.List getPeople(java.util.List) -> getPeople
    533:537:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatExtras -> androidx.core.app.NotificationCompatExtras:
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    59:63:void <clinit>() -> <clinit>
    349:350:void <init>() -> <init>
    72:82:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    212:231:boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    276:288:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> fromBundle
    312:319:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> fromBundleArray
    168:192:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    161:164:int getActionCount(android.app.Notification) -> getActionCount
    235:249:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> getActionFromBundle
    196:207:java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    339:346:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
    254:271:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    123:134:androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    293:308:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    323:330:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:157:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    114:119:void checkPermission(int,java.lang.String) -> checkPermission
    48:52:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    75:76:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:99:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:110:void cancelAll(java.lang.String) -> cancelAll
    81:88:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    103:112:void <clinit>() -> <clinit>
    162:166:void <init>(android.content.Context) -> <init>
    231:232:boolean areNotificationsEnabled() -> areNotificationsEnabled
    174:175:void cancel(int) -> cancel
    184:188:void cancel(java.lang.String,int) -> cancel
    192:196:void cancelAll() -> cancelAll
    290:293:void createNotificationChannel(android.app.NotificationChannel) -> createNotificationChannel
    316:317:void createNotificationChannel(androidx.core.app.NotificationChannelCompat) -> createNotificationChannel
    329:332:void createNotificationChannelGroup(android.app.NotificationChannelGroup) -> createNotificationChannelGroup
    344:345:void createNotificationChannelGroup(androidx.core.app.NotificationChannelGroupCompat) -> createNotificationChannelGroup
    389:392:void createNotificationChannelGroups(java.util.List) -> createNotificationChannelGroups
    404:411:void createNotificationChannelGroupsCompat(java.util.List) -> createNotificationChannelGroupsCompat
    356:359:void createNotificationChannels(java.util.List) -> createNotificationChannels
    371:378:void createNotificationChannelsCompat(java.util.List) -> createNotificationChannelsCompat
    423:426:void deleteNotificationChannel(java.lang.String) -> deleteNotificationChannel
    435:438:void deleteNotificationChannelGroup(java.lang.String) -> deleteNotificationChannelGroup
    450:462:void deleteUnlistedNotificationChannels(java.util.Collection) -> deleteUnlistedNotificationChannels
    159:159:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
    650:669:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    262:263:int getImportance() -> getImportance
    471:474:android.app.NotificationChannel getNotificationChannel(java.lang.String) -> getNotificationChannel
    504:507:android.app.NotificationChannel getNotificationChannel(java.lang.String,java.lang.String) -> getNotificationChannel
    484:490:androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String) -> getNotificationChannelCompat
    521:527:androidx.core.app.NotificationChannelCompat getNotificationChannelCompat(java.lang.String,java.lang.String) -> getNotificationChannelCompat
    537:547:android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String) -> getNotificationChannelGroup
    559:570:androidx.core.app.NotificationChannelGroupCompat getNotificationChannelGroupCompat(java.lang.String) -> getNotificationChannelGroupCompat
    611:614:java.util.List getNotificationChannelGroups() -> getNotificationChannelGroups
    624:642:java.util.List getNotificationChannelGroupsCompat() -> getNotificationChannelGroupsCompat
    579:582:java.util.List getNotificationChannels() -> getNotificationChannels
    592:602:java.util.List getNotificationChannelsCompat() -> getNotificationChannelsCompat
    205:206:void notify(int,android.app.Notification) -> notify
    217:225:void notify(java.lang.String,int,android.app.Notification) -> notify
    684:690:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    676:677:boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
androidx.core.app.NotificationManagerCompat$CancelTask -> androidx.core.app.NotificationManagerCompat$CancelTask:
    1014:1019:void <init>(java.lang.String) -> <init>
    1021:1026:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1030:1035:void send(android.support.v4.app.INotificationSideChannel) -> send
    1040:1046:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$NotifyTask:
    984:989:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    993:994:void send(android.support.v4.app.INotificationSideChannel) -> send
    999:1004:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent:
    968:971:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$SideChannelManager:
    705:714:void <init>(android.content.Context) -> <init>
    850:862:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    869:874:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    726:741:boolean handleMessage(android.os.Message) -> handleMessage
    745:750:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> handleQueueTask
    769:773:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    753:759:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    762:766:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    777:783:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    787:791:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    905:943:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    721:722:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> queueTask
    882:898:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    798:842:void updateListenerMap() -> updateListenerMap
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    949:959:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.Person -> androidx.core.app.Person:
    115:122:void <init>(androidx.core.app.Person$Builder) -> <init>
    88:98:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    48:56:androidx.core.app.Person fromBundle(android.os.Bundle) -> fromBundle
    70:76:androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle) -> fromPersistableBundle
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    224:224:java.lang.String getKey() -> getKey
    191:191:java.lang.CharSequence getName() -> getName
    215:215:java.lang.String getUri() -> getUri
    232:232:boolean isBot() -> isBot
    240:240:boolean isImportant() -> isImportant
    250:256:java.lang.String resolveToLegacyUri() -> resolveToLegacyUri
    175:182:android.app.Person toAndroidPerson() -> toAndroidPerson
    163:163:androidx.core.app.Person$Builder toBuilder() -> toBuilder
    130:137:android.os.Bundle toBundle() -> toBundle
    151:157:android.os.PersistableBundle toPersistableBundle() -> toPersistableBundle
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    269:269:void <init>() -> <init>
    271:278:void <init>(androidx.core.app.Person) -> <init>
    356:356:androidx.core.app.Person build() -> build
    337:338:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    298:299:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    349:350:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    327:328:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    286:287:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    316:317:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    80:87:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    94:94:void <init>() -> <init>
    99:107:void <init>(androidx.core.app.RemoteActionCompat) -> <init>
    115:123:androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction) -> createFromRemoteAction
    179:179:android.app.PendingIntent getActionIntent() -> getActionIntent
    172:172:java.lang.CharSequence getContentDescription() -> getContentDescription
    158:158:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    165:165:java.lang.CharSequence getTitle() -> getTitle
    137:137:boolean isEnabled() -> isEnabled
    130:131:void setEnabled(boolean) -> setEnabled
    144:145:void setShouldShowIcon(boolean) -> setShouldShowIcon
    151:151:boolean shouldShowIcon() -> shouldShowIcon
    190:196:android.app.RemoteAction toRemoteAction() -> toRemoteAction
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    96:109:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,int,android.os.Bundle,java.util.Set) -> <init>
    466:489:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    402:454:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    549:556:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    561:578:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    583:600:androidx.core.app.RemoteInput fromPlatform(android.app.RemoteInput) -> fromPlatform
    156:156:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    134:134:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    130:130:java.lang.CharSequence[] getChoices() -> getChoices
    605:616:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
    338:361:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    164:164:int getEditChoicesBeforeSending() -> getEditChoicesBeforeSending
    544:544:java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    171:171:android.os.Bundle getExtras() -> getExtras
    123:123:java.lang.CharSequence getLabel() -> getLabel
    116:116:java.lang.String getResultKey() -> getResultKey
    376:377:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    530:537:int getResultsSource(android.content.Intent) -> getResultsSource
    143:146:boolean isDataOnly() -> isDataOnly
    505:515:void setResultsSource(android.content.Intent,int) -> setResultsSource
androidx.core.app.RemoteInput$Builder -> androidx.core.app.RemoteInput$Builder:
    179:197:void <init>(java.lang.String) -> <init>
    287:290:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    309:309:androidx.core.app.RemoteInput build() -> build
    300:300:android.os.Bundle getExtras() -> getExtras
    241:246:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    261:262:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    225:226:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    274:275:androidx.core.app.RemoteInput$Builder setEditChoicesBeforeSending(int) -> setEditChoicesBeforeSending
    207:208:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
androidx.core.app.ServiceCompat -> androidx.core.app.ServiceCompat:
    37:39:void <init>() -> <init>
    98:103:void stopForeground(android.app.Service,int) -> stopForeground
androidx.core.app.ShareCompat -> androidx.core.app.ShareCompat:
    118:118:void <init>() -> <init>
    239:256:void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    271:277:void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    178:183:android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    201:205:android.content.ComponentName getCallingActivity(android.content.Intent) -> getCallingActivity
    134:139:java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    157:161:java.lang.String getCallingPackage(android.content.Intent) -> getCallingPackage
androidx.core.app.ShareCompat$Api16Impl -> androidx.core.app.ShareCompat$Api16Impl:
    1084:1084:void <init>() -> <init>
    1088:1102:void migrateExtraStreamToClipData(android.content.Intent,java.util.ArrayList) -> migrateExtraStreamToClipData
    1105:1107:void removeClipData(android.content.Intent) -> removeClipData
androidx.core.app.ShareCompat$IntentBuilder -> androidx.core.app.ShareCompat$IntentBuilder:
    317:339:void <init>(android.content.Context) -> <init>
    659:663:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    675:676:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    616:620:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    632:633:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    573:577:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    589:590:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    540:544:androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    397:405:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    409:416:void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    427:427:android.content.Intent createChooserIntent() -> createChooserIntent
    305:305:androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    393:393:android.content.Context getContext() -> getContext
    352:388:android.content.Intent getIntent() -> getIntent
    445:446:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    457:457:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    646:647:androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    603:604:androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    557:561:androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    500:505:androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    520:524:androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    688:689:androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
    483:484:androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    469:470:androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    434:435:void startChooser() -> startChooser
androidx.core.app.ShareCompat$IntentReader -> androidx.core.app.ShareCompat$IntentReader:
    741:742:void <init>(android.app.Activity) -> <init>
    751:756:void <init>(android.content.Context,android.content.Intent) -> <init>
    731:731:androidx.core.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    1008:1008:android.content.ComponentName getCallingActivity() -> getCallingActivity
    1023:1031:android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    1046:1054:android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    1069:1077:java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
    989:989:java.lang.String getCallingPackage() -> getCallingPackage
    959:959:java.lang.String[] getEmailBcc() -> getEmailBcc
    948:948:java.lang.String[] getEmailCc() -> getEmailCc
    937:937:java.lang.String[] getEmailTo() -> getEmailTo
    828:843:java.lang.String getHtmlText() -> getHtmlText
    885:885:android.net.Uri getStream() -> getStream
    899:908:android.net.Uri getStream(int) -> getStream
    920:926:int getStreamCount() -> getStreamCount
    970:970:java.lang.String getSubject() -> getSubject
    813:813:java.lang.CharSequence getText() -> getText
    802:802:java.lang.String getType() -> getType
    791:791:boolean isMultipleShare() -> isMultipleShare
    767:768:boolean isShareIntent() -> isShareIntent
    780:780:boolean isSingleShare() -> isSingleShare
    848:870:void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    42:42:void <init>() -> <init>
    214:236:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    133:133:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    201:212:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    247:247:android.content.Intent editIntentAt(int) -> editIntentAt
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> from
    234:234:android.content.Intent getIntent(int) -> getIntent
    219:219:int getIntentCount() -> getIntentCount
    357:365:android.content.Intent[] getIntents() -> getIntents
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:341:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:296:void startActivities(android.os.Bundle) -> startActivities
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Default:
    9:9:void <init>() -> <init>
    25:25:android.os.IBinder asBinder() -> asBinder
    22:22:void onIsPermissionRevocationEnabledForAppResult(boolean,boolean) -> onIsPermissionRevocationEnabledForAppResult
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub:
    34:36:void <init>() -> <init>
    54:54:android.os.IBinder asBinder() -> asBinder
    43:50:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback asInterface(android.os.IBinder) -> asInterface
    140:140:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getDefaultImpl() -> getDefaultImpl
    58:78:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    130:137:boolean setDefaultImpl(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> setDefaultImpl
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy:
    86:88:void <init>(android.os.IBinder) -> <init>
    91:91:android.os.IBinder asBinder() -> asBinder
    95:95:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    108:122:void onIsPermissionRevocationEnabledForAppResult(boolean,boolean) -> onIsPermissionRevocationEnabledForAppResult
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Default:
    9:9:void <init>() -> <init>
    27:27:android.os.IBinder asBinder() -> asBinder
    24:24:void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> isPermissionRevocationEnabledForApp
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub:
    36:38:void <init>() -> <init>
    56:56:android.os.IBinder asBinder() -> asBinder
    45:52:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService asInterface(android.os.IBinder) -> asInterface
    141:141:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService getDefaultImpl() -> getDefaultImpl
    60:78:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    131:138:boolean setDefaultImpl(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService) -> setDefaultImpl
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy:
    86:88:void <init>(android.os.IBinder) -> <init>
    91:91:android.os.IBinder asBinder() -> asBinder
    95:95:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    110:123:void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> isPermissionRevocationEnabledForApp
androidx.core.content.ContentProviderCompat -> androidx.core.content.ContentProviderCompat:
    29:31:void <init>() -> <init>
    45:49:android.content.Context requireContext(android.content.ContentProvider) -> requireContext
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    33:35:void <init>() -> <init>
    74:90:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContentValuesKt -> androidx.core.content.ContentValuesKt:
# {"id":"sourceFile","fileName":"ContentValues.kt"}
    28:47:android.content.ContentValues contentValuesOf(kotlin.Pair[]) -> contentValuesOf
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    162:165:void <clinit>() -> <clinit>
    173:175:void <init>() -> <init>
    554:555:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    658:659:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    611:622:java.io.File createFilesDir(java.io.File) -> createFilesDir
    186:190:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
    598:599:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    538:539:int getColor(android.content.Context,int) -> getColor
    519:519:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    302:303:java.io.File getDataDir(android.content.Context) -> getDataDir
    482:483:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    461:462:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    408:409:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    686:689:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    573:574:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    355:356:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    721:722:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    740:741:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    672:673:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    219:219:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    251:256:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    278:283:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    702:708:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    819:821:void <init>() -> <init>
    825:826:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    830:831:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api19Impl -> androidx.core.content.ContextCompat$Api19Impl:
    836:838:void <init>() -> <init>
    842:842:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    847:847:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    852:852:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    858:860:void <init>() -> <init>
    874:874:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    864:864:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    869:869:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api23Impl -> androidx.core.content.ContextCompat$Api23Impl:
    880:882:void <init>() -> <init>
    886:886:int getColor(android.content.Context,int) -> getColor
    891:891:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    896:896:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
androidx.core.content.ContextCompat$Api24Impl -> androidx.core.content.ContextCompat$Api24Impl:
    902:904:void <init>() -> <init>
    913:913:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    908:908:java.io.File getDataDir(android.content.Context) -> getDataDir
    918:918:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
androidx.core.content.ContextCompat$Api26Impl -> androidx.core.content.ContextCompat$Api26Impl:
    924:926:void <init>() -> <init>
    931:931:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.ContextCompat$Api28Impl:
    937:939:void <init>() -> <init>
    943:943:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
androidx.core.content.ContextCompat$Api30Impl -> androidx.core.content.ContextCompat$Api30Impl:
    949:951:void <init>() -> <init>
    955:955:java.lang.String getAttributionTag(android.content.Context) -> getAttributionTag
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
    748:814:void <clinit>() -> <clinit>
    747:747:void <init>() -> <init>
androidx.core.content.ContextKt -> androidx.core.content.ContextKt:
# {"id":"sourceFile","fileName":"Context.kt"}
    31:31:java.lang.Object getSystemService(android.content.Context) -> getSystemService
    59:60:void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1) -> withStyledAttributes
    76:77:void withStyledAttributes(android.content.Context,int,int[],kotlin.jvm.functions.Function1) -> withStyledAttributes
    52:60:void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withStyledAttributes$default
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    361:383:void <clinit>() -> <clinit>
    360:360:void <init>() -> <init>
    406:417:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    875:881:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    885:887:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    891:893:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    596:597:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    631:646:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    548:559:java.lang.String getType(android.net.Uri) -> getType
    441:442:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    471:472:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String) -> getUriForFile
    568:568:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    851:871:int modeToMode(java.lang.String) -> modeToMode
    393:393:boolean onCreate() -> onCreate
    620:622:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    657:714:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    508:533:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    578:578:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    754:758:void <init>(java.lang.String) -> <init>
    765:778:void addRoot(java.lang.String,java.io.File) -> addRoot
    820:842:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    784:815:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.IntentCompat -> androidx.core.content.IntentCompat:
    39:41:void <init>() -> <init>
    170:199:android.content.Intent createManageUnusedAppRestrictionsIntent(android.content.Context,java.lang.String) -> createManageUnusedAppRestrictionsIntent
    117:118:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
androidx.core.content.LocusIdCompat -> androidx.core.content.LocusIdCompat:
    80:87:void <init>(java.lang.String) -> <init>
    107:114:boolean equals(java.lang.Object) -> equals
    94:94:java.lang.String getId() -> getId
    146:147:java.lang.String getSanitizedId() -> getSanitizedId
    99:102:int hashCode() -> hashCode
    130:130:android.content.LocusId toLocusId() -> toLocusId
    139:140:androidx.core.content.LocusIdCompat toLocusIdCompat(android.content.LocusId) -> toLocusIdCompat
    121:121:java.lang.String toString() -> toString
androidx.core.content.LocusIdCompat$Api29Impl -> androidx.core.content.LocusIdCompat$Api29Impl:
    152:152:void <init>() -> <init>
    159:159:android.content.LocusId create(java.lang.String) -> create
    167:167:java.lang.String getId(android.content.LocusId) -> getId
androidx.core.content.MimeTypeFilter -> androidx.core.content.MimeTypeFilter:
    43:44:void <init>() -> <init>
    76:83:boolean matches(java.lang.String,java.lang.String) -> matches
    93:105:java.lang.String matches(java.lang.String,java.lang.String[]) -> matches
    115:127:java.lang.String matches(java.lang.String[],java.lang.String) -> matches
    137:150:java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> matchesMany
    48:68:boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> mimeTypeAgainstFilter
androidx.core.content.PackageManagerCompat -> androidx.core.content.PackageManagerCompat:
    56:58:void <init>() -> <init>
    202:208:boolean areUnusedAppRestrictionsAvailable(android.content.pm.PackageManager) -> areUnusedAppRestrictionsAvailable
    222:248:java.lang.String getPermissionRevocationVerifierApp(android.content.pm.PackageManager) -> getPermissionRevocationVerifierApp
    137:191:com.google.common.util.concurrent.ListenableFuture getUnusedAppRestrictionsStatus(android.content.Context) -> getUnusedAppRestrictionsStatus
androidx.core.content.PackageManagerCompat$$ExternalSyntheticLambda0 -> androidx.core.content.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.content.UnusedAppRestrictionsBackportServiceConnection androidx.core.content.PackageManagerCompat$$InternalSyntheticLambda$0$72ac054f5f42cb11fb04a443d841339f93578d3f0a2689efeb582cb18e9879b4$0.f$0 -> b
    void androidx.core.content.PackageManagerCompat$$InternalSyntheticLambda$0$72ac054f5f42cb11fb04a443d841339f93578d3f0a2689efeb582cb18e9879b4$0.<init>(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.content.PackageManagerCompat$$InternalSyntheticLambda$0$72ac054f5f42cb11fb04a443d841339f93578d3f0a2689efeb582cb18e9879b4$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.content.PackageManagerCompat$Api30Impl -> androidx.core.content.PackageManagerCompat$Api30Impl:
    260:260:void <init>() -> <init>
    264:264:boolean areUnusedAppRestrictionsEnabled(android.content.Context) -> areUnusedAppRestrictionsEnabled
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    78:80:void <init>() -> <init>
    180:183:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    161:165:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    98:128:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    143:144:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.SharedPreferencesCompat -> androidx.core.content.SharedPreferencesCompat:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> androidx.core.content.SharedPreferencesCompat$EditorCompat:
    57:59:void <init>() -> <init>
    80:81:void apply(android.content.SharedPreferences$Editor) -> apply
    66:69:androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper:
    40:41:void <init>() -> <init>
    45:52:void apply(android.content.SharedPreferences$Editor) -> apply
androidx.core.content.SharedPreferencesKt -> androidx.core.content.SharedPreferencesKt:
# {"id":"sourceFile","fileName":"SharedPreferences.kt"}
    43:50:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit
    39:50:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> edit$default
androidx.core.content.UnusedAppRestrictionsBackportCallback -> androidx.core.content.UnusedAppRestrictionsBackportCallback:
    40:42:void <init>(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> <init>
    54:55:void onResult(boolean,boolean) -> onResult
androidx.core.content.UnusedAppRestrictionsBackportService -> androidx.core.content.UnusedAppRestrictionsBackportService:
    40:50:void <init>() -> <init>
    70:70:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.content.UnusedAppRestrictionsBackportService$1 -> androidx.core.content.UnusedAppRestrictionsBackportService$1:
    51:51:void <init>(androidx.core.content.UnusedAppRestrictionsBackportService) -> <init>
    55:64:void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> isPermissionRevocationEnabledForApp
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection -> androidx.core.content.UnusedAppRestrictionsBackportServiceConnection:
    69:78:void <init>(android.content.Context) -> <init>
    100:111:void connectAndFetchResult(androidx.concurrent.futures.ResolvableFuture) -> connectAndFetchResult
    114:119:void disconnectFromService() -> disconnectFromService
    122:122:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback getBackportCallback() -> getBackportCallback
    82:92:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    96:97:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1 -> androidx.core.content.UnusedAppRestrictionsBackportServiceConnection$1:
    122:122:void <init>(androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) -> <init>
    126:138:void onIsPermissionRevocationEnabledForAppResult(boolean,boolean) -> onIsPermissionRevocationEnabledForAppResult
androidx.core.content.UnusedAppRestrictionsConstants -> androidx.core.content.UnusedAppRestrictionsConstants:
    24:26:void <init>() -> <init>
androidx.core.content.pm.ActivityInfoCompat -> androidx.core.content.pm.ActivityInfoCompat:
    27:29:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    261:262:void <init>() -> <init>
    244:249:boolean byteArrayContains(byte[][],byte[]) -> byteArrayContains
    254:257:byte[] computeSHA256Digest(byte[]) -> computeSHA256Digest
    50:53:long getLongVersionCode(android.content.pm.PackageInfo) -> getLongVersionCode
    86:107:java.util.List getSignatures(android.content.pm.PackageManager,java.lang.String) -> getSignatures
    140:240:boolean hasSignatures(android.content.pm.PackageManager,java.lang.String,java.util.Map,boolean) -> hasSignatures
androidx.core.content.pm.PackageInfoCompat$Api28Impl -> androidx.core.content.pm.PackageInfoCompat$Api28Impl:
    266:267:void <init>() -> <init>
    280:280:android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo) -> getApkContentsSigners
    285:285:android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo) -> getSigningCertificateHistory
    275:275:boolean hasMultipleSigners(android.content.pm.SigningInfo) -> hasMultipleSigners
    271:271:boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int) -> hasSigningCertificate
androidx.core.content.pm.PermissionInfoCompat -> androidx.core.content.pm.PermissionInfoCompat:
    34:35:void <init>() -> <init>
    74:77:int getProtection(android.content.pm.PermissionInfo) -> getProtection
    88:91:int getProtectionFlags(android.content.pm.PermissionInfo) -> getProtectionFlags
androidx.core.content.pm.ShortcutInfoChangeListener -> androidx.core.content.pm.ShortcutInfoChangeListener:
    34:34:void <init>() -> <init>
    45:45:void onAllShortcutsRemoved() -> onAllShortcutsRemoved
    36:36:void onShortcutAdded(java.util.List) -> onShortcutAdded
    42:42:void onShortcutRemoved(java.util.List) -> onShortcutRemoved
    39:39:void onShortcutUpdated(java.util.List) -> onShortcutUpdated
    48:48:void onShortcutUsageReported(java.util.List) -> onShortcutUsageReported
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    97:101:void <init>() -> <init>
    175:194:android.content.Intent addToIntent(android.content.Intent) -> addToIntent
    157:171:android.os.PersistableBundle buildLegacyExtrasBundle() -> buildLegacyExtrasBundle
    370:374:java.util.List fromShortcuts(android.content.Context,java.util.List) -> fromShortcuts
    228:228:android.content.ComponentName getActivity() -> getActivity
    297:297:java.util.Set getCategories() -> getCategories
    259:259:java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    266:266:int getDisabledReason() -> getDisabledReason
    379:379:android.os.PersistableBundle getExtras() -> getExtras
    326:326:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    206:206:java.lang.String getId() -> getId
    277:277:android.content.Intent getIntent() -> getIntent
    287:287:android.content.Intent[] getIntents() -> getIntents
    394:394:long getLastChangedTimestamp() -> getLastChangedTimestamp
    309:309:androidx.core.content.LocusIdCompat getLocusId() -> getLocusId
    473:477:androidx.core.content.LocusIdCompat getLocusId(android.content.pm.ShortcutInfo) -> getLocusId
    488:490:androidx.core.content.LocusIdCompat getLocusIdFromExtra(android.os.PersistableBundle) -> getLocusIdFromExtra
    248:248:java.lang.CharSequence getLongLabel() -> getLongLabel
    357:360:boolean getLongLivedFromExtra(android.os.PersistableBundle) -> getLongLivedFromExtra
    214:214:java.lang.String getPackage() -> getPackage
    337:347:androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle) -> getPersonsFromExtra
    318:318:int getRank() -> getRank
    238:238:java.lang.CharSequence getShortLabel() -> getShortLabel
    387:387:android.os.UserHandle getUserHandle() -> getUserHandle
    467:467:boolean hasKeyFieldsOnly() -> hasKeyFieldsOnly
    399:399:boolean isCached() -> isCached
    423:423:boolean isDeclaredInManifest() -> isDeclaredInManifest
    404:404:boolean isDynamic() -> isDynamic
    447:447:boolean isEnabled() -> isEnabled
    439:439:boolean isImmutable() -> isImmutable
    409:409:boolean isPinned() -> isPinned
    108:148:android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
androidx.core.content.pm.ShortcutInfoCompat$Builder -> androidx.core.content.pm.ShortcutInfoCompat$Builder:
    504:508:void <init>(android.content.Context,java.lang.String) -> <init>
    514:548:void <init>(androidx.core.content.pm.ShortcutInfoCompat) -> <init>
    555:589:void <init>(android.content.Context,android.content.pm.ShortcutInfo) -> <init>
    827:831:androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String) -> addCapabilityBinding
    853:865:androidx.core.content.pm.ShortcutInfoCompat$Builder addCapabilityBinding(java.lang.String,java.lang.String,java.util.List) -> addCapabilityBinding
    885:932:androidx.core.content.pm.ShortcutInfoCompat build() -> build
    706:707:androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> setActivity
    724:725:androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged() -> setAlwaysBadged
    763:764:androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set) -> setCategories
    628:629:androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> setDisabledMessage
    810:811:androidx.core.content.pm.ShortcutInfoCompat$Builder setExtras(android.os.PersistableBundle) -> setExtras
    663:664:androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    643:643:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> setIntent
    654:655:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> setIntents
    693:694:androidx.core.content.pm.ShortcutInfoCompat$Builder setIsConversation() -> setIsConversation
    677:678:androidx.core.content.pm.ShortcutInfoCompat$Builder setLocusId(androidx.core.content.LocusIdCompat) -> setLocusId
    616:617:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
    773:774:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived() -> setLongLived
    784:785:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived(boolean) -> setLongLived
    738:738:androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person) -> setPerson
    746:747:androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[]) -> setPersons
    796:797:androidx.core.content.pm.ShortcutInfoCompat$Builder setRank(int) -> setRank
    602:603:androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
    875:876:androidx.core.content.pm.ShortcutInfoCompat$Builder setSliceUri(android.net.Uri) -> setSliceUri
androidx.core.content.pm.ShortcutInfoCompatSaver -> androidx.core.content.pm.ShortcutInfoCompatSaver:
    36:36:void <init>() -> <init>
    48:48:java.util.List getShortcuts() -> getShortcuts
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl -> androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl:
    57:57:void <init>() -> <init>
    56:56:java.lang.Object addShortcuts(java.util.List) -> addShortcuts
    60:60:java.lang.Void addShortcuts(java.util.List) -> addShortcuts
    56:56:java.lang.Object removeAllShortcuts() -> removeAllShortcuts
    70:70:java.lang.Void removeAllShortcuts() -> removeAllShortcuts
    56:56:java.lang.Object removeShortcuts(java.util.List) -> removeShortcuts
    65:65:java.lang.Void removeShortcuts(java.util.List) -> removeShortcuts
androidx.core.content.pm.ShortcutManagerCompat -> androidx.core.content.pm.ShortcutManagerCompat:
    127:137:void <clinit>() -> <clinit>
    144:146:void <init>() -> <init>
    316:333:boolean addDynamicShortcuts(android.content.Context,java.util.List) -> addDynamicShortcuts
    534:552:boolean convertUriIconToBitmapIcon(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> convertUriIconToBitmapIcon
    558:564:void convertUriIconsToBitmapIcons(android.content.Context,java.util.List) -> convertUriIconsToBitmapIcons
    233:241:android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> createShortcutResultIntent
    585:594:void disableShortcuts(android.content.Context,java.util.List,java.lang.CharSequence) -> disableShortcuts
    612:624:void enableShortcuts(android.content.Context,java.util.List) -> enableShortcuts
    479:495:java.util.List getDynamicShortcuts(android.content.Context) -> getDynamicShortcuts
    798:807:int getIconDimensionInternal(android.content.Context,boolean) -> getIconDimensionInternal
    389:393:int getIconMaxHeight(android.content.Context) -> getIconMaxHeight
    378:382:int getIconMaxWidth(android.content.Context) -> getIconMaxWidth
    341:346:int getMaxShortcutCountPerActivity(android.content.Context) -> getMaxShortcutCountPerActivity
    793:793:java.util.List getShortcutInfoChangeListeners() -> getShortcutInfoChangeListeners
    770:778:java.lang.String getShortcutInfoCompatWithLowestRank(java.util.List) -> getShortcutInfoCompatWithLowestRank
    832:871:java.util.List getShortcutInfoListeners(android.content.Context) -> getShortcutInfoListeners
    811:828:androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context) -> getShortcutInfoSaverInstance
    274:299:java.util.List getShortcuts(android.content.Context,int) -> getShortcuts
    358:364:boolean isRateLimitingActive(android.content.Context) -> isRateLimitingActive
    153:168:boolean isRequestPinShortcutSupported(android.content.Context) -> isRequestPinShortcutSupported
    723:765:boolean pushDynamicShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> pushDynamicShortcut
    653:661:void removeAllDynamicShortcuts(android.content.Context) -> removeAllDynamicShortcuts
    635:643:void removeDynamicShortcuts(android.content.Context,java.util.List) -> removeDynamicShortcuts
    676:686:void removeLongLivedShortcuts(android.content.Context,java.util.List) -> removeLongLivedShortcuts
    415:424:void reportShortcutUsed(android.content.Context,java.lang.String) -> reportShortcutUsed
    190:217:boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> requestPinShortcut
    449:467:boolean setDynamicShortcuts(android.content.Context,java.util.List) -> setDynamicShortcuts
    788:789:void setShortcutInfoChangeListeners(java.util.List) -> setShortcutInfoChangeListeners
    783:784:void setShortcutInfoCompatSaver(androidx.core.content.pm.ShortcutInfoCompatSaver) -> setShortcutInfoCompatSaver
    511:528:boolean updateShortcuts(android.content.Context,java.util.List) -> updateShortcuts
androidx.core.content.pm.ShortcutManagerCompat$1 -> androidx.core.content.pm.ShortcutManagerCompat$1:
    207:207:void <init>(android.content.IntentSender) -> <init>
    211:215:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.pm.ShortcutManagerCompat$Api25Impl -> androidx.core.content.pm.ShortcutManagerCompat$Api25Impl:
    875:875:void <init>() -> <init>
    877:885:java.lang.String getShortcutInfoWithLowestRank(java.util.List) -> getShortcutInfoWithLowestRank
androidx.core.content.pm.ShortcutXmlParser -> androidx.core.content.pm.ShortcutXmlParser:
    60:60:void <clinit>() -> <clinit>
    79:81:void <init>() -> <init>
    160:165:java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String) -> getAttributeValue
    68:76:java.util.List getShortcutIds(android.content.Context) -> getShortcutIds
    120:127:android.content.res.XmlResourceParser getXmlResourceParser(android.content.Context,android.content.pm.ActivityInfo) -> getXmlResourceParser
    90:115:java.util.Set parseShortcutIds(android.content.Context) -> parseShortcutIds
    138:156:java.util.List parseShortcutIds(org.xmlpull.v1.XmlPullParser) -> parseShortcutIds
androidx.core.content.res.CamColor -> androidx.core.content.res.CamColor:
    128:138:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    290:295:float distance(androidx.core.content.res.CamColor) -> distance
    483:534:androidx.core.content.res.CamColor findCamByJ(float,float,float) -> findCamByJ
    160:160:androidx.core.content.res.CamColor fromColor(int) -> fromColor
    171:242:androidx.core.content.res.CamColor fromColorInViewingConditions(int,androidx.core.content.res.ViewingConditions) -> fromColorInViewingConditions
    253:253:androidx.core.content.res.CamColor fromJch(float,float,float) -> fromJch
    264:280:androidx.core.content.res.CamColor fromJchInFrame(float,float,float,androidx.core.content.res.ViewingConditions) -> fromJchInFrame
    116:116:float getAStar() -> getAStar
    123:123:float getBStar() -> getBStar
    63:63:float getChroma() -> getChroma
    57:57:float getHue() -> getHue
    69:69:float getJ() -> getJ
    109:109:float getJStar() -> getJStar
    92:92:float getM() -> getM
    81:81:float getQ() -> getQ
    103:103:float getS() -> getS
    149:149:int toColor(float,float,float) -> toColor
    414:471:int toColor(float,float,float,androidx.core.content.res.ViewingConditions) -> toColor
    308:354:int viewed(androidx.core.content.res.ViewingConditions) -> viewed
    301:301:int viewedInSrgb() -> viewedInSrgb
androidx.core.content.res.CamUtils -> androidx.core.content.res.CamUtils:
    52:73:void <clinit>() -> <clinit>
    48:49:void <init>() -> <init>
    80:101:int intFromLStar(float) -> intFromLStar
    111:111:float lStarFromInt(int) -> lStarFromInt
    115:123:float lStarFromY(float) -> lStarFromY
    106:106:float lerp(float,float,float) -> lerp
    158:163:float linearized(int) -> linearized
    137:145:float[] xyzFromInt(int) -> xyzFromInt
    127:132:float yFromInt(int) -> yFromInt
    149:153:float yFromLStar(float) -> yFromLStar
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    53:53:void <clinit>() -> <clinit>
    55:56:void <init>() -> <init>
    92:104:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    119:125:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    224:229:android.util.TypedValue getTypedValue() -> getTypedValue
    71:76:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    134:212:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    216:218:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    242:255:int modulateColorAlpha(int,float,float) -> modulateColorAlpha
    234:235:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.ConfigurationHelper -> androidx.core.content.res.ConfigurationHelper:
    31:32:void <init>() -> <init>
    41:42:int getDensityDpi(android.content.res.Resources) -> getDensityDpi
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    355:356:void <init>() -> <init>
    253:254:int getType(android.content.res.TypedArray,int) -> getType
    184:192:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    270:295:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    197:203:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    209:249:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    309:337:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    342:353:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    300:304:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    169:171:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    174:174:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    129:136:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    139:139:java.lang.String getFileName() -> getFileName
    159:159:int getResourceId() -> getResourceId
    155:155:int getTtcIndex() -> getTtcIndex
    151:151:java.lang.String getVariationSettings() -> getVariationSettings
    143:143:int getWeight() -> getWeight
    147:147:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    86:91:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    95:96:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    103:103:int getFetchStrategy() -> getFetchStrategy
    99:99:androidx.core.provider.FontRequest getRequest() -> getRequest
    113:113:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    107:107:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    66:67:void <init>() -> <init>
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    71:83:android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    179:179:void <init>() -> <init>
    42:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:62:int[] append(int[],int,int) -> append
    69:75:long[] append(long[],int,long) -> append
    82:88:boolean[] append(boolean[],int,boolean) -> append
    175:175:int growSize(int) -> growSize
    104:115:java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> insert
    122:132:int[] insert(int[],int,int,int) -> insert
    139:149:long[] insert(long[],int,int,long) -> insert
    156:166:boolean[] insert(boolean[],int,int,boolean) -> insert
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    69:72:void <clinit>() -> <clinit>
    646:646:void <init>() -> <init>
    260:269:void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList) -> addColorStateListToCache
    239:254:android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int) -> getCachedColorStateList
    398:401:android.graphics.Typeface getCachedFont(android.content.Context,int) -> getCachedFont
    166:167:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    197:211:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    103:104:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    136:137:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    333:343:float getFloat(android.content.res.Resources,int) -> getFloat
    369:372:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    490:498:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    508:511:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    280:285:android.util.TypedValue getTypedValue() -> getTypedValue
    223:233:android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflateColorStateList
    272:274:boolean isColorInt(android.content.res.Resources,int) -> isColorInt
    531:539:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    561:622:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$Api23Impl -> androidx.core.content.res.ResourcesCompat$Api23Impl:
    635:637:void <init>() -> <init>
    642:642:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry:
    316:319:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey -> androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey:
    292:295:void <init>(android.content.res.Resources,android.content.res.Resources$Theme) -> <init>
    299:303:boolean equals(java.lang.Object) -> equals
    308:308:int hashCode() -> hashCode
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    408:408:void <init>() -> <init>
    454:460:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    438:444:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    466:466:android.os.Handler getHandler(android.os.Handler) -> getHandler
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    438:438:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    441:442:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    454:454:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    457:458:void run() -> run
androidx.core.content.res.ResourcesCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ImplApi29:
    627:627:void <init>() -> <init>
    629:629:float getFloat(android.content.res.Resources,int) -> getFloat
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    652:652:void <init>() -> <init>
    668:673:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
    686:686:void <clinit>() -> <clinit>
    685:685:void <init>() -> <init>
    692:711:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
    677:677:void <init>() -> <init>
    679:680:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayKt -> androidx.core.content.res.TypedArrayKt:
# {"id":"sourceFile","fileName":"TypedArray.kt"}
    30:33:void checkAttribute(android.content.res.TypedArray,int) -> checkAttribute
    43:44:boolean getBooleanOrThrow(android.content.res.TypedArray,int) -> getBooleanOrThrow
    56:57:int getColorOrThrow(android.content.res.TypedArray,int) -> getColorOrThrow
    68:70:android.content.res.ColorStateList getColorStateListOrThrow(android.content.res.TypedArray,int) -> getColorStateListOrThrow
    82:83:float getDimensionOrThrow(android.content.res.TypedArray,int) -> getDimensionOrThrow
    95:96:int getDimensionPixelOffsetOrThrow(android.content.res.TypedArray,int) -> getDimensionPixelOffsetOrThrow
    108:109:int getDimensionPixelSizeOrThrow(android.content.res.TypedArray,int) -> getDimensionPixelSizeOrThrow
    120:121:android.graphics.drawable.Drawable getDrawableOrThrow(android.content.res.TypedArray,int) -> getDrawableOrThrow
    132:133:float getFloatOrThrow(android.content.res.TypedArray,int) -> getFloatOrThrow
    145:146:android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int) -> getFontOrThrow
    157:158:int getIntOrThrow(android.content.res.TypedArray,int) -> getIntOrThrow
    169:170:int getIntegerOrThrow(android.content.res.TypedArray,int) -> getIntegerOrThrow
    182:183:int getResourceIdOrThrow(android.content.res.TypedArray,int) -> getResourceIdOrThrow
    194:196:java.lang.String getStringOrThrow(android.content.res.TypedArray,int) -> getStringOrThrow
    222:223:java.lang.CharSequence[] getTextArrayOrThrow(android.content.res.TypedArray,int) -> getTextArrayOrThrow
    208:210:java.lang.CharSequence getTextOrThrow(android.content.res.TypedArray,int) -> getTextOrThrow
    232:234:java.lang.Object use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> use
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    362:363:void <init>() -> <init>
    354:359:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.content.res.ViewingConditions -> androidx.core.content.res.ViewingConditions:
    53:56:void <clinit>() -> <clinit>
    112:123:void <init>(float,float,float,float,float,float,float[],float,float,float) -> <init>
    71:71:float getAw() -> getAw
    87:87:float getC() -> getC
    100:100:float getFl() -> getFl
    104:104:float getFlRoot() -> getFlRoot
    75:75:float getN() -> getN
    79:79:float getNbb() -> getNbb
    91:91:float getNc() -> getNc
    83:83:float getNcb() -> getNcb
    96:96:float[] getRgbD() -> getRgbD
    108:108:float getZ() -> getZ
    130:191:androidx.core.content.res.ViewingConditions make(float[],float,float,float,boolean) -> make
androidx.core.database.CursorKt -> androidx.core.database.CursorKt:
# {"id":"sourceFile","fileName":"Cursor.kt"}
    34:34:byte[] getBlobOrNull(android.database.Cursor,int) -> getBlobOrNull
    47:47:java.lang.Double getDoubleOrNull(android.database.Cursor,int) -> getDoubleOrNull
    60:60:java.lang.Float getFloatOrNull(android.database.Cursor,int) -> getFloatOrNull
    73:73:java.lang.Integer getIntOrNull(android.database.Cursor,int) -> getIntOrNull
    86:86:java.lang.Long getLongOrNull(android.database.Cursor,int) -> getLongOrNull
    99:99:java.lang.Short getShortOrNull(android.database.Cursor,int) -> getShortOrNull
    112:112:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
androidx.core.database.CursorWindowCompat -> androidx.core.database.CursorWindowCompat:
    30:32:void <init>() -> <init>
    42:45:android.database.CursorWindow create(java.lang.String,long) -> create
androidx.core.database.DatabaseUtilsCompat -> androidx.core.database.DatabaseUtilsCompat:
    29:31:void <init>() -> <init>
    60:66:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
    41:48:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
androidx.core.database.sqlite.SQLiteCursorCompat -> androidx.core.database.sqlite.SQLiteCursorCompat:
    29:31:void <init>() -> <init>
    45:48:void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean) -> setFillWindowForwardOnly
androidx.core.database.sqlite.SQLiteDatabaseKt -> androidx.core.database.sqlite.SQLiteDatabaseKt:
# {"id":"sourceFile","fileName":"SQLiteDatabase.kt"}
    30:40:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction
    26:40:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> transaction$default
androidx.core.graphics.BitmapCompat -> androidx.core.graphics.BitmapCompat:
    54:54:void <init>() -> <init>
    48:49:int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    28:29:boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    35:38:void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
androidx.core.graphics.BitmapKt -> androidx.core.graphics.BitmapKt:
# {"id":"sourceFile","fileName":"Bitmap.kt"}
    42:44:android.graphics.Bitmap applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> applyCanvas
    128:128:boolean contains(android.graphics.Bitmap,android.graphics.Point) -> contains
    137:137:boolean contains(android.graphics.Bitmap,android.graphics.PointF) -> contains
    94:94:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    118:118:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace) -> createBitmap
    89:94:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,int,java.lang.Object) -> createBitmap$default
    111:118:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object) -> createBitmap$default
    51:51:int get(android.graphics.Bitmap,int,int) -> get
    76:76:android.graphics.Bitmap scale(android.graphics.Bitmap,int,int,boolean) -> scale
    75:76:android.graphics.Bitmap scale$default(android.graphics.Bitmap,int,int,boolean,int,java.lang.Object) -> scale$default
    62:62:void set(android.graphics.Bitmap,int,int,int) -> set
androidx.core.graphics.BlendModeColorFilterCompat -> androidx.core.graphics.BlendModeColorFilterCompat:
    54:54:void <init>() -> <init>
    42:50:android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat) -> createBlendModeColorFilterCompat
androidx.core.graphics.BlendModeCompat -> androidx.core.graphics.BlendModeCompat:
    27:419:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.core.graphics.BlendModeCompat valueOf(java.lang.String) -> valueOf
    27:27:androidx.core.graphics.BlendModeCompat[] values() -> values
androidx.core.graphics.BlendModeUtils -> androidx.core.graphics.BlendModeUtils:
    148:148:void <init>() -> <init>
    35:95:android.graphics.BlendMode obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainBlendModeFromCompat
    101:144:android.graphics.PorterDuff$Mode obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainPorterDuffFromCompat
androidx.core.graphics.BlendModeUtils$1 -> androidx.core.graphics.BlendModeUtils$1:
    35:35:void <clinit>() -> <clinit>
androidx.core.graphics.CanvasKt -> androidx.core.graphics.CanvasKt:
# {"id":"sourceFile","fileName":"Canvas.kt"}
    138:145:void withClip(android.graphics.Canvas,android.graphics.Rect,kotlin.jvm.functions.Function1) -> withClip
    155:162:void withClip(android.graphics.Canvas,android.graphics.RectF,kotlin.jvm.functions.Function1) -> withClip
    175:182:void withClip(android.graphics.Canvas,int,int,int,int,kotlin.jvm.functions.Function1) -> withClip
    195:202:void withClip(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withClip
    212:219:void withClip(android.graphics.Canvas,android.graphics.Path,kotlin.jvm.functions.Function1) -> withClip
    121:128:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix
    117:128:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withMatrix$default
    66:73:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation
    60:73:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withRotation$default
    30:36:void withSave(android.graphics.Canvas,kotlin.jvm.functions.Function1) -> withSave
    86:93:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale
    79:93:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withScale$default
    104:111:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew
    99:111:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withSkew$default
    47:54:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation
    42:54:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withTranslation$default
androidx.core.graphics.ColorKt -> androidx.core.graphics.ColorKt:
# {"id":"sourceFile","fileName":"Color.kt"}
    39:39:float component1(android.graphics.Color) -> component1
    149:149:int component1(int) -> component1
    229:229:float component1(long) -> component1
    53:53:float component2(android.graphics.Color) -> component2
    163:163:int component2(int) -> component2
    243:243:float component2(long) -> component2
    67:67:float component3(android.graphics.Color) -> component3
    177:177:int component3(int) -> component3
    257:257:float component3(long) -> component3
    81:81:float component4(android.graphics.Color) -> component4
    191:191:int component4(int) -> component4
    271:271:float component4(long) -> component4
    365:365:long convertTo(int,android.graphics.ColorSpace$Named) -> convertTo
    377:377:long convertTo(int,android.graphics.ColorSpace) -> convertTo
    389:389:long convertTo(long,android.graphics.ColorSpace$Named) -> convertTo
    401:401:long convertTo(long,android.graphics.ColorSpace) -> convertTo
    412:412:android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named) -> convertTo
    422:422:android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace) -> convertTo
    111:111:int getAlpha(int) -> getAlpha
    281:281:float getAlpha(long) -> getAlpha
    135:135:int getBlue(int) -> getBlue
    311:311:float getBlue(long) -> getBlue
    353:353:android.graphics.ColorSpace getColorSpace(long) -> getColorSpace
    127:127:int getGreen(int) -> getGreen
    301:301:float getGreen(long) -> getGreen
    200:200:float getLuminance(int) -> getLuminance
    319:319:float getLuminance(long) -> getLuminance
    119:119:int getRed(int) -> getRed
    291:291:float getRed(long) -> getRed
    340:340:boolean isSrgb(long) -> isSrgb
    347:347:boolean isWideGamut(long) -> isWideGamut
    103:103:android.graphics.Color plus(android.graphics.Color,android.graphics.Color) -> plus
    207:207:android.graphics.Color toColor(int) -> toColor
    325:325:android.graphics.Color toColor(long) -> toColor
    332:332:int toColorInt(long) -> toColorInt
    441:441:int toColorInt(java.lang.String) -> toColorInt
    215:215:long toColorLong(int) -> toColorLong
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    306:356:int HSLToColor(float[]) -> HSLToColor
    570:572:int LABToColor(double,double,double) -> LABToColor
    513:527:void LABToXYZ(double,double,double,double[]) -> LABToXYZ
    241:275:void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    399:403:void RGBToLAB(int,int,int,double[]) -> RGBToLAB
    444:458:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    544:555:int XYZToColor(double,double,double) -> XYZToColor
    481:490:void XYZToLAB(double,double,double,double[]) -> XYZToLAB
    611:616:int blendARGB(int,int,float) -> blendARGB
    633:641:void blendHSL(float[],float[],float,float[]) -> blendHSL
    656:663:void blendLAB(double[],double[],double,double[]) -> blendLAB
    159:172:double calculateContrast(int,int) -> calculateContrast
    145:148:double calculateLuminance(int) -> calculateLuminance
    187:222:int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    667:674:float circularInterpolate(float,float,float) -> circularInterpolate
    289:290:void colorToHSL(int,float[]) -> colorToHSL
    378:379:void colorToLAB(int,double[]) -> colorToLAB
    421:422:void colorToXYZ(int,double[]) -> colorToXYZ
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    92:127:android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    585:585:float constrain(float,float,float) -> constrain
    589:589:int constrain(int,int,int) -> constrain
    579:581:double distanceEuclidean(double[],double[]) -> distanceEuclidean
    678:683:double[] getTempDouble3Array() -> getTempDouble3Array
    593:595:double pivotXyzComponent(double) -> pivotXyzComponent
    365:368:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.ImageDecoderKt -> androidx.core.graphics.ImageDecoderKt:
# {"id":"sourceFile","fileName":"ImageDecoder.kt"}
    35:35:android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3) -> decodeBitmap
    49:49:android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3) -> decodeDrawable
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1 -> androidx.core.graphics.ImageDecoderKt$decodeBitmap$1:
# {"id":"sourceFile","fileName":"ImageDecoder.kt"}
    36:37:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1 -> androidx.core.graphics.ImageDecoderKt$decodeDrawable$1:
# {"id":"sourceFile","fileName":"ImageDecoder.kt"}
    50:51:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:48:void <init>(int,int,int,int) -> <init>
    89:89:androidx.core.graphics.Insets add(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> add
    141:151:boolean equals(java.lang.Object) -> equals
    156:160:int hashCode() -> hashCode
    114:115:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    128:129:androidx.core.graphics.Insets min(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> min
    63:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    101:101:androidx.core.graphics.Insets subtract(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> subtract
    188:188:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    198:198:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    165:165:java.lang.String toString() -> toString
    178:178:androidx.core.graphics.Insets wrap(android.graphics.Insets) -> wrap
androidx.core.graphics.MatrixKt -> androidx.core.graphics.MatrixKt:
# {"id":"sourceFile","fileName":"Matrix.kt"}
    53:55:android.graphics.Matrix rotationMatrix(float,float,float) -> rotationMatrix
    52:52:android.graphics.Matrix rotationMatrix$default(float,float,float,int,java.lang.Object) -> rotationMatrix$default
    46:55:android.graphics.Matrix scaleMatrix(float,float) -> scaleMatrix
    45:45:android.graphics.Matrix scaleMatrix$default(float,float,int,java.lang.Object) -> scaleMatrix$default
    27:55:android.graphics.Matrix times(android.graphics.Matrix,android.graphics.Matrix) -> times
    39:55:android.graphics.Matrix translationMatrix(float,float) -> translationMatrix
    38:38:android.graphics.Matrix translationMatrix$default(float,float,int,java.lang.Object) -> translationMatrix$default
    32:55:float[] values(android.graphics.Matrix) -> values
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    40:40:void <clinit>() -> <clinit>
    156:156:void <init>() -> <init>
    51:52:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    145:153:androidx.core.util.Pair obtainEmptyRects() -> obtainEmptyRects
    126:140:boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat) -> setBlendMode
androidx.core.graphics.PaintKt -> androidx.core.graphics.PaintKt:
# {"id":"sourceFile","fileName":"Paint.kt"}
    29:29:boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat) -> setBlendMode
androidx.core.graphics.PathKt -> androidx.core.graphics.PathKt:
# {"id":"sourceFile","fileName":"Path.kt"}
    69:71:android.graphics.Path and(android.graphics.Path,android.graphics.Path) -> and
    35:35:java.lang.Iterable flatten(android.graphics.Path,float) -> flatten
    34:34:java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object) -> flatten$default
    52:54:android.graphics.Path minus(android.graphics.Path,android.graphics.Path) -> minus
    61:61:android.graphics.Path or(android.graphics.Path,android.graphics.Path) -> or
    42:44:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> or
    42:44:android.graphics.Path or(android.graphics.Path,android.graphics.Path):61 -> or
    61:61:android.graphics.Path or(android.graphics.Path,android.graphics.Path) -> or
    42:44:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> plus
    79:81:android.graphics.Path xor(android.graphics.Path,android.graphics.Path) -> xor
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    795:796:void <init>() -> <init>
    190:191:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:151:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    54:65:float[] copyOfRange(float[],int,int) -> copyOfRange
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:244:float[] getFloats(java.lang.String) -> getFloats
    315:332:boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float) -> interpolatePathDataNodes
    174:186:int nextStart(java.lang.String,int) -> nextStart
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.PathSegment -> androidx.core.graphics.PathSegment:
    37:42:void <init>(android.graphics.PointF,float,android.graphics.PointF,float) -> <init>
    72:78:boolean equals(java.lang.Object) -> equals
    60:60:android.graphics.PointF getEnd() -> getEnd
    67:67:float getEndFraction() -> getEndFraction
    47:47:android.graphics.PointF getStart() -> getStart
    54:54:float getStartFraction() -> getStartFraction
    83:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> androidx.core.graphics.PathUtils:
    82:83:void <init>() -> <init>
    43:43:java.util.Collection flatten(android.graphics.Path) -> flatten
    60:79:java.util.Collection flatten(android.graphics.Path,float) -> flatten
androidx.core.graphics.PictureKt -> androidx.core.graphics.PictureKt:
# {"id":"sourceFile","fileName":"Picture.kt"}
    36:42:android.graphics.Picture record(android.graphics.Picture,int,int,kotlin.jvm.functions.Function1) -> record
androidx.core.graphics.PointKt -> androidx.core.graphics.PointKt:
# {"id":"sourceFile","fileName":"Point.kt"}
    33:33:int component1(android.graphics.Point) -> component1
    55:55:float component1(android.graphics.PointF) -> component1
    44:44:int component2(android.graphics.Point) -> component2
    66:66:float component2(android.graphics.PointF) -> component2
    111:113:android.graphics.Point minus(android.graphics.Point,android.graphics.Point) -> minus
    121:123:android.graphics.PointF minus(android.graphics.PointF,android.graphics.PointF) -> minus
    131:133:android.graphics.Point minus(android.graphics.Point,int) -> minus
    141:143:android.graphics.PointF minus(android.graphics.PointF,float) -> minus
    72:74:android.graphics.Point plus(android.graphics.Point,android.graphics.Point) -> plus
    81:83:android.graphics.PointF plus(android.graphics.PointF,android.graphics.PointF) -> plus
    91:93:android.graphics.Point plus(android.graphics.Point,int) -> plus
    101:103:android.graphics.PointF plus(android.graphics.PointF,float) -> plus
    164:164:android.graphics.Point toPoint(android.graphics.PointF) -> toPoint
    159:159:android.graphics.PointF toPointF(android.graphics.Point) -> toPointF
    149:149:android.graphics.Point unaryMinus(android.graphics.Point) -> unaryMinus
    154:154:android.graphics.PointF unaryMinus(android.graphics.PointF) -> unaryMinus
androidx.core.graphics.PorterDuffKt -> androidx.core.graphics.PorterDuffKt:
# {"id":"sourceFile","fileName":"PorterDuff.kt"}
    36:36:android.graphics.PorterDuffColorFilter toColorFilter(android.graphics.PorterDuff$Mode,int) -> toColorFilter
    29:29:android.graphics.PorterDuffXfermode toXfermode(android.graphics.PorterDuff$Mode) -> toXfermode
androidx.core.graphics.RectKt -> androidx.core.graphics.RectKt:
# {"id":"sourceFile","fileName":"Rect.kt"}
    282:284:android.graphics.Rect and(android.graphics.Rect,android.graphics.Rect) -> and
    294:296:android.graphics.RectF and(android.graphics.RectF,android.graphics.RectF) -> and
    38:38:int component1(android.graphics.Rect) -> component1
    82:82:float component1(android.graphics.RectF) -> component1
    49:49:int component2(android.graphics.Rect) -> component2
    93:93:float component2(android.graphics.RectF) -> component2
    60:60:int component3(android.graphics.Rect) -> component3
    104:104:float component3(android.graphics.RectF) -> component3
    71:71:int component4(android.graphics.Rect) -> component4
    115:115:float component4(android.graphics.RectF) -> component4
    324:324:boolean contains(android.graphics.Rect,android.graphics.Point) -> contains
    332:332:boolean contains(android.graphics.RectF,android.graphics.PointF) -> contains
    181:183:android.graphics.Region minus(android.graphics.Rect,android.graphics.Rect) -> minus
    191:191:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    344:346:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):191 -> minus
    191:192:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    344:346:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):192 -> minus
    191:193:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    201:203:android.graphics.Rect minus(android.graphics.Rect,int) -> minus
    211:213:android.graphics.RectF minus(android.graphics.RectF,float) -> minus
    221:223:android.graphics.Rect minus(android.graphics.Rect,android.graphics.Point) -> minus
    231:233:android.graphics.RectF minus(android.graphics.RectF,android.graphics.PointF) -> minus
    268:268:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect) -> or
    122:124:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> or
    122:124:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect):268 -> or
    268:268:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect) -> or
    273:273:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF) -> or
    132:134:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> or
    132:134:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF):273 -> or
    273:273:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF) -> or
    122:124:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> plus
    132:134:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> plus
    142:144:android.graphics.Rect plus(android.graphics.Rect,int) -> plus
    152:154:android.graphics.RectF plus(android.graphics.RectF,float) -> plus
    162:164:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Point) -> plus
    172:174:android.graphics.RectF plus(android.graphics.RectF,android.graphics.PointF) -> plus
    240:245:android.graphics.Rect times(android.graphics.Rect,int) -> times
    251:251:android.graphics.RectF times(android.graphics.RectF,int) -> times
    257:262:android.graphics.RectF times(android.graphics.RectF,float) -> times
    257:262:android.graphics.RectF times(android.graphics.RectF,int):251 -> times
    251:251:android.graphics.RectF times(android.graphics.RectF,int) -> times
    257:262:android.graphics.RectF times(android.graphics.RectF,float) -> times
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> toRect
    337:337:android.graphics.RectF toRectF(android.graphics.Rect) -> toRectF
    352:352:android.graphics.Region toRegion(android.graphics.Rect) -> toRegion
    358:358:android.graphics.Region toRegion(android.graphics.RectF) -> toRegion
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> toRegion
    344:346:android.graphics.Region toRegion(android.graphics.RectF):358 -> toRegion
    358:358:android.graphics.Region toRegion(android.graphics.RectF) -> toRegion
    364:393:android.graphics.RectF transform(android.graphics.RectF,android.graphics.Matrix) -> transform
    303:305:android.graphics.Region xor(android.graphics.Rect,android.graphics.Rect) -> xor
    313:313:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    344:346:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):313 -> xor
    313:314:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    344:346:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):314 -> xor
    313:315:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
androidx.core.graphics.RegionKt -> androidx.core.graphics.RegionKt:
# {"id":"sourceFile","fileName":"Region.kt"}
    95:97:android.graphics.Region and(android.graphics.Region,android.graphics.Rect) -> and
    104:106:android.graphics.Region and(android.graphics.Region,android.graphics.Region) -> and
    29:29:boolean contains(android.graphics.Region,android.graphics.Point) -> contains
    131:139:void forEach(android.graphics.Region,kotlin.jvm.functions.Function1) -> forEach
    142:157:java.util.Iterator iterator(android.graphics.Region) -> iterator
    53:55:android.graphics.Region minus(android.graphics.Region,android.graphics.Rect) -> minus
    62:64:android.graphics.Region minus(android.graphics.Region,android.graphics.Region) -> minus
    79:79:android.graphics.Region not(android.graphics.Region) -> not
    71:73:android.graphics.Region unaryMinus(android.graphics.Region) -> not
    71:73:android.graphics.Region not(android.graphics.Region):79 -> not
    79:79:android.graphics.Region not(android.graphics.Region) -> not
    84:84:android.graphics.Region or(android.graphics.Region,android.graphics.Rect) -> or
    35:37:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> or
    35:37:android.graphics.Region or(android.graphics.Region,android.graphics.Rect):84 -> or
    84:84:android.graphics.Region or(android.graphics.Region,android.graphics.Rect) -> or
    89:89:android.graphics.Region or(android.graphics.Region,android.graphics.Region) -> or
    44:46:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> or
    44:46:android.graphics.Region or(android.graphics.Region,android.graphics.Region):89 -> or
    89:89:android.graphics.Region or(android.graphics.Region,android.graphics.Region) -> or
    35:37:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> plus
    44:46:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> plus
    71:73:android.graphics.Region unaryMinus(android.graphics.Region) -> unaryMinus
    114:116:android.graphics.Region xor(android.graphics.Region,android.graphics.Rect) -> xor
    124:126:android.graphics.Region xor(android.graphics.Region,android.graphics.Region) -> xor
androidx.core.graphics.RegionKt$iterator$1 -> androidx.core.graphics.RegionKt$iterator$1:
# {"id":"sourceFile","fileName":"Region.kt"}
    142:145:void <init>(android.graphics.Region) -> <init>
    147:147:boolean hasNext() -> hasNext
    142:142:java.lang.Object next() -> next
    150:155:android.graphics.Rect next() -> next
androidx.core.graphics.ShaderKt -> androidx.core.graphics.ShaderKt:
# {"id":"sourceFile","fileName":"Shader.kt"}
    26:30:void transform(android.graphics.Shader,kotlin.jvm.functions.Function1) -> transform
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    48:67:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    242:243:void clearCache() -> clearCache
    221:233:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    191:191:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    123:162:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    174:180:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    92:92:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    80:80:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    200:206:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
    103:106:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    259:261:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    272:275:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    265:268:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    109:141:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    62:99:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    54:54:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    152:162:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    220:224:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    170:179:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    138:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    115:131:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    188:204:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    154:154:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    62:77:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    100:100:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    212:216:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    81:95:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    100:100:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    100:100:int getWeight(java.lang.Object) -> getWeight
    103:103:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    100:100:boolean isItalic(java.lang.Object) -> isItalic
    108:108:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    154:154:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    154:154:int getWeight(java.lang.Object) -> getWeight
    157:157:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    154:154:boolean isItalic(java.lang.Object) -> isItalic
    162:162:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    58:58:void <init>() -> <init>
    181:187:void closeQuietly(java.io.Closeable) -> closeQuietly
    130:141:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    148:164:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    171:177:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    69:85:java.io.File getTempFile(android.content.Context) -> getTempFile
    94:99:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    109:120:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    208:223:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.drawable.BitmapDrawableKt -> androidx.core.graphics.drawable.BitmapDrawableKt:
# {"id":"sourceFile","fileName":"BitmapDrawable.kt"}
    28:28:android.graphics.drawable.BitmapDrawable toDrawable(android.graphics.Bitmap,android.content.res.Resources) -> toDrawable
androidx.core.graphics.drawable.ColorDrawableKt -> androidx.core.graphics.drawable.ColorDrawableKt:
# {"id":"sourceFile","fileName":"ColorDrawable.kt"}
    27:27:android.graphics.drawable.ColorDrawable toDrawable(int) -> toDrawable
    31:31:android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color) -> toDrawable
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    419:419:void <init>() -> <init>
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:392:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:355:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:308:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableKt -> androidx.core.graphics.drawable.DrawableKt:
# {"id":"sourceFile","fileName":"Drawable.kt"}
    47:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    38:38:int androidx.core.graphics.RectKt.component1(android.graphics.Rect) -> toBitmap
    38:38:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):58 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    49:49:int androidx.core.graphics.RectKt.component2(android.graphics.Rect) -> toBitmap
    49:49:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):58 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    60:60:int androidx.core.graphics.RectKt.component3(android.graphics.Rect) -> toBitmap
    60:60:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):58 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    71:71:int androidx.core.graphics.RectKt.component4(android.graphics.Rect) -> toBitmap
    71:71:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):58 -> toBitmap
    58:65:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    42:45:android.graphics.Bitmap toBitmap$default(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config,int,java.lang.Object) -> toBitmap$default
    80:81:void updateBounds(android.graphics.drawable.Drawable,int,int,int,int) -> updateBounds
    74:78:void updateBounds$default(android.graphics.drawable.Drawable,int,int,int,int,int,java.lang.Object) -> updateBounds$default
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:380:void <init>() -> <init>
    155:384:void <init>(int) -> <init>
    764:813:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    603:627:void checkResource(android.content.Context) -> checkResource
    994:1024:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> createFromBundle
    1033:1050:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> createFromIcon
    1061:1072:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    1084:1087:androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon) -> createFromIconOrNullIfZeroResId
    1211:1246:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    286:291:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    351:356:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String) -> createWithAdaptiveBitmapContentUri
    368:371:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
    271:276:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    321:326:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    336:339:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    304:311:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    233:236:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    244:262:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    457:468:android.graphics.Bitmap getBitmap() -> getBitmap
    436:442:int getResId() -> getResId
    1157:1170:int getResId(android.graphics.drawable.Icon) -> getResId
    410:424:java.lang.String getResPackage() -> getResPackage
    1128:1141:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    736:751:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> getResources
    395:398:int getType() -> getType
    1100:1113:int getType(android.graphics.drawable.Icon) -> getType
    481:487:android.net.Uri getUri() -> getUri
    1185:1198:android.net.Uri getUri(android.graphics.drawable.Icon) -> getUri
    716:732:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    639:641:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> loadDrawable
    656:705:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> loadDrawableInner
    937:976:void onPostParceling() -> onPostParceling
    900:933:void onPreParceling(boolean) -> onPreParceling
    497:497:androidx.core.graphics.drawable.IconCompat setTint(int) -> setTint
    507:508:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> setTintList
    518:519:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    821:852:android.os.Bundle toBundle() -> toBundle
    529:529:android.graphics.drawable.Icon toIcon() -> toIcon
    541:595:android.graphics.drawable.Icon toIcon(android.content.Context) -> toIcon
    858:895:java.lang.String toString() -> toString
    979:986:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:24:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:55:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.IconKt -> androidx.core.graphics.drawable.IconKt:
# {"id":"sourceFile","fileName":"Icon.kt"}
    32:32:android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap) -> toAdaptiveIcon
    40:40:android.graphics.drawable.Icon toIcon(android.graphics.Bitmap) -> toIcon
    48:48:android.graphics.drawable.Icon toIcon(android.net.Uri) -> toIcon
    56:56:android.graphics.drawable.Icon toIcon(byte[]) -> toIcon
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    50:395:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:86:void computeBitmapSize() -> computeBitmapSize
    260:271:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    80:80:android.graphics.Bitmap getBitmap() -> getBitmap
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    140:140:int getGravity() -> getGravity
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:379:int getOpacity() -> getOpacity
    72:72:android.graphics.Paint getPaint() -> getPaint
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    206:206:boolean hasAntiAlias() -> hasAntiAlias
    182:182:boolean hasMipMap() -> hasMipMap
    323:323:boolean isCircular() -> isCircular
    398:398:boolean isGreaterThanZero(float) -> isGreaterThanZero
    345:350:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:280:void setAlpha(int) -> setAlpha
    194:196:void setAntiAlias(boolean) -> setAntiAlias
    303:312:void setCircular(boolean) -> setCircular
    289:291:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:341:void setCornerRadius(float) -> setCornerRadius
    217:219:void setDither(boolean) -> setDither
    211:213:void setFilterBitmap(boolean) -> setFilterBitmap
    151:156:void setGravity(int) -> setGravity
    170:170:void setMipMap(boolean) -> setMipMap
    99:100:void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    111:112:void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    123:130:void setTargetDensity(int) -> setTargetDensity
    315:317:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:256:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    32:33:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    37:39:void getOutline(android.graphics.Outline) -> getOutline
    57:59:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    51:51:boolean hasMipMap() -> hasMipMap
    43:47:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    104:104:void <init>() -> <init>
    73:74:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    84:88:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    97:101:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    43:44:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:64:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    56:56:boolean hasMipMap() -> hasMipMap
    48:52:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:87:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    222:226:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    216:216:int getLayoutDirection() -> getLayoutDirection
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    334:334:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    263:264:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    365:365:boolean isCompatTintEnabled() -> isCompatTintEnabled
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    232:242:android.graphics.drawable.Drawable mutate() -> mutate
    255:255:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    210:210:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    284:284:boolean onLevelChange(int) -> onLevelChange
    271:272:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    289:290:void setTint(int) -> setTint
    294:296:void setTintList(android.content.res.ColorStateList) -> setTintList
    300:302:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    342:361:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    279:280:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:77:void updateLocalState(android.content.res.Resources) -> updateLocalState
    305:326:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:148:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    113:120:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:137:boolean isProjected() -> isProjected
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    32:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:62:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:54:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> androidx.core.hardware.display.DisplayManagerCompat:
    34:34:void <clinit>() -> <clinit>
    53:55:void <init>(android.content.Context) -> <init>
    84:86:android.view.Display getDisplay(int) -> getDisplay
    104:106:android.view.Display[] getDisplays() -> getDisplays
    133:135:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    62:69:androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    55:57:void <init>(android.content.Context) -> <init>
    107:121:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    52:52:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    126:132:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> getFingerprintManagerOrNull
    66:68:boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    81:83:boolean isHardwareDetected() -> isHardwareDetected
    153:162:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    169:169:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    138:147:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$1:
    169:169:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    172:173:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:189:void onAuthenticationFailed() -> onAuthenticationFailed
    177:178:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:184:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    270:270:void <init>() -> <init>
    277:277:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    297:297:void onAuthenticationFailed() -> onAuthenticationFailed
    286:286:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    292:292:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    251:253:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    260:260:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    203:208:void <init>(java.security.Signature) -> <init>
    210:214:void <init>(javax.crypto.Cipher) -> <init>
    216:220:void <init>(javax.crypto.Mac) -> <init>
    234:234:javax.crypto.Cipher getCipher() -> getCipher
    241:241:javax.crypto.Mac getMac() -> getMac
    227:227:java.security.Signature getSignature() -> getSignature
androidx.core.internal.view.SupportMenuItem -> androidx.core.internal.view.SupportMenuItem:
    39:39:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    39:39:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
androidx.core.location.GnssStatusCompat -> androidx.core.location.GnssStatusCompat:
    130:130:void <init>() -> <init>
    117:117:androidx.core.location.GnssStatusCompat wrap(android.location.GnssStatus) -> wrap
    126:126:androidx.core.location.GnssStatusCompat wrap(android.location.GpsStatus) -> wrap
androidx.core.location.GnssStatusCompat$Callback -> androidx.core.location.GnssStatusCompat$Callback:
    88:88:void <init>() -> <init>
    103:103:void onFirstFix(int) -> onFirstFix
    108:108:void onSatelliteStatusChanged(androidx.core.location.GnssStatusCompat) -> onSatelliteStatusChanged
    93:93:void onStarted() -> onStarted
    98:98:void onStopped() -> onStopped
androidx.core.location.GnssStatusWrapper -> androidx.core.location.GnssStatusWrapper:
    37:39:void <init>(android.location.GnssStatus) -> <init>
    124:131:boolean equals(java.lang.Object) -> equals
    68:68:float getAzimuthDegrees(int) -> getAzimuthDegrees
    115:118:float getBasebandCn0DbHz(int) -> getBasebandCn0DbHz
    97:100:float getCarrierFrequencyHz(int) -> getCarrierFrequencyHz
    58:58:float getCn0DbHz(int) -> getCn0DbHz
    48:48:int getConstellationType(int) -> getConstellationType
    63:63:float getElevationDegrees(int) -> getElevationDegrees
    43:43:int getSatelliteCount() -> getSatelliteCount
    53:53:int getSvid(int) -> getSvid
    78:78:boolean hasAlmanacData(int) -> hasAlmanacData
    106:109:boolean hasBasebandCn0DbHz(int) -> hasBasebandCn0DbHz
    88:91:boolean hasCarrierFrequencyHz(int) -> hasCarrierFrequencyHz
    73:73:boolean hasEphemerisData(int) -> hasEphemerisData
    136:136:int hashCode() -> hashCode
    83:83:boolean usedInFix(int) -> usedInFix
androidx.core.location.GpsStatusWrapper -> androidx.core.location.GpsStatusWrapper:
    60:66:void <init>(android.location.GpsStatus) -> <init>
    173:180:boolean equals(java.lang.Object) -> equals
    112:112:float getAzimuthDegrees(int) -> getAzimuthDegrees
    147:147:float getBasebandCn0DbHz(int) -> getBasebandCn0DbHz
    137:137:float getCarrierFrequencyHz(int) -> getCarrierFrequencyHz
    102:102:float getCn0DbHz(int) -> getCn0DbHz
    189:200:int getConstellationFromPrn(int) -> getConstellationFromPrn
    84:87:int getConstellationType(int) -> getConstellationType
    107:107:float getElevationDegrees(int) -> getElevationDegrees
    152:168:android.location.GpsSatellite getSatellite(int) -> getSatellite
    70:79:int getSatelliteCount() -> getSatelliteCount
    93:96:int getSvid(int) -> getSvid
    205:216:int getSvidFromPrn(int) -> getSvidFromPrn
    122:122:boolean hasAlmanacData(int) -> hasAlmanacData
    142:142:boolean hasBasebandCn0DbHz(int) -> hasBasebandCn0DbHz
    132:132:boolean hasCarrierFrequencyHz(int) -> hasCarrierFrequencyHz
    117:117:boolean hasEphemerisData(int) -> hasEphemerisData
    185:185:int hashCode() -> hashCode
    127:127:boolean usedInFix(int) -> usedInFix
androidx.core.location.LocationCompat -> androidx.core.location.LocationCompat:
    71:71:void <init>() -> <init>
    278:286:float getBearingAccuracyDegrees(android.location.Location) -> getBearingAccuracyDegrees
    103:104:long getElapsedRealtimeMillis(android.location.Location) -> getElapsedRealtimeMillis
    90:91:long getElapsedRealtimeNanos(android.location.Location) -> getElapsedRealtimeNanos
    458:464:java.lang.reflect.Method getSetIsFromMockProviderMethod() -> getSetIsFromMockProviderMethod
    213:221:float getSpeedAccuracyMetersPerSecond(android.location.Location) -> getSpeedAccuracyMetersPerSecond
    148:156:float getVerticalAccuracyMeters(android.location.Location) -> getVerticalAccuracyMeters
    256:264:boolean hasBearingAccuracy(android.location.Location) -> hasBearingAccuracy
    191:199:boolean hasSpeedAccuracy(android.location.Location) -> hasSpeedAccuracy
    126:134:boolean hasVerticalAccuracy(android.location.Location) -> hasVerticalAccuracy
    328:329:boolean isMock(android.location.Location) -> isMock
    302:313:void setBearingAccuracyDegrees(android.location.Location,float) -> setBearingAccuracyDegrees
    349:382:void setMock(android.location.Location,boolean) -> setMock
    237:248:void setSpeedAccuracyMetersPerSecond(android.location.Location,float) -> setSpeedAccuracyMetersPerSecond
    172:183:void setVerticalAccuracyMeters(android.location.Location,float) -> setVerticalAccuracyMeters
androidx.core.location.LocationCompat$Api17Impl -> androidx.core.location.LocationCompat$Api17Impl:
    449:449:void <init>() -> <init>
    453:453:long getElapsedRealtimeNanos(android.location.Location) -> getElapsedRealtimeNanos
androidx.core.location.LocationCompat$Api18Impl -> androidx.core.location.LocationCompat$Api18Impl:
    438:438:void <init>() -> <init>
    442:442:boolean isMock(android.location.Location) -> isMock
androidx.core.location.LocationCompat$Api26Impl -> androidx.core.location.LocationCompat$Api26Impl:
    387:387:void <init>() -> <init>
    426:426:float getBearingAccuracyDegrees(android.location.Location) -> getBearingAccuracyDegrees
    411:411:float getSpeedAccuracyMetersPerSecond(android.location.Location) -> getSpeedAccuracyMetersPerSecond
    396:396:float getVerticalAccuracyMeters(android.location.Location) -> getVerticalAccuracyMeters
    421:421:boolean hasBearingAccuracy(android.location.Location) -> hasBearingAccuracy
    406:406:boolean hasSpeedAccuracy(android.location.Location) -> hasSpeedAccuracy
    391:391:boolean hasVerticalAccuracy(android.location.Location) -> hasVerticalAccuracy
    431:432:void setBearingAccuracyDegrees(android.location.Location,float) -> setBearingAccuracyDegrees
    416:417:void setSpeedAccuracyMetersPerSecond(android.location.Location,float) -> setSpeedAccuracyMetersPerSecond
    401:402:void setVerticalAccuracyMeters(android.location.Location,float) -> setVerticalAccuracyMeters
androidx.core.location.LocationKt -> androidx.core.location.LocationKt:
# {"id":"sourceFile","fileName":"Location.kt"}
    32:32:double component1(android.location.Location) -> component1
    43:43:double component2(android.location.Location) -> component2
androidx.core.location.LocationListenerCompat -> androidx.core.location.LocationListenerCompat:
    37:37:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    34:34:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    31:31:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
androidx.core.location.LocationManagerCompat -> androidx.core.location.LocationManagerCompat:
    225:225:void <clinit>() -> <clinit>
    600:600:void <init>() -> <init>
    void $r8$lambda$BuDFX8p4cZynZHSiCJ1nwl98OSc(androidx.core.util.Consumer,android.location.Location) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    185:221:void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer) -> getCurrentLocation
    388:391:java.lang.String getGnssHardwareModelName(android.location.LocationManager) -> getGnssHardwareModelName
    400:403:int getGnssYearOfHardware(android.location.LocationManager) -> getGnssYearOfHardware
    145:160:boolean hasProvider(android.location.LocationManager,java.lang.String) -> hasProvider
    100:133:boolean isLocationEnabled(android.location.LocationManager) -> isLocationEnabled
    200:200:void lambda$getCurrentLocation$0(androidx.core.util.Consumer,android.location.Location) -> lambda$getCurrentLocation$0
    516:516:java.lang.Boolean lambda$registerGnssStatusCallback$1(android.location.LocationManager,androidx.core.location.LocationManagerCompat$GpsStatusTransport) -> lambda$registerGnssStatusCallback$1
    424:428:boolean registerGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback,android.os.Handler) -> registerGnssStatusCallback
    454:461:boolean registerGnssStatusCallback(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback) -> registerGnssStatusCallback
    469:501:boolean registerGnssStatusCallback(android.location.LocationManager,android.os.Handler,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat$Callback) -> registerGnssStatusCallback
    362:378:void removeUpdates(android.location.LocationManager,androidx.core.location.LocationListenerCompat) -> removeUpdates
    243:304:void requestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,java.util.concurrent.Executor,androidx.core.location.LocationListenerCompat) -> requestLocationUpdates
    321:352:void requestLocationUpdates(android.location.LocationManager,java.lang.String,androidx.core.location.LocationRequestCompat,androidx.core.location.LocationListenerCompat,android.os.Looper) -> requestLocationUpdates
    570:598:void unregisterGnssStatusCallback(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback) -> unregisterGnssStatusCallback
androidx.core.location.LocationManagerCompat$$ExternalSyntheticLambda0 -> androidx.core.location.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.core.location.LocationManagerCompat$$InternalSyntheticLambda$0$6674e0f3ccffe4c3c495175317c913dd33948c24e9c1c92b05dfa79b14cfee10$0.f$0 -> b
    android.location.Location androidx.core.location.LocationManagerCompat$$InternalSyntheticLambda$0$6674e0f3ccffe4c3c495175317c913dd33948c24e9c1c92b05dfa79b14cfee10$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$$InternalSyntheticLambda$0$6674e0f3ccffe4c3c495175317c913dd33948c24e9c1c92b05dfa79b14cfee10$0.<init>(androidx.core.util.Consumer,android.location.Location) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$$InternalSyntheticLambda$0$6674e0f3ccffe4c3c495175317c913dd33948c24e9c1c92b05dfa79b14cfee10$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$1 -> androidx.core.location.LocationManagerCompat$1:
    211:211:void <init>(androidx.core.location.LocationManagerCompat$CancellableLocationListener) -> <init>
    215:216:void onCancel() -> onCancel
androidx.core.location.LocationManagerCompat$Api28Impl -> androidx.core.location.LocationManagerCompat$Api28Impl:
    988:988:void <init>() -> <init>
    997:997:java.lang.String getGnssHardwareModelName(android.location.LocationManager) -> getGnssHardwareModelName
    1002:1002:int getGnssYearOfHardware(android.location.LocationManager) -> getGnssYearOfHardware
    992:992:boolean isLocationEnabled(android.location.LocationManager) -> isLocationEnabled
androidx.core.location.LocationManagerCompat$Api30Impl -> androidx.core.location.LocationManagerCompat$Api30Impl:
    969:969:void <init>() -> <init>
    976:983:void getCurrentLocation(android.location.LocationManager,java.lang.String,androidx.core.os.CancellationSignal,java.util.concurrent.Executor,androidx.core.util.Consumer) -> getCurrentLocation
androidx.core.location.LocationManagerCompat$Api30Impl$$ExternalSyntheticLambda0 -> androidx.core.location.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.core.location.LocationManagerCompat$Api30Impl$$InternalSyntheticLambda$0$914fbb689bfbeea7f6df0463ad9e1b29233da116f2dffc21aecf9269d319b47c$0.f$0 -> a
    void androidx.core.location.LocationManagerCompat$Api30Impl$$InternalSyntheticLambda$0$914fbb689bfbeea7f6df0463ad9e1b29233da116f2dffc21aecf9269d319b47c$0.<init>(androidx.core.util.Consumer) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$Api30Impl$$InternalSyntheticLambda$0$914fbb689bfbeea7f6df0463ad9e1b29233da116f2dffc21aecf9269d319b47c$0.accept(java.lang.Object) -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$Api31Impl -> androidx.core.location.LocationManagerCompat$Api31Impl:
    951:951:void <init>() -> <init>
    955:955:boolean hasProvider(android.location.LocationManager,java.lang.String) -> hasProvider
    963:964:void requestLocationUpdates(android.location.LocationManager,java.lang.String,android.location.LocationRequest,java.util.concurrent.Executor,android.location.LocationListener) -> requestLocationUpdates
androidx.core.location.LocationManagerCompat$CancellableLocationListener -> androidx.core.location.LocationManagerCompat$CancellableLocationListener:
    1021:1027:void <init>(android.location.LocationManager,java.util.concurrent.Executor,androidx.core.util.Consumer) -> <init>
    void $r8$lambda$G8vFiM-2vvvj7Ao7L-CLKVa1_8s(androidx.core.util.Consumer,android.location.Location) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1031:1039:void cancel() -> cancel
    1092:1098:void cleanup() -> cleanup
    1085:1085:void lambda$onLocationChanged$0(androidx.core.util.Consumer,android.location.Location) -> lambda$onLocationChanged$0
    1077:1088:void onLocationChanged(android.location.Location) -> onLocationChanged
    1071:1072:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    1066:1066:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    1063:1063:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    1042:1060:void startTimeout(long) -> startTimeout
androidx.core.location.LocationManagerCompat$CancellableLocationListener$$ExternalSyntheticLambda0 -> androidx.core.location.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.core.location.LocationManagerCompat$CancellableLocationListener$$InternalSyntheticLambda$0$016e54a50ca73403f4f57abb7bf81aa74bbd007a9c3506e08391851a05fd92cb$0.f$0 -> b
    android.location.Location androidx.core.location.LocationManagerCompat$CancellableLocationListener$$InternalSyntheticLambda$0$016e54a50ca73403f4f57abb7bf81aa74bbd007a9c3506e08391851a05fd92cb$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$CancellableLocationListener$$InternalSyntheticLambda$0$016e54a50ca73403f4f57abb7bf81aa74bbd007a9c3506e08391851a05fd92cb$0.<init>(androidx.core.util.Consumer,android.location.Location) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$CancellableLocationListener$$InternalSyntheticLambda$0$016e54a50ca73403f4f57abb7bf81aa74bbd007a9c3506e08391851a05fd92cb$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$CancellableLocationListener$1 -> androidx.core.location.LocationManagerCompat$CancellableLocationListener$1:
    1050:1050:void <init>(androidx.core.location.LocationManagerCompat$CancellableLocationListener) -> <init>
    1054:1056:void run() -> run
androidx.core.location.LocationManagerCompat$GnssLazyLoader -> androidx.core.location.LocationManagerCompat$GnssLazyLoader:
    410:410:void <clinit>() -> <clinit>
    408:408:void <init>() -> <init>
androidx.core.location.LocationManagerCompat$GnssStatusTransport -> androidx.core.location.LocationManagerCompat$GnssStatusTransport:
    762:765:void <init>(androidx.core.location.GnssStatusCompat$Callback) -> <init>
    779:780:void onFirstFix(int) -> onFirstFix
    784:785:void onSatelliteStatusChanged(android.location.GnssStatus) -> onSatelliteStatusChanged
    769:770:void onStarted() -> onStarted
    774:775:void onStopped() -> onStopped
androidx.core.location.LocationManagerCompat$GpsStatusTransport -> androidx.core.location.LocationManagerCompat$GpsStatusTransport:
    879:883:void <init>(android.location.LocationManager,androidx.core.location.GnssStatusCompat$Callback) -> <init>
    void $r8$lambda$T0auuLwz-EMM99veZUbxskDo10s(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$V4NDbKd22V64-RxjVMVd419nswo(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$YdTHlyzRR62cUonlTLG1CDPrghk(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$o4is_vEFQnCFL3phcwhrVAcNx6o(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    907:911:void lambda$onGpsStatusChanged$0(java.util.concurrent.Executor) -> lambda$onGpsStatusChanged$0
    915:919:void lambda$onGpsStatusChanged$1(java.util.concurrent.Executor) -> lambda$onGpsStatusChanged$1
    926:930:void lambda$onGpsStatusChanged$2(java.util.concurrent.Executor,int) -> lambda$onGpsStatusChanged$2
    938:942:void lambda$onGpsStatusChanged$3(java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat) -> lambda$onGpsStatusChanged$3
    897:946:void onGpsStatusChanged(int) -> onGpsStatusChanged
    886:888:void register(java.util.concurrent.Executor) -> register
    891:892:void unregister() -> unregister
androidx.core.location.LocationManagerCompat$GpsStatusTransport$$ExternalSyntheticLambda0 -> androidx.core.location.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$GpsStatusTransport androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$0.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$0.<init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$GpsStatusTransport$$ExternalSyntheticLambda1 -> androidx.core.location.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$GpsStatusTransport androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$1.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$1.f$1 -> c
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$1.<init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$GpsStatusTransport$$ExternalSyntheticLambda2 -> androidx.core.location.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$GpsStatusTransport androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$2.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$2.f$1 -> c
    int androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$2.f$2 -> d
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$2.<init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$2.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$GpsStatusTransport$$ExternalSyntheticLambda3 -> androidx.core.location.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.GnssStatusCompat androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$3.f$2 -> d
    androidx.core.location.LocationManagerCompat$GpsStatusTransport androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$3.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$3.f$1 -> c
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$3.<init>(androidx.core.location.LocationManagerCompat$GpsStatusTransport,java.util.concurrent.Executor,androidx.core.location.GnssStatusCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$GpsStatusTransport$$InternalSyntheticLambda$0$14c5779593c7e099447adc0b3edbf51e78bd850fed6d07860dbc1a88cf2cac40$3.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$InlineHandlerExecutor -> androidx.core.location.LocationManagerCompat$InlineHandlerExecutor:
    1116:1118:void <init>(android.os.Handler) -> <init>
    1122:1127:void execute(java.lang.Runnable) -> execute
androidx.core.location.LocationManagerCompat$LocationListenerTransport -> androidx.core.location.LocationManagerCompat$LocationListenerTransport:
    607:610:void <init>(androidx.core.location.LocationListenerCompat,java.util.concurrent.Executor) -> <init>
    void $r8$lambda$968fRz_-OV4rG5L_perB9Jq1fIo(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.util.List) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$Ky-LzVxBE7AO57r5T1RkTnXFfcQ(java.lang.ref.WeakReference) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Ok-hkgx-rspFcSvRvLdu1WtiFhE(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String,int,android.os.Bundle) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$QJAWzn5huAZOFDXXrtzdeajRRuc(java.lang.ref.WeakReference) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$cTMGorL6AVAv94NCxJKSlTJIass(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,android.location.Location) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$gAbzP_p2OL2sgbHZWqhPGNVzkwY(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$nRr0u7u_4n2ZpVlEjAY68VPEFSU(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String) -> g
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$r3Dh2fEKoL82Hua0hpSe8DjcKjk(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,int) -> h
      # {"id":"com.android.tools.r8.synthesized"}
    704:708:void lambda$onFlushComplete$4(androidx.core.location.LocationListenerCompat,int) -> lambda$onFlushComplete$4
    674:678:void lambda$onLocationChanged$2(androidx.core.location.LocationListenerCompat,android.location.Location) -> lambda$onLocationChanged$2
    689:693:void lambda$onLocationChanged$3(androidx.core.location.LocationListenerCompat,java.util.List) -> lambda$onLocationChanged$3
    749:753:void lambda$onProviderDisabled$7(androidx.core.location.LocationListenerCompat,java.lang.String) -> lambda$onProviderDisabled$7
    734:738:void lambda$onProviderEnabled$6(androidx.core.location.LocationListenerCompat,java.lang.String) -> lambda$onProviderEnabled$6
    719:723:void lambda$onStatusChanged$5(androidx.core.location.LocationListenerCompat,java.lang.String,int,android.os.Bundle) -> lambda$onStatusChanged$5
    622:622:boolean lambda$register$0(java.lang.ref.WeakReference) -> lambda$register$0
    649:649:boolean lambda$unregister$1(java.lang.ref.WeakReference) -> lambda$unregister$1
    698:709:void onFlushComplete(int) -> onFlushComplete
    668:679:void onLocationChanged(android.location.Location) -> onLocationChanged
    683:694:void onLocationChanged(java.util.List) -> onLocationChanged
    743:754:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    728:739:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    713:724:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    614:634:void register() -> register
    638:663:boolean unregister() -> unregister
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda0 -> androidx.core.location.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$ce7c40c5d7fc8b2c643507a013202995837b6e8290cf346bc18cbb23e05d3037$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$ce7c40c5d7fc8b2c643507a013202995837b6e8290cf346bc18cbb23e05d3037$0.f$0 -> b
    int androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$ce7c40c5d7fc8b2c643507a013202995837b6e8290cf346bc18cbb23e05d3037$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$ce7c40c5d7fc8b2c643507a013202995837b6e8290cf346bc18cbb23e05d3037$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$ce7c40c5d7fc8b2c643507a013202995837b6e8290cf346bc18cbb23e05d3037$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda1 -> androidx.core.location.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$83cf9d536fae615526b7b84056f9614b1d9fe7a10054193e5d7cb75fd3d923b8$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$83cf9d536fae615526b7b84056f9614b1d9fe7a10054193e5d7cb75fd3d923b8$0.f$0 -> b
    android.location.Location androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$83cf9d536fae615526b7b84056f9614b1d9fe7a10054193e5d7cb75fd3d923b8$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$83cf9d536fae615526b7b84056f9614b1d9fe7a10054193e5d7cb75fd3d923b8$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,android.location.Location) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$83cf9d536fae615526b7b84056f9614b1d9fe7a10054193e5d7cb75fd3d923b8$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda2 -> androidx.core.location.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$2e52edc0e9e2f0a7dbca53aa11b78bb3027ac4d78777158a26ca4de8b47aea92$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$2e52edc0e9e2f0a7dbca53aa11b78bb3027ac4d78777158a26ca4de8b47aea92$0.f$0 -> b
    java.lang.String androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$2e52edc0e9e2f0a7dbca53aa11b78bb3027ac4d78777158a26ca4de8b47aea92$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$2e52edc0e9e2f0a7dbca53aa11b78bb3027ac4d78777158a26ca4de8b47aea92$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$2e52edc0e9e2f0a7dbca53aa11b78bb3027ac4d78777158a26ca4de8b47aea92$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda3 -> androidx.core.location.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$f5e2f5d2d56e989507c595378dc44540c5341fa3edd40ebb36ed3e40ca5a9fc6$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$f5e2f5d2d56e989507c595378dc44540c5341fa3edd40ebb36ed3e40ca5a9fc6$0.f$0 -> b
    java.lang.String androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$f5e2f5d2d56e989507c595378dc44540c5341fa3edd40ebb36ed3e40ca5a9fc6$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$f5e2f5d2d56e989507c595378dc44540c5341fa3edd40ebb36ed3e40ca5a9fc6$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$f5e2f5d2d56e989507c595378dc44540c5341fa3edd40ebb36ed3e40ca5a9fc6$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda4 -> androidx.core.location.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.f$0 -> b
    android.os.Bundle androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.f$4 -> f
    int androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.f$3 -> e
    java.lang.String androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.lang.String,int,android.os.Bundle) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$9fa97fc80c24963800e63b0c4a0df5327b457f39a540eb858cb586cc060feaaf$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda5 -> androidx.core.location.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationListenerCompat androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$6170e572fd9fb307c06092475bf29f115cf02e0400e5fb335bfa256700f0fd2e$0.f$1 -> c
    androidx.core.location.LocationManagerCompat$LocationListenerTransport androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$6170e572fd9fb307c06092475bf29f115cf02e0400e5fb335bfa256700f0fd2e$0.f$0 -> b
    java.util.List androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$6170e572fd9fb307c06092475bf29f115cf02e0400e5fb335bfa256700f0fd2e$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$6170e572fd9fb307c06092475bf29f115cf02e0400e5fb335bfa256700f0fd2e$0.<init>(androidx.core.location.LocationManagerCompat$LocationListenerTransport,androidx.core.location.LocationListenerCompat,java.util.List) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$6170e572fd9fb307c06092475bf29f115cf02e0400e5fb335bfa256700f0fd2e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda6 -> androidx.core.location.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$cf7ada375f460b4a4273755145ce09c4e5288871c07018c6fb14f422313e4373$0 androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$cf7ada375f460b4a4273755145ce09c4e5288871c07018c6fb14f422313e4373$0.INSTANCE -> a
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$cf7ada375f460b4a4273755145ce09c4e5288871c07018c6fb14f422313e4373$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$cf7ada375f460b4a4273755145ce09c4e5288871c07018c6fb14f422313e4373$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$cf7ada375f460b4a4273755145ce09c4e5288871c07018c6fb14f422313e4373$0.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$LocationListenerTransport$$ExternalSyntheticLambda7 -> androidx.core.location.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$4a0ec6d535dae797b5e32d561b450367ff4315f7495bd0e71e5cdb628a04bd54$0 androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$4a0ec6d535dae797b5e32d561b450367ff4315f7495bd0e71e5cdb628a04bd54$0.INSTANCE -> a
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$4a0ec6d535dae797b5e32d561b450367ff4315f7495bd0e71e5cdb628a04bd54$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$4a0ec6d535dae797b5e32d561b450367ff4315f7495bd0e71e5cdb628a04bd54$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.location.LocationManagerCompat$LocationListenerTransport$$InternalSyntheticLambda$0$4a0ec6d535dae797b5e32d561b450367ff4315f7495bd0e71e5cdb628a04bd54$0.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport -> androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport:
    795:798:void <init>(androidx.core.location.GnssStatusCompat$Callback) -> <init>
    void $r8$lambda$EV3ALfMBDotS9TFPL4C05K2QFGM(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$M98hBYbLkP_lHaBu4FbOg7TdZV0(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,android.location.GnssStatus) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$UrmG531cBaBG_MqEWQ-130Gx_xM(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$W1WiagGzlSlFoo8c3Qd6ur-jz2M(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    848:852:void lambda$onFirstFix$2(java.util.concurrent.Executor,int) -> lambda$onFirstFix$2
    863:867:void lambda$onSatelliteStatusChanged$3(java.util.concurrent.Executor,android.location.GnssStatus) -> lambda$onSatelliteStatusChanged$3
    818:822:void lambda$onStarted$0(java.util.concurrent.Executor) -> lambda$onStarted$0
    833:837:void lambda$onStopped$1(java.util.concurrent.Executor) -> lambda$onStopped$1
    842:853:void onFirstFix(int) -> onFirstFix
    857:868:void onSatelliteStatusChanged(android.location.GnssStatus) -> onSatelliteStatusChanged
    812:823:void onStarted() -> onStarted
    827:838:void onStopped() -> onStopped
    801:804:void register(java.util.concurrent.Executor) -> register
    807:808:void unregister() -> unregister
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$ExternalSyntheticLambda0 -> androidx.core.location.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$99a93a0cb2cbeb9e8bb7b6a84f313963a539353ce5b1a76402368aa62442e605$0.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$99a93a0cb2cbeb9e8bb7b6a84f313963a539353ce5b1a76402368aa62442e605$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$99a93a0cb2cbeb9e8bb7b6a84f313963a539353ce5b1a76402368aa62442e605$0.<init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$99a93a0cb2cbeb9e8bb7b6a84f313963a539353ce5b1a76402368aa62442e605$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$ExternalSyntheticLambda1 -> androidx.core.location.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$b58970603610f7b6b6bfdb51a3201c832a2caee182bdb6a30ecb5cd9cb8911ee$0.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$b58970603610f7b6b6bfdb51a3201c832a2caee182bdb6a30ecb5cd9cb8911ee$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$b58970603610f7b6b6bfdb51a3201c832a2caee182bdb6a30ecb5cd9cb8911ee$0.<init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$b58970603610f7b6b6bfdb51a3201c832a2caee182bdb6a30ecb5cd9cb8911ee$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$ExternalSyntheticLambda2 -> androidx.core.location.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$871ad1f54c2cbf52440f8f90bfda4bdac2adad000456e2403458294746f51877$0.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$871ad1f54c2cbf52440f8f90bfda4bdac2adad000456e2403458294746f51877$0.f$1 -> c
    int androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$871ad1f54c2cbf52440f8f90bfda4bdac2adad000456e2403458294746f51877$0.f$2 -> d
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$871ad1f54c2cbf52440f8f90bfda4bdac2adad000456e2403458294746f51877$0.<init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,int) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$871ad1f54c2cbf52440f8f90bfda4bdac2adad000456e2403458294746f51877$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$ExternalSyntheticLambda3 -> androidx.core.location.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.location.GnssStatus androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$fb33b9f5a1e6c617deadf38e0fe0c3c1d473638b50d7e1d20ac25a251fe56e1c$0.f$2 -> d
    androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$fb33b9f5a1e6c617deadf38e0fe0c3c1d473638b50d7e1d20ac25a251fe56e1c$0.f$0 -> b
    java.util.concurrent.Executor androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$fb33b9f5a1e6c617deadf38e0fe0c3c1d473638b50d7e1d20ac25a251fe56e1c$0.f$1 -> c
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$fb33b9f5a1e6c617deadf38e0fe0c3c1d473638b50d7e1d20ac25a251fe56e1c$0.<init>(androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport,java.util.concurrent.Executor,android.location.GnssStatus) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$$InternalSyntheticLambda$0$fb33b9f5a1e6c617deadf38e0fe0c3c1d473638b50d7e1d20ac25a251fe56e1c$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.location.LocationRequestCompat -> androidx.core.location.LocationRequestCompat:
    112:120:void <init>(long,int,long,int,long,float,long) -> <init>
    311:322:boolean equals(java.lang.Object) -> equals
    171:171:long getDurationMillis() -> getDurationMillis
    142:142:long getIntervalMillis() -> getIntervalMillis
    210:210:long getMaxUpdateDelayMillis() -> getMaxUpdateDelayMillis
    180:180:int getMaxUpdates() -> getMaxUpdates
    192:192:float getMinUpdateDistanceMeters() -> getMinUpdateDistanceMeters
    157:160:long getMinUpdateIntervalMillis() -> getMinUpdateIntervalMillis
    128:128:int getQuality() -> getQuality
    328:331:int hashCode() -> hashCode
    222:229:android.location.LocationRequest toLocationRequest() -> toLocationRequest
    246:304:android.location.LocationRequest toLocationRequest(java.lang.String) -> toLocationRequest
    337:377:java.lang.String toString() -> toString
androidx.core.location.LocationRequestCompat$Builder -> androidx.core.location.LocationRequestCompat$Builder:
    398:408:void <init>(long) -> <init>
    413:421:void <init>(androidx.core.location.LocationRequestCompat) -> <init>
    554:563:androidx.core.location.LocationRequestCompat build() -> build
    513:514:androidx.core.location.LocationRequestCompat$Builder clearMinUpdateIntervalMillis() -> clearMinUpdateIntervalMillis
    469:472:androidx.core.location.LocationRequestCompat$Builder setDurationMillis(long) -> setDurationMillis
    440:443:androidx.core.location.LocationRequestCompat$Builder setIntervalMillis(long) -> setIntervalMillis
    539:542:androidx.core.location.LocationRequestCompat$Builder setMaxUpdateDelayMillis(long) -> setMaxUpdateDelayMillis
    482:484:androidx.core.location.LocationRequestCompat$Builder setMaxUpdates(int) -> setMaxUpdates
    525:528:androidx.core.location.LocationRequestCompat$Builder setMinUpdateDistanceMeters(float) -> setMinUpdateDistanceMeters
    503:505:androidx.core.location.LocationRequestCompat$Builder setMinUpdateIntervalMillis(long) -> setMinUpdateIntervalMillis
    453:458:androidx.core.location.LocationRequestCompat$Builder setQuality(int) -> setQuality
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    24:24:void <init>() -> <init>
    31:36:int addExact(int,int) -> addExact
    44:49:long addExact(long,long) -> addExact
    208:213:float clamp(float,float,float) -> clamp
    229:234:double clamp(double,double,double) -> clamp
    250:255:int clamp(int,int,int) -> clamp
    271:276:long clamp(long,long,long) -> clamp
    141:145:int decrementExact(int) -> decrementExact
    153:157:long decrementExact(long) -> decrementExact
    117:121:int incrementExact(int) -> incrementExact
    129:133:long incrementExact(long) -> incrementExact
    86:90:int multiplyExact(int,int) -> multiplyExact
    98:109:long multiplyExact(long,long) -> multiplyExact
    165:169:int negateExact(int) -> negateExact
    177:181:long negateExact(long) -> negateExact
    58:64:int subtractExact(int,int) -> subtractExact
    72:78:long subtractExact(long,long) -> subtractExact
    189:192:int toIntExact(long) -> toIntExact
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    166:166:void <init>() -> <init>
    141:145:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    159:160:int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
    100:101:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.net.DatagramSocketWrapper -> androidx.core.net.DatagramSocketWrapper:
    32:33:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper:
    40:43:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.MailTo -> androidx.core.net.MailTo:
    58:60:void <init>() -> <init>
    211:211:java.lang.String getBcc() -> getBcc
    231:231:java.lang.String getBody() -> getBody
    200:200:java.lang.String getCc() -> getCc
    240:240:java.util.Map getHeaders() -> getHeaders
    221:221:java.lang.String getSubject() -> getSubject
    189:189:java.lang.String getTo() -> getTo
    74:74:boolean isMailTo(java.lang.String) -> isMailTo
    89:89:boolean isMailTo(android.net.Uri) -> isMailTo
    107:160:androidx.core.net.MailTo parse(java.lang.String) -> parse
    178:178:androidx.core.net.MailTo parse(android.net.Uri) -> parse
    246:254:java.lang.String toString() -> toString
androidx.core.net.ParseException -> androidx.core.net.ParseException:
    29:31:void <init>(java.lang.String) -> <init>
androidx.core.net.TrafficStatsCompat -> androidx.core.net.TrafficStatsCompat:
    167:167:void <init>() -> <init>
    41:42:void clearThreadStatsTag() -> clearThreadStatsTag
    53:53:int getThreadStatsTag() -> getThreadStatsTag
    67:68:void incrementOperationCount(int) -> incrementOperationCount
    81:82:void incrementOperationCount(int,int) -> incrementOperationCount
    99:100:void setThreadStatsTag(int) -> setThreadStatsTag
    137:148:void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    114:115:void tagSocket(java.net.Socket) -> tagSocket
    154:165:void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
    124:125:void untagSocket(java.net.Socket) -> untagSocket
androidx.core.net.UriCompat -> androidx.core.net.UriCompat:
    28:28:void <init>() -> <init>
    40:78:java.lang.String toSafeString(android.net.Uri) -> toSafeString
androidx.core.net.UriKt -> androidx.core.net.UriKt:
# {"id":"sourceFile","fileName":"Uri.kt"}
    43:47:java.io.File toFile(android.net.Uri) -> toFile
    29:29:android.net.Uri toUri(java.lang.String) -> toUri
    36:36:android.net.Uri toUri(java.io.File) -> toUri
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    33:35:void <init>() -> <init>
    71:71:boolean isAtLeastN() -> isAtLeastN
    85:85:boolean isAtLeastNMR1() -> isAtLeastNMR1
    99:99:boolean isAtLeastO() -> isAtLeastO
    113:113:boolean isAtLeastOMR1() -> isAtLeastOMR1
    127:127:boolean isAtLeastP() -> isAtLeastP
    51:57:boolean isAtLeastPreReleaseCodename(java.lang.String,java.lang.String) -> isAtLeastPreReleaseCodename
    141:141:boolean isAtLeastQ() -> isAtLeastQ
    155:155:boolean isAtLeastR() -> isAtLeastR
    166:166:boolean isAtLeastS() -> isAtLeastS
    182:182:boolean isAtLeastT() -> isAtLeastT
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
# {"id":"sourceFile","fileName":"Bundle.kt"}
    32:105:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:38:void <init>() -> <init>
    69:92:void cancel() -> cancel
    138:149:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    46:48:boolean isCanceled() -> isCanceled
    111:123:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    57:60:void throwIfCanceled() -> throwIfCanceled
    153:159:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    30:31:void <init>() -> <init>
    41:42:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    81:81:void <init>() -> <init>
    59:60:java.lang.String getStorageState(java.io.File) -> getStorageState
androidx.core.os.ExecutorCompat -> androidx.core.os.ExecutorCompat:
    39:40:void <init>() -> <init>
    36:36:java.util.concurrent.Executor create(android.os.Handler) -> create
androidx.core.os.ExecutorCompat$HandlerExecutor -> androidx.core.os.ExecutorCompat$HandlerExecutor:
    45:47:void <init>(android.os.Handler) -> <init>
    51:54:void execute(java.lang.Runnable) -> execute
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    245:247:void <init>() -> <init>
    65:95:android.os.Handler createAsync(android.os.Looper) -> createAsync
    124:154:android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback) -> createAsync
    211:241:boolean hasCallbacks(android.os.Handler,java.lang.Runnable) -> hasCallbacks
    182:188:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> postDelayed
androidx.core.os.HandlerCompat$Api28Impl -> androidx.core.os.HandlerCompat$Api28Impl:
    262:264:void <init>() -> <init>
    267:267:android.os.Handler createAsync(android.os.Looper) -> createAsync
    271:271:android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback) -> createAsync
    276:276:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> postDelayed
androidx.core.os.HandlerCompat$Api29Impl -> androidx.core.os.HandlerCompat$Api29Impl:
    251:253:void <init>() -> <init>
    256:256:boolean hasCallbacks(android.os.Handler,java.lang.Runnable) -> hasCallbacks
androidx.core.os.HandlerKt -> androidx.core.os.HandlerKt:
# {"id":"sourceFile","fileName":"Handler.kt"}
    65:67:java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postAtTime
    60:67:java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object) -> postAtTime$default
    38:44:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed
    33:44:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object) -> postDelayed$default
androidx.core.os.HandlerKt$postAtTime$runnable$1 -> androidx.core.os.HandlerKt$postAtTime$runnable$1:
# {"id":"sourceFile","fileName":"Handler.kt"}
    65:65:void run() -> run
androidx.core.os.HandlerKt$postDelayed$runnable$1 -> androidx.core.os.HandlerKt$postDelayed$runnable$1:
# {"id":"sourceFile","fileName":"Handler.kt"}
    38:38:void run() -> run
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    34:34:void <clinit>() -> <clinit>
    38:40:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    73:74:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    234:234:boolean equals(java.lang.Object) -> equals
    174:196:java.util.Locale forLanguageTagCompat(java.lang.String) -> forLanguageTagCompat
    158:168:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    86:86:java.util.Locale get(int) -> get
    205:206:androidx.core.os.LocaleListCompat getAdjustedDefault() -> getAdjustedDefault
    225:226:androidx.core.os.LocaleListCompat getDefault() -> getDefault
    145:145:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    137:137:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    239:239:int hashCode() -> hashCode
    117:117:int indexOf(java.util.Locale) -> indexOf
    96:96:boolean isEmpty() -> isEmpty
    104:104:int size() -> size
    125:125:java.lang.String toLanguageTags() -> toLanguageTags
    244:244:java.lang.String toString() -> toString
    65:65:java.lang.Object unwrap() -> unwrap
    46:46:androidx.core.os.LocaleListCompat wrap(java.lang.Object) -> wrap
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompatWrapper -> androidx.core.os.LocaleListCompatWrapper:
    41:219:void <clinit>() -> <clinit>
    122:149:void <init>(java.util.Locale[]) -> <init>
    261:262:java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> computeFirstMatch
    223:255:int computeFirstMatchIndex(java.util.Collection,boolean) -> computeFirstMatchIndex
    76:91:boolean equals(java.lang.Object) -> equals
    210:216:int findFirstMatchIndex(java.util.Locale) -> findFirstMatchIndex
    51:51:java.util.Locale get(int) -> get
    267:267:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    162:167:java.lang.String getLikelyScript(java.util.Locale) -> getLikelyScript
    46:46:java.lang.Object getLocaleList() -> getLocaleList
    96:100:int hashCode() -> hashCode
    66:71:int indexOf(java.util.Locale) -> indexOf
    56:56:boolean isEmpty() -> isEmpty
    177:177:boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    182:206:int matchScore(java.util.Locale,java.util.Locale) -> matchScore
    61:61:int size() -> size
    153:159:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> toLanguageTag
    119:119:java.lang.String toLanguageTags() -> toLanguageTags
    105:114:java.lang.String toString() -> toString
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
    31:33:void <init>(android.os.LocaleList) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    83:83:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    57:57:int indexOf(java.util.Locale) -> indexOf
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    77:77:java.lang.String toLanguageTags() -> toLanguageTags
    72:72:java.lang.String toString() -> toString
androidx.core.os.MessageCompat -> androidx.core.os.MessageCompat:
    34:39:void <clinit>() -> <clinit>
    112:113:void <init>() -> <init>
    97:98:boolean isAsynchronous(android.os.Message) -> isAsynchronous
    71:73:void setAsynchronous(android.os.Message,boolean) -> setAsynchronous
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    28:29:void <init>() -> <init>
    33:34:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> androidx.core.os.ParcelCompat:
    46:46:void <init>() -> <init>
    32:32:boolean readBoolean(android.os.Parcel) -> readBoolean
    43:44:void writeBoolean(android.os.Parcel,boolean) -> writeBoolean
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    68:68:void <init>() -> <init>
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> newCreator
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    48:50:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.PersistableBundleKt -> androidx.core.os.PersistableBundleKt:
# {"id":"sourceFile","fileName":"PersistableBundle.kt"}
    31:86:android.os.PersistableBundle persistableBundleOf(kotlin.Pair[]) -> persistableBundleOf
androidx.core.os.ProcessCompat -> androidx.core.os.ProcessCompat:
    32:34:void <init>() -> <init>
    55:56:boolean isApplicationUid(int) -> isApplicationUid
androidx.core.os.ProcessCompat$Api16Impl -> androidx.core.os.ProcessCompat$Api16Impl:
    119:119:void <clinit>() -> <clinit>
    124:126:void <init>() -> <init>
    134:152:boolean isApplicationUid(int) -> isApplicationUid
androidx.core.os.ProcessCompat$Api17Impl -> androidx.core.os.ProcessCompat$Api17Impl:
    81:81:void <clinit>() -> <clinit>
    86:88:void <init>() -> <init>
    96:113:boolean isApplicationUid(int) -> isApplicationUid
androidx.core.os.ProcessCompat$Api24Impl -> androidx.core.os.ProcessCompat$Api24Impl:
    69:71:void <init>() -> <init>
    75:75:boolean isApplicationUid(int) -> isApplicationUid
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    50:66:void <clinit>() -> <clinit>
    183:183:void <init>() -> <init>
    133:142:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    104:107:void beginSection(java.lang.String) -> beginSection
    153:162:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    117:120:void endSection() -> endSection
    78:89:boolean isEnabled() -> isEnabled
    172:181:void setCounter(java.lang.String,int) -> setCounter
androidx.core.os.TraceKt -> androidx.core.os.TraceKt:
# {"id":"sourceFile","fileName":"Trace.kt"}
    34:38:java.lang.Object trace(java.lang.String,kotlin.jvm.functions.Function0) -> trace
androidx.core.os.UserHandleCompat -> androidx.core.os.UserHandleCompat:
    42:43:void <init>() -> <init>
    87:92:java.lang.reflect.Method getGetUserIdMethod() -> getGetUserIdMethod
    96:101:java.lang.reflect.Constructor getUserHandleConstructor() -> getUserHandleConstructor
    50:51:android.os.UserHandle getUserHandleForUid(int) -> getUserHandleForUid
androidx.core.os.UserHandleCompat$Api24Impl -> androidx.core.os.UserHandleCompat$Api24Impl:
    77:78:void <init>() -> <init>
    82:82:android.os.UserHandle getUserHandleForUid(int) -> getUserHandleForUid
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    31:32:void <init>() -> <init>
    41:42:boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:43:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    45:48:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback) -> <init>
    67:74:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:85:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:61:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:59:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:72:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    26:26:void <init>() -> <init>
    36:41:android.os.Handler create() -> create
androidx.core.provider.DocumentsContractCompat -> androidx.core.provider.DocumentsContractCompat:
    341:342:void <init>() -> <init>
    170:171:android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String) -> buildChildDocumentsUri
    186:187:android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String) -> buildChildDocumentsUriUsingTree
    127:128:android.net.Uri buildDocumentUri(java.lang.String,java.lang.String) -> buildDocumentUri
    140:141:android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String) -> buildDocumentUriUsingTree
    154:155:android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String) -> buildTreeDocumentUri
    205:206:android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String) -> createDocument
    99:100:java.lang.String getDocumentId(android.net.Uri) -> getDocumentId
    112:113:java.lang.String getTreeDocumentId(android.net.Uri) -> getTreeDocumentId
    69:70:boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    81:88:boolean isTreeUri(android.net.Uri) -> isTreeUri
    241:242:boolean removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri) -> removeDocument
    220:221:android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String) -> renameDocument
androidx.core.provider.DocumentsContractCompat$DocumentCompat -> androidx.core.provider.DocumentsContractCompat$DocumentCompat:
    56:57:void <init>() -> <init>
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi19Impl -> androidx.core.provider.DocumentsContractCompat$DocumentsContractApi19Impl:
    275:276:void <init>() -> <init>
    256:256:android.net.Uri buildDocumentUri(java.lang.String,java.lang.String) -> buildDocumentUri
    272:272:boolean deleteDocument(android.content.ContentResolver,android.net.Uri) -> deleteDocument
    266:266:java.lang.String getDocumentId(android.net.Uri) -> getDocumentId
    261:261:boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl -> androidx.core.provider.DocumentsContractCompat$DocumentsContractApi21Impl:
    320:321:void <init>() -> <init>
    298:298:android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String) -> buildChildDocumentsUri
    303:303:android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String) -> buildChildDocumentsUriUsingTree
    293:293:android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String) -> buildDocumentUriUsingTree
    288:288:android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String) -> buildTreeDocumentUri
    309:309:android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String) -> createDocument
    283:283:java.lang.String getTreeDocumentId(android.net.Uri) -> getTreeDocumentId
    317:317:android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String) -> renameDocument
androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl -> androidx.core.provider.DocumentsContractCompat$DocumentsContractApi24Impl:
    337:338:void <init>() -> <init>
    328:328:boolean isTreeUri(android.net.Uri) -> isTreeUri
    334:334:boolean removeDocument(android.content.ContentResolver,android.net.Uri,android.net.Uri) -> removeDocument
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    196:196:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    225:229:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    213:221:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    189:193:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    53:61:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    76:105:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    120:185:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$1 -> androidx.core.provider.FontProvider$1:
    196:196:void <init>() -> <init>
    196:196:int compare(java.lang.Object,java.lang.Object) -> compare
    199:207:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    78:86:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    157:157:java.lang.String getIdentifier() -> getIdentifier
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    56:56:void <init>() -> <init>
    227:227:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    269:293:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    238:262:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:223:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:134:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
    76:77:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:178:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    194:194:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    194:194:java.lang.Object call() -> call
    198:200:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    206:206:void <init>(java.lang.String) -> <init>
    206:206:void accept(java.lang.Object) -> accept
    210:220:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    301:304:void <init>(int) -> <init>
    307:310:void <init>(android.graphics.Typeface) -> <init>
    314:314:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    56:56:void <init>() -> <init>
    76:76:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    102:102:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    552:554:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    610:610:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    593:593:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    122:126:void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFont
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
    567:568:void resetCache() -> resetCache
    178:179:void resetTypefaceCache() -> resetTypefaceCache
androidx.core.provider.FontsContractCompat$Columns -> androidx.core.provider.FontsContractCompat$Columns:
    188:188:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:393:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:298:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
    499:499:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    486:486:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    44:44:void <init>() -> <init>
    82:94:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    98:98:java.util.concurrent.Executor createHandlerExecutor(android.os.Handler) -> createHandlerExecutor
    56:58:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:167:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:180:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:186:void run() -> run
androidx.core.provider.RequestExecutor$HandlerExecutor -> androidx.core.provider.RequestExecutor$HandlerExecutor:
    110:112:void <init>(android.os.Handler) -> <init>
    116:119:void execute(java.lang.Runnable) -> execute
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:139:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:157:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:155:void run() -> run
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    48:88:void <init>(java.lang.String,int,int) -> <init>
    105:107:int getGeneration() -> getGeneration
    95:97:boolean isRunning() -> isRunning
    228:238:void onDestruction() -> onDestruction
    219:225:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    111:121:void post(java.lang.Runnable) -> post
    141:160:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    171:215:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    62:62:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    65:73:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    142:142:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    147:158:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    152:152:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    155:156:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    176:176:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    180:191:void run() -> run
androidx.core.telephony.SubscriptionManagerCompat -> androidx.core.telephony.SubscriptionManagerCompat:
    75:75:void <init>() -> <init>
    43:71:int getSlotIndex(int) -> getSlotIndex
androidx.core.telephony.SubscriptionManagerCompat$Api29Impl -> androidx.core.telephony.SubscriptionManagerCompat$Api29Impl:
    79:79:void <init>() -> <init>
    83:83:int getSlotIndex(int) -> getSlotIndex
androidx.core.telephony.TelephonyManagerCompat -> androidx.core.telephony.TelephonyManagerCompat:
    134:134:void <init>() -> <init>
    70:102:java.lang.String getImei(android.telephony.TelephonyManager) -> getImei
    112:131:int getSubscriptionId(android.telephony.TelephonyManager) -> getSubscriptionId
androidx.core.telephony.TelephonyManagerCompat$Api23Impl -> androidx.core.telephony.TelephonyManagerCompat$Api23Impl:
    161:161:void <init>() -> <init>
    168:168:java.lang.String getDeviceId(android.telephony.TelephonyManager,int) -> getDeviceId
androidx.core.telephony.TelephonyManagerCompat$Api26Impl -> androidx.core.telephony.TelephonyManagerCompat$Api26Impl:
    148:148:void <init>() -> <init>
    155:155:java.lang.String getImei(android.telephony.TelephonyManager) -> getImei
androidx.core.telephony.TelephonyManagerCompat$Api30Impl -> androidx.core.telephony.TelephonyManagerCompat$Api30Impl:
    138:138:void <init>() -> <init>
    142:142:int getSubscriptionId(android.telephony.TelephonyManager) -> getSubscriptionId
androidx.core.telephony.mbms.MbmsHelper -> androidx.core.telephony.mbms.MbmsHelper:
    36:36:void <init>() -> <init>
    57:75:java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo) -> getBestNameForService
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    245:245:androidx.core.text.BidiFormatter getInstance(boolean) -> getInstance
    254:254:androidx.core.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    347:347:boolean isRtl(java.lang.String) -> isRtl
    358:358:boolean isRtl(java.lang.CharSequence) -> isRtl
    272:272:boolean isRtlContext() -> isRtlContext
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    441:441:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    469:469:java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    483:483:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    148:150:void <init>(boolean) -> <init>
    157:159:void <init>(java.util.Locale) -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
    193:194:androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    177:182:androidx.core.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.CharSequenceKt -> androidx.core.text.CharSequenceKt:
# {"id":"sourceFile","fileName":"CharSequence.kt"}
    28:28:boolean isDigitsOnly(java.lang.CharSequence) -> isDigitsOnly
    36:36:int trimmedLength(java.lang.CharSequence) -> trimmedLength
androidx.core.text.HtmlCompat -> androidx.core.text.HtmlCompat:
    181:182:void <init>() -> <init>
    147:148:android.text.Spanned fromHtml(java.lang.String,int) -> fromHtml
    162:163:android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> fromHtml
    175:176:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
androidx.core.text.HtmlKt -> androidx.core.text.HtmlKt:
# {"id":"sourceFile","fileName":"Html.kt"}
    43:43:android.text.Spanned parseAsHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> parseAsHtml
    39:43:android.text.Spanned parseAsHtml$default(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler,int,java.lang.Object) -> parseAsHtml$default
    52:52:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
    50:52:java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object) -> toHtml$default
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:62:void <clinit>() -> <clinit>
    146:146:void <init>() -> <init>
    129:143:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:125:java.lang.String getScript(java.lang.String) -> getScript
    89:91:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.LocaleKt -> androidx.core.text.LocaleKt:
# {"id":"sourceFile","fileName":"Locale.kt"}
    30:30:int getLayoutDirection(java.util.Locale) -> getLayoutDirection
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    72:73:void <clinit>() -> <clinit>
    487:492:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    495:500:void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params) -> <init>
    745:745:char charAt(int) -> charAt
    429:482:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    527:530:int getParagraphCount() -> getParagraphCount
    550:554:int getParagraphEnd(int) -> getParagraphEnd
    538:542:int getParagraphStart(int) -> getParagraphStart
    520:520:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    509:512:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    720:720:int getSpanEnd(java.lang.Object) -> getSpanEnd
    725:725:int getSpanFlags(java.lang.Object) -> getSpanFlags
    715:715:int getSpanStart(java.lang.Object) -> getSpanStart
    705:708:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    647:657:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> getTextFuture
    740:740:int length() -> length
    730:730:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    687:696:void removeSpan(java.lang.Object) -> removeSpan
    671:680:void setSpan(java.lang.Object,int,int,int) -> setSpan
    750:750:java.lang.CharSequence subSequence(int,int) -> subSequence
    756:756:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    195:209:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    212:218:void <init>(android.text.PrecomputedText$Params) -> <init>
    330:345:boolean equals(java.lang.Object) -> equals
    273:320:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    251:251:int getBreakStrategy() -> getBreakStrategy
    263:263:int getHyphenationFrequency() -> getHyphenationFrequency
    239:239:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    226:226:android.text.TextPaint getTextPaint() -> getTextPaint
    350:354:int hashCode() -> hashCode
    377:398:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    115:128:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask:
    580:581:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback:
    567:570:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    562:562:java.lang.Object call() -> call
    574:574:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.SpannableStringBuilderKt -> androidx.core.text.SpannableStringBuilderKt:
# {"id":"sourceFile","fileName":"SpannableStringBuilder.kt"}
    125:125:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> backgroundColor
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> backgroundColor
    74:77:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):125 -> backgroundColor
    125:125:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> backgroundColor
    87:87:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> bold
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> bold
    74:77:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):87 -> bold
    87:87:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> bold
    41:43:android.text.SpannedString buildSpannedString(kotlin.jvm.functions.Function1) -> buildSpannedString
    115:115:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> color
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> color
    74:77:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):115 -> color
    115:115:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> color
    57:60:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object[],kotlin.jvm.functions.Function1) -> inSpans
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> inSpans
    96:96:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> italic
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> italic
    74:77:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):96 -> italic
    96:96:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> italic
    144:144:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1) -> scale
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> scale
    74:77:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1):144 -> scale
    144:144:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1) -> scale
    134:134:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> strikeThrough
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> strikeThrough
    74:77:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):134 -> strikeThrough
    134:134:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> strikeThrough
    162:162:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> subscript
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> subscript
    74:77:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):162 -> subscript
    162:162:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> subscript
    153:153:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> superscript
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> superscript
    74:77:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):153 -> superscript
    153:153:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> superscript
    105:105:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> underline
    74:77:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> underline
    74:77:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):105 -> underline
    105:105:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> underline
androidx.core.text.SpannableStringKt -> androidx.core.text.SpannableStringKt:
# {"id":"sourceFile","fileName":"SpannableString.kt"}
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    31:34:java.lang.Object[] androidx.core.text.SpannedStringKt.getSpans$default(android.text.Spanned,int,int,int,java.lang.Object) -> clearSpans
    31:34:void clearSpans(android.text.Spannable):34 -> clearSpans
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    13536:13536:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> clearSpans
    13536:13536:void clearSpans(android.text.Spannable):34 -> clearSpans
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    13537:13537:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> clearSpans
    13537:13537:void clearSpans(android.text.Spannable):34 -> clearSpans
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    49:50:void set(android.text.Spannable,int,int,java.lang.Object) -> set
    66:66:void set(android.text.Spannable,kotlin.ranges.IntRange,java.lang.Object) -> set
    30:30:android.text.Spannable toSpannable(java.lang.CharSequence) -> toSpannable
androidx.core.text.SpannedStringKt -> androidx.core.text.SpannedStringKt:
# {"id":"sourceFile","fileName":"SpannedString.kt"}
    34:34:java.lang.Object[] getSpans(android.text.Spanned,int,int) -> getSpans
    31:34:java.lang.Object[] getSpans$default(android.text.Spanned,int,int,int,java.lang.Object) -> getSpans$default
    28:28:android.text.Spanned toSpanned(java.lang.CharSequence) -> toSpanned
androidx.core.text.StringKt -> androidx.core.text.StringKt:
# {"id":"sourceFile","fileName":"String.kt"}
    28:28:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    257:257:void <init>() -> <init>
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    125:125:boolean isRtl(char[],int,int) -> isRtl
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    119:126:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:91:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    45:46:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.util.FindAddress -> androidx.core.text.util.FindAddress:
    72:268:void <clinit>() -> <clinit>
    517:518:void <init>() -> <init>
    401:490:int attemptMatch(java.lang.String,java.util.regex.MatchResult) -> attemptMatch
    272:297:boolean checkHouseNumber(java.lang.String) -> checkHouseNumber
    500:514:java.lang.String findAddress(java.lang.String) -> findAddress
    388:388:boolean isValidLocationName(java.lang.String) -> isValidLocationName
    345:352:boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult) -> isValidZipCode
    366:366:boolean isValidZipCode(java.lang.String,java.lang.String) -> isValidZipCode
    377:377:boolean isValidZipCode(java.lang.String) -> isValidZipCode
    310:316:java.util.regex.MatchResult matchHouseNumber(java.lang.String,int) -> matchHouseNumber
    330:332:java.util.regex.MatchResult matchState(java.lang.String,int) -> matchState
androidx.core.text.util.FindAddress$ZipRange -> androidx.core.text.util.FindAddress$ZipRange:
    43:48:void <init>(int,int,int,int) -> <init>
    51:52:boolean matches(java.lang.String) -> matches
androidx.core.text.util.LinkifyCompat -> androidx.core.text.util.LinkifyCompat:
    56:58:void <clinit>() -> <clinit>
    539:539:void <init>() -> <init>
    377:384:void addLinkMovementMethod(android.widget.TextView) -> addLinkMovementMethod
    101:148:boolean addLinks(android.text.Spannable,int) -> addLinks
    163:189:boolean addLinks(android.widget.TextView,int) -> addLinks
    206:211:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> addLinks
    230:235:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    257:269:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    282:285:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> addLinks
    306:309:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    332:369:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    437:440:void applyLink(java.lang.String,int,int,android.text.Spannable) -> applyLink
    484:487:java.lang.String findAddress(java.lang.String) -> findAddress
    417:434:void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> gatherLinks
    443:481:void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> gatherMapLinks
    388:411:java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> makeUrl
    492:534:void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> pruneOverlaps
    373:373:boolean shouldAddLinksFallbackToFramework() -> shouldAddLinksFallbackToFramework
androidx.core.text.util.LinkifyCompat$1 -> androidx.core.text.util.LinkifyCompat$1:
    58:58:void <init>() -> <init>
    58:58:int compare(java.lang.Object,java.lang.Object) -> compare
    61:77:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> androidx.core.text.util.LinkifyCompat$LinkSpec:
    547:548:void <init>() -> <init>
androidx.core.transition.TransitionKt -> androidx.core.transition.TransitionKt:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    73:73:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):73 -> addListener
    80:80:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    80:80:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):80 -> addListener
    81:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener
    81:81:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):81 -> addListener
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener$default
    44:44:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnCancel
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    66:81:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):44 -> doOnCancel
    44:44:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnCancel
    28:28:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnEnd
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    66:81:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):28 -> doOnEnd
    28:28:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnEnd
    60:60:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnPause
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    66:81:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):60 -> doOnPause
    60:60:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnPause
    52:52:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnResume
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    66:81:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):52 -> doOnResume
    52:52:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnResume
    36:36:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnStart
    66:81:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    66:81:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):36 -> doOnStart
    36:36:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnStart
androidx.core.transition.TransitionKt$addListener$1 -> androidx.core.transition.TransitionKt$addListener$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    67:67:java.lang.Object invoke(java.lang.Object) -> invoke
    67:67:java.lang.Object invoke(java.lang.Object) -> invoke
    67:67:void invoke(android.transition.Transition):67 -> invoke
androidx.core.transition.TransitionKt$addListener$2 -> androidx.core.transition.TransitionKt$addListener$2:
# {"id":"sourceFile","fileName":"Transition.kt"}
    68:68:java.lang.Object invoke(java.lang.Object) -> invoke
    68:68:java.lang.Object invoke(java.lang.Object) -> invoke
    68:68:void invoke(android.transition.Transition):68 -> invoke
androidx.core.transition.TransitionKt$addListener$3 -> androidx.core.transition.TransitionKt$addListener$3:
# {"id":"sourceFile","fileName":"Transition.kt"}
    69:69:java.lang.Object invoke(java.lang.Object) -> invoke
    69:69:java.lang.Object invoke(java.lang.Object) -> invoke
    69:69:void invoke(android.transition.Transition):69 -> invoke
androidx.core.transition.TransitionKt$addListener$4 -> androidx.core.transition.TransitionKt$addListener$4:
# {"id":"sourceFile","fileName":"Transition.kt"}
    70:70:java.lang.Object invoke(java.lang.Object) -> invoke
    70:70:java.lang.Object invoke(java.lang.Object) -> invoke
    70:70:void invoke(android.transition.Transition):70 -> invoke
androidx.core.transition.TransitionKt$addListener$5 -> androidx.core.transition.TransitionKt$addListener$5:
# {"id":"sourceFile","fileName":"Transition.kt"}
    71:71:java.lang.Object invoke(java.lang.Object) -> invoke
    71:71:java.lang.Object invoke(java.lang.Object) -> invoke
    71:71:void invoke(android.transition.Transition):71 -> invoke
androidx.core.transition.TransitionKt$addListener$listener$1 -> androidx.core.transition.TransitionKt$addListener$listener$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    77:77:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    74:74:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    76:76:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    75:75:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    78:78:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1 -> androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    73:73:void <init>(kotlin.jvm.functions.Function1):73 -> <init>
    77:77:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    77:77:void onTransitionCancel(android.transition.Transition):77 -> onTransitionCancel
    74:74:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    74:74:void onTransitionEnd(android.transition.Transition):74 -> onTransitionEnd
    67:67:java.lang.Object androidx.core.transition.TransitionKt$addListener$1.invoke(java.lang.Object) -> onTransitionEnd
    67:67:void onTransitionEnd(android.transition.Transition):84 -> onTransitionEnd
    76:76:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    76:76:void onTransitionPause(android.transition.Transition):76 -> onTransitionPause
    71:71:java.lang.Object androidx.core.transition.TransitionKt$addListener$5.invoke(java.lang.Object) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):86 -> onTransitionPause
    75:75:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    75:75:void onTransitionResume(android.transition.Transition):75 -> onTransitionResume
    70:70:java.lang.Object androidx.core.transition.TransitionKt$addListener$4.invoke(java.lang.Object) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):85 -> onTransitionResume
    78:78:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    78:78:void onTransitionStart(android.transition.Transition):78 -> onTransitionStart
    68:68:java.lang.Object androidx.core.transition.TransitionKt$addListener$2.invoke(java.lang.Object) -> onTransitionStart
    68:68:void onTransitionStart(android.transition.Transition):87 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1 -> androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    73:73:void <init>(kotlin.jvm.functions.Function1):73 -> <init>
    77:77:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    77:77:void onTransitionCancel(android.transition.Transition):77 -> onTransitionCancel
    69:69:java.lang.Object androidx.core.transition.TransitionKt$addListener$3.invoke(java.lang.Object) -> onTransitionCancel
    69:69:void onTransitionCancel(android.transition.Transition):86 -> onTransitionCancel
    74:74:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    74:74:void onTransitionEnd(android.transition.Transition):74 -> onTransitionEnd
    76:76:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    76:76:void onTransitionPause(android.transition.Transition):76 -> onTransitionPause
    71:71:java.lang.Object androidx.core.transition.TransitionKt$addListener$5.invoke(java.lang.Object) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):85 -> onTransitionPause
    75:75:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    75:75:void onTransitionResume(android.transition.Transition):75 -> onTransitionResume
    70:70:java.lang.Object androidx.core.transition.TransitionKt$addListener$4.invoke(java.lang.Object) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):84 -> onTransitionResume
    78:78:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    78:78:void onTransitionStart(android.transition.Transition):78 -> onTransitionStart
    68:68:java.lang.Object androidx.core.transition.TransitionKt$addListener$2.invoke(java.lang.Object) -> onTransitionStart
    68:68:void onTransitionStart(android.transition.Transition):87 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1 -> androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    73:73:void <init>(kotlin.jvm.functions.Function1):73 -> <init>
    77:77:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    77:77:void onTransitionCancel(android.transition.Transition):77 -> onTransitionCancel
    69:69:java.lang.Object androidx.core.transition.TransitionKt$addListener$3.invoke(java.lang.Object) -> onTransitionCancel
    69:69:void onTransitionCancel(android.transition.Transition):86 -> onTransitionCancel
    74:74:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    74:74:void onTransitionEnd(android.transition.Transition):74 -> onTransitionEnd
    67:67:java.lang.Object androidx.core.transition.TransitionKt$addListener$1.invoke(java.lang.Object) -> onTransitionEnd
    67:67:void onTransitionEnd(android.transition.Transition):84 -> onTransitionEnd
    76:76:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    76:76:void onTransitionPause(android.transition.Transition):76 -> onTransitionPause
    75:75:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    75:75:void onTransitionResume(android.transition.Transition):75 -> onTransitionResume
    70:70:java.lang.Object androidx.core.transition.TransitionKt$addListener$4.invoke(java.lang.Object) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):85 -> onTransitionResume
    78:78:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    78:78:void onTransitionStart(android.transition.Transition):78 -> onTransitionStart
    68:68:java.lang.Object androidx.core.transition.TransitionKt$addListener$2.invoke(java.lang.Object) -> onTransitionStart
    68:68:void onTransitionStart(android.transition.Transition):87 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1 -> androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    73:73:void <init>(kotlin.jvm.functions.Function1):73 -> <init>
    77:77:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    77:77:void onTransitionCancel(android.transition.Transition):77 -> onTransitionCancel
    69:69:java.lang.Object androidx.core.transition.TransitionKt$addListener$3.invoke(java.lang.Object) -> onTransitionCancel
    69:69:void onTransitionCancel(android.transition.Transition):86 -> onTransitionCancel
    74:74:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    74:74:void onTransitionEnd(android.transition.Transition):74 -> onTransitionEnd
    67:67:java.lang.Object androidx.core.transition.TransitionKt$addListener$1.invoke(java.lang.Object) -> onTransitionEnd
    67:67:void onTransitionEnd(android.transition.Transition):84 -> onTransitionEnd
    76:76:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    76:76:void onTransitionPause(android.transition.Transition):76 -> onTransitionPause
    71:71:java.lang.Object androidx.core.transition.TransitionKt$addListener$5.invoke(java.lang.Object) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):85 -> onTransitionPause
    75:75:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    75:75:void onTransitionResume(android.transition.Transition):75 -> onTransitionResume
    78:78:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    78:78:void onTransitionStart(android.transition.Transition):78 -> onTransitionStart
    68:68:java.lang.Object androidx.core.transition.TransitionKt$addListener$2.invoke(java.lang.Object) -> onTransitionStart
    68:68:void onTransitionStart(android.transition.Transition):87 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1 -> androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$default$1:
# {"id":"sourceFile","fileName":"Transition.kt"}
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    73:73:void <init>(kotlin.jvm.functions.Function1):73 -> <init>
    77:77:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    77:77:void onTransitionCancel(android.transition.Transition):77 -> onTransitionCancel
    69:69:java.lang.Object androidx.core.transition.TransitionKt$addListener$3.invoke(java.lang.Object) -> onTransitionCancel
    69:69:void onTransitionCancel(android.transition.Transition):87 -> onTransitionCancel
    74:74:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    74:74:void onTransitionEnd(android.transition.Transition):74 -> onTransitionEnd
    67:67:java.lang.Object androidx.core.transition.TransitionKt$addListener$1.invoke(java.lang.Object) -> onTransitionEnd
    67:67:void onTransitionEnd(android.transition.Transition):84 -> onTransitionEnd
    76:76:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    76:76:void onTransitionPause(android.transition.Transition):76 -> onTransitionPause
    71:71:java.lang.Object androidx.core.transition.TransitionKt$addListener$5.invoke(java.lang.Object) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):86 -> onTransitionPause
    75:75:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    75:75:void onTransitionResume(android.transition.Transition):75 -> onTransitionResume
    70:70:java.lang.Object androidx.core.transition.TransitionKt$addListener$4.invoke(java.lang.Object) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):85 -> onTransitionResume
    78:78:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    78:78:void onTransitionStart(android.transition.Transition):78 -> onTransitionStart
androidx.core.util.AtomicFile -> androidx.core.util.AtomicFile:
    56:60:void <init>(java.io.File) -> <init>
    75:78:void delete() -> delete
    142:156:void failWrite(java.io.FileOutputStream) -> failWrite
    122:134:void finishWrite(java.io.FileOutputStream) -> finishWrite
    68:68:java.io.File getBaseFile() -> getBaseFile
    166:182:java.io.FileInputStream openRead() -> openRead
    191:215:byte[] readFully() -> readFully
    234:242:void rename(java.io.File,java.io.File) -> rename
    96:110:java.io.FileOutputStream startWrite() -> startWrite
    220:224:boolean sync(java.io.FileOutputStream) -> sync
androidx.core.util.AtomicFileKt -> androidx.core.util.AtomicFileKt:
# {"id":"sourceFile","fileName":"AtomicFile.kt"}
    71:71:byte[] readBytes(android.util.AtomicFile) -> readBytes
    80:80:java.lang.String readText(android.util.AtomicFile,java.nio.charset.Charset) -> readText
    79:79:java.lang.String readText$default(android.util.AtomicFile,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    32:44:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> tryWrite
    51:51:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    32:35:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    32:35:void writeBytes(android.util.AtomicFile,byte[]):51 -> writeBytes
    52:53:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    36:44:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    36:44:void writeBytes(android.util.AtomicFile,byte[]):51 -> writeBytes
    54:54:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    38:43:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    38:43:void writeBytes(android.util.AtomicFile,byte[]):51 -> writeBytes
    62:63:void writeText(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset) -> writeText
    61:61:void writeText$default(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    49:50:void <init>() -> <init>
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.HalfKt -> androidx.core.util.HalfKt:
# {"id":"sourceFile","fileName":"Half.kt"}
    33:33:android.util.Half toHalf(short) -> toHalf
    41:41:android.util.Half toHalf(float) -> toHalf
    49:49:android.util.Half toHalf(double) -> toHalf
    41:41:android.util.Half toHalf(float) -> toHalf
    41:41:android.util.Half toHalf(double):49 -> toHalf
    49:49:android.util.Half toHalf(double) -> toHalf
    57:57:android.util.Half toHalf(java.lang.String) -> toHalf
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    35:45:void <init>(java.lang.String) -> <init>
    48:49:void close() -> close
    52:53:void flush() -> flush
    68:72:void flushBuilder() -> flushBuilder
    56:65:void write(char[],int,int) -> write
androidx.core.util.LongSparseArrayKt -> androidx.core.util.LongSparseArrayKt:
# {"id":"sourceFile","fileName":"LongSparseArray.kt"}
    31:31:boolean contains(android.util.LongSparseArray,long) -> contains
    48:48:boolean containsKey(android.util.LongSparseArray,long) -> containsKey
    53:53:boolean containsValue(android.util.LongSparseArray,java.lang.Object) -> containsValue
    91:94:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> forEach
    58:58:java.lang.Object getOrDefault(android.util.LongSparseArray,long,java.lang.Object) -> getOrDefault
    63:63:java.lang.Object getOrElse(android.util.LongSparseArray,long,kotlin.jvm.functions.Function0) -> getOrElse
    26:26:int getSize(android.util.LongSparseArray) -> getSize
    67:67:boolean isEmpty(android.util.LongSparseArray) -> isEmpty
    71:71:boolean isNotEmpty(android.util.LongSparseArray) -> isNotEmpty
    98:102:kotlin.collections.LongIterator keyIterator(android.util.LongSparseArray) -> keyIterator
    40:43:android.util.LongSparseArray plus(android.util.LongSparseArray,android.util.LongSparseArray) -> plus
    86:86:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    91:92:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    91:92:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):86 -> putAll
    86:86:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    91:94:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    91:94:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):86 -> putAll
    86:86:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    76:81:boolean remove(android.util.LongSparseArray,long,java.lang.Object) -> remove
    35:35:void set(android.util.LongSparseArray,long,java.lang.Object) -> set
    106:110:java.util.Iterator valueIterator(android.util.LongSparseArray) -> valueIterator
androidx.core.util.LongSparseArrayKt$keyIterator$1 -> androidx.core.util.LongSparseArrayKt$keyIterator$1:
# {"id":"sourceFile","fileName":"LongSparseArray.kt"}
    98:98:void <init>(android.util.LongSparseArray) -> <init>
    99:99:int getIndex() -> getIndex
    100:100:boolean hasNext() -> hasNext
    101:101:long nextLong() -> nextLong
    99:99:void setIndex(int) -> setIndex
androidx.core.util.LongSparseArrayKt$valueIterator$1 -> androidx.core.util.LongSparseArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"LongSparseArray.kt"}
    106:106:void <init>(android.util.LongSparseArray) -> <init>
    107:107:int getIndex() -> getIndex
    108:108:boolean hasNext() -> hasNext
    109:109:java.lang.Object next() -> next
    107:107:void setIndex(int) -> setIndex
androidx.core.util.LruCacheKt -> androidx.core.util.LruCacheKt:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    46:46:android.util.LruCache lruCache(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4) -> lruCache
    38:46:android.util.LruCache lruCache$default(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,java.lang.Object) -> lruCache$default
androidx.core.util.LruCacheKt$lruCache$1 -> androidx.core.util.LruCacheKt$lruCache$1:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    40:40:java.lang.Integer invoke(java.lang.Object,java.lang.Object):40 -> invoke
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$2 -> androidx.core.util.LruCacheKt$lruCache$2:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    42:42:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$3 -> androidx.core.util.LruCacheKt$lruCache$3:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    44:44:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    44:44:void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object):44 -> invoke
androidx.core.util.LruCacheKt$lruCache$4 -> androidx.core.util.LruCacheKt$lruCache$4:
# {"id":"sourceFile","fileName":"LruCache.kt"}
    46:46:void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int) -> <init>
    48:48:java.lang.Object create(java.lang.Object) -> create
    50:51:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    47:47:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    30:32:void <init>() -> <init>
    51:52:boolean equals(java.lang.Object,java.lang.Object) -> equals
    93:94:int hash(java.lang.Object[]) -> hash
    66:66:int hashCode(java.lang.Object) -> hashCode
    131:132:java.lang.Object requireNonNull(java.lang.Object) -> requireNonNull
    156:157:java.lang.Object requireNonNull(java.lang.Object,java.lang.String) -> requireNonNull
    111:111:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    84:84:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.PairKt -> androidx.core.util.PairKt:
# {"id":"sourceFile","fileName":"Pair.kt"}
    35:35:java.lang.Object component1(androidx.core.util.Pair) -> component1
    66:66:java.lang.Object component1(android.util.Pair) -> component1
    47:47:java.lang.Object component2(androidx.core.util.Pair) -> component2
    78:78:java.lang.Object component2(android.util.Pair) -> component2
    87:87:android.util.Pair toAndroidPair(kotlin.Pair) -> toAndroidPair
    54:54:androidx.core.util.Pair toAndroidXPair(kotlin.Pair) -> toAndroidXPair
    50:50:kotlin.Pair toKotlinPair(androidx.core.util.Pair) -> toKotlinPair
    82:82:kotlin.Pair toKotlinPair(android.util.Pair) -> toKotlinPair
androidx.core.util.PatternsCompat -> androidx.core.util.PatternsCompat:
    153:338:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> androidx.core.util.Pools:
    73:75:void <init>() -> <init>
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    339:340:void <init>() -> <init>
    37:40:void checkArgument(boolean) -> checkArgument
    51:54:void checkArgument(boolean,java.lang.Object) -> checkArgument
    69:72:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    245:255:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    272:282:long checkArgumentInRange(long,long,long,java.lang.String) -> checkArgumentInRange
    299:309:float checkArgumentInRange(float,float,float,java.lang.String) -> checkArgumentInRange
    326:336:double checkArgumentInRange(double,double,double,java.lang.String) -> checkArgumentInRange
    208:212:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    224:228:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    190:195:int checkFlagsArgument(int,int) -> checkFlagsArgument
    136:139:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    153:156:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    168:171:void checkState(boolean,java.lang.String) -> checkState
    181:182:void checkState(boolean) -> checkState
    84:87:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence) -> checkStringNotEmpty
    102:105:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object) -> checkStringNotEmpty
    121:124:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[]) -> checkStringNotEmpty
androidx.core.util.RangeKt -> androidx.core.util.RangeKt:
# {"id":"sourceFile","fileName":"Range.kt"}
    48:48:android.util.Range and(android.util.Range,android.util.Range) -> and
    34:34:android.util.Range plus(android.util.Range,java.lang.Comparable) -> plus
    39:39:android.util.Range plus(android.util.Range,android.util.Range) -> plus
    30:30:android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable) -> rangeTo
    52:55:kotlin.ranges.ClosedRange toClosedRange(android.util.Range) -> toClosedRange
    59:59:android.util.Range toRange(kotlin.ranges.ClosedRange) -> toRange
androidx.core.util.RangeKt$toClosedRange$1 -> androidx.core.util.RangeKt$toClosedRange$1:
# {"id":"sourceFile","fileName":"Range.kt"}
    52:52:void <init>(android.util.Range) -> <init>
    52:52:boolean contains(java.lang.Comparable) -> contains
    53:53:java.lang.Comparable getEndInclusive() -> getEndInclusive
    54:54:java.lang.Comparable getStart() -> getStart
    52:52:boolean isEmpty() -> isEmpty
androidx.core.util.SizeKt -> androidx.core.util.SizeKt:
# {"id":"sourceFile","fileName":"Size.kt"}
    35:35:int component1(android.util.Size) -> component1
    59:59:float component1(android.util.SizeF) -> component1
    47:47:int component2(android.util.Size) -> component2
    71:71:float component2(android.util.SizeF) -> component2
androidx.core.util.SparseArrayKt -> androidx.core.util.SparseArrayKt:
# {"id":"sourceFile","fileName":"SparseArray.kt"}
    28:28:boolean contains(android.util.SparseArray,int) -> contains
    42:42:boolean containsKey(android.util.SparseArray,int) -> containsKey
    45:45:boolean containsValue(android.util.SparseArray,java.lang.Object) -> containsValue
    76:79:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> forEach
    49:49:java.lang.Object getOrDefault(android.util.SparseArray,int,java.lang.Object) -> getOrDefault
    53:53:java.lang.Object getOrElse(android.util.SparseArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseArray) -> getSize
    56:56:boolean isEmpty(android.util.SparseArray) -> isEmpty
    59:59:boolean isNotEmpty(android.util.SparseArray) -> isNotEmpty
    82:86:kotlin.collections.IntIterator keyIterator(android.util.SparseArray) -> keyIterator
    35:38:android.util.SparseArray plus(android.util.SparseArray,android.util.SparseArray) -> plus
    72:72:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    76:77:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    76:77:void putAll(android.util.SparseArray,android.util.SparseArray):72 -> putAll
    72:72:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    76:79:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    76:79:void putAll(android.util.SparseArray,android.util.SparseArray):72 -> putAll
    72:72:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    63:68:boolean remove(android.util.SparseArray,int,java.lang.Object) -> remove
    31:31:void set(android.util.SparseArray,int,java.lang.Object) -> set
    89:93:java.util.Iterator valueIterator(android.util.SparseArray) -> valueIterator
androidx.core.util.SparseArrayKt$keyIterator$1 -> androidx.core.util.SparseArrayKt$keyIterator$1:
# {"id":"sourceFile","fileName":"SparseArray.kt"}
    82:82:void <init>(android.util.SparseArray) -> <init>
    83:83:int getIndex() -> getIndex
    84:84:boolean hasNext() -> hasNext
    85:85:int nextInt() -> nextInt
    83:83:void setIndex(int) -> setIndex
androidx.core.util.SparseArrayKt$valueIterator$1 -> androidx.core.util.SparseArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"SparseArray.kt"}
    89:89:void <init>(android.util.SparseArray) -> <init>
    90:90:int getIndex() -> getIndex
    91:91:boolean hasNext() -> hasNext
    92:92:java.lang.Object next() -> next
    90:90:void setIndex(int) -> setIndex
androidx.core.util.SparseBooleanArrayKt -> androidx.core.util.SparseBooleanArrayKt:
# {"id":"sourceFile","fileName":"SparseBooleanArray.kt"}
    27:27:boolean contains(android.util.SparseBooleanArray,int) -> contains
    41:41:boolean containsKey(android.util.SparseBooleanArray,int) -> containsKey
    45:45:boolean containsValue(android.util.SparseBooleanArray,boolean) -> containsValue
    77:80:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> forEach
    49:49:boolean getOrDefault(android.util.SparseBooleanArray,int,boolean) -> getOrDefault
    53:96:boolean getOrElse(android.util.SparseBooleanArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseBooleanArray) -> getSize
    56:56:boolean isEmpty(android.util.SparseBooleanArray) -> isEmpty
    59:59:boolean isNotEmpty(android.util.SparseBooleanArray) -> isNotEmpty
    83:87:kotlin.collections.IntIterator keyIterator(android.util.SparseBooleanArray) -> keyIterator
    34:37:android.util.SparseBooleanArray plus(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> plus
    73:73:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    77:78:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    77:78:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):73 -> putAll
    73:73:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    77:80:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    77:80:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):73 -> putAll
    73:73:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    63:69:boolean remove(android.util.SparseBooleanArray,int,boolean) -> remove
    30:30:void set(android.util.SparseBooleanArray,int,boolean) -> set
    90:94:kotlin.collections.BooleanIterator valueIterator(android.util.SparseBooleanArray) -> valueIterator
androidx.core.util.SparseBooleanArrayKt$keyIterator$1 -> androidx.core.util.SparseBooleanArrayKt$keyIterator$1:
# {"id":"sourceFile","fileName":"SparseBooleanArray.kt"}
    83:83:void <init>(android.util.SparseBooleanArray) -> <init>
    84:84:int getIndex() -> getIndex
    85:85:boolean hasNext() -> hasNext
    86:86:int nextInt() -> nextInt
    84:84:void setIndex(int) -> setIndex
androidx.core.util.SparseBooleanArrayKt$valueIterator$1 -> androidx.core.util.SparseBooleanArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"SparseBooleanArray.kt"}
    90:90:void <init>(android.util.SparseBooleanArray) -> <init>
    91:91:int getIndex() -> getIndex
    92:92:boolean hasNext() -> hasNext
    93:93:boolean nextBoolean() -> nextBoolean
    91:91:void setIndex(int) -> setIndex
androidx.core.util.SparseIntArrayKt -> androidx.core.util.SparseIntArrayKt:
# {"id":"sourceFile","fileName":"SparseIntArray.kt"}
    27:27:boolean contains(android.util.SparseIntArray,int) -> contains
    41:41:boolean containsKey(android.util.SparseIntArray,int) -> containsKey
    44:44:boolean containsValue(android.util.SparseIntArray,int) -> containsValue
    75:78:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> forEach
    48:48:int getOrDefault(android.util.SparseIntArray,int,int) -> getOrDefault
    52:94:int getOrElse(android.util.SparseIntArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseIntArray) -> getSize
    55:55:boolean isEmpty(android.util.SparseIntArray) -> isEmpty
    58:58:boolean isNotEmpty(android.util.SparseIntArray) -> isNotEmpty
    81:85:kotlin.collections.IntIterator keyIterator(android.util.SparseIntArray) -> keyIterator
    34:37:android.util.SparseIntArray plus(android.util.SparseIntArray,android.util.SparseIntArray) -> plus
    71:71:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    75:76:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    75:76:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):71 -> putAll
    71:71:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    75:78:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    75:78:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):71 -> putAll
    71:71:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    62:67:boolean remove(android.util.SparseIntArray,int,int) -> remove
    30:30:void set(android.util.SparseIntArray,int,int) -> set
    88:92:kotlin.collections.IntIterator valueIterator(android.util.SparseIntArray) -> valueIterator
androidx.core.util.SparseIntArrayKt$keyIterator$1 -> androidx.core.util.SparseIntArrayKt$keyIterator$1:
# {"id":"sourceFile","fileName":"SparseIntArray.kt"}
    81:81:void <init>(android.util.SparseIntArray) -> <init>
    82:82:int getIndex() -> getIndex
    83:83:boolean hasNext() -> hasNext
    84:84:int nextInt() -> nextInt
    82:82:void setIndex(int) -> setIndex
androidx.core.util.SparseIntArrayKt$valueIterator$1 -> androidx.core.util.SparseIntArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"SparseIntArray.kt"}
    88:88:void <init>(android.util.SparseIntArray) -> <init>
    89:89:int getIndex() -> getIndex
    90:90:boolean hasNext() -> hasNext
    91:91:int nextInt() -> nextInt
    89:89:void setIndex(int) -> setIndex
androidx.core.util.SparseLongArrayKt -> androidx.core.util.SparseLongArrayKt:
# {"id":"sourceFile","fileName":"SparseLongArray.kt"}
    30:30:boolean contains(android.util.SparseLongArray,int) -> contains
    47:47:boolean containsKey(android.util.SparseLongArray,int) -> containsKey
    51:51:boolean containsValue(android.util.SparseLongArray,long) -> containsValue
    89:92:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> forEach
    56:56:long getOrDefault(android.util.SparseLongArray,int,long) -> getOrDefault
    61:110:long getOrElse(android.util.SparseLongArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    26:26:int getSize(android.util.SparseLongArray) -> getSize
    65:65:boolean isEmpty(android.util.SparseLongArray) -> isEmpty
    69:69:boolean isNotEmpty(android.util.SparseLongArray) -> isNotEmpty
    96:100:kotlin.collections.IntIterator keyIterator(android.util.SparseLongArray) -> keyIterator
    39:42:android.util.SparseLongArray plus(android.util.SparseLongArray,android.util.SparseLongArray) -> plus
    84:84:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    89:90:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    89:90:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):84 -> putAll
    84:84:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    89:92:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    89:92:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):84 -> putAll
    84:84:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    74:79:boolean remove(android.util.SparseLongArray,int,long) -> remove
    34:34:void set(android.util.SparseLongArray,int,long) -> set
    104:108:kotlin.collections.LongIterator valueIterator(android.util.SparseLongArray) -> valueIterator
androidx.core.util.SparseLongArrayKt$keyIterator$1 -> androidx.core.util.SparseLongArrayKt$keyIterator$1:
# {"id":"sourceFile","fileName":"SparseLongArray.kt"}
    96:96:void <init>(android.util.SparseLongArray) -> <init>
    97:97:int getIndex() -> getIndex
    98:98:boolean hasNext() -> hasNext
    99:99:int nextInt() -> nextInt
    97:97:void setIndex(int) -> setIndex
androidx.core.util.SparseLongArrayKt$valueIterator$1 -> androidx.core.util.SparseLongArrayKt$valueIterator$1:
# {"id":"sourceFile","fileName":"SparseLongArray.kt"}
    104:104:void <init>(android.util.SparseLongArray) -> <init>
    105:105:int getIndex() -> getIndex
    106:106:boolean hasNext() -> hasNext
    107:107:long nextLong() -> nextLong
    105:105:void setIndex(int) -> setIndex
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    44:53:int accumField(int,int,boolean,int) -> accumField
    154:158:void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    163:167:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:173:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    178:183:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    81:148:int formatDurationLocked(long,int) -> formatDurationLocked
    58:77:int printField(char[],int,char,int,boolean,int) -> printField
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    131:131:void <clinit>() -> <clinit>
    140:141:void <init>() -> <init>
    147:150:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    217:217:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    319:325:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    397:399:java.util.List getActionList(android.view.View) -> getActionList
    156:156:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    383:392:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    257:258:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:278:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:238:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    301:301:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    345:361:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    366:379:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    174:175:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    196:197:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    119:122:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:93:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    97:98:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    103:103:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    127:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    108:109:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    113:114:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    133:135:void <init>(android.content.Context) -> <init>
    141:141:android.content.Context getContext() -> getContext
    250:250:boolean hasSubMenu() -> hasSubMenu
    190:190:boolean isVisible() -> isVisible
    164:164:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    237:237:boolean onPerformDefaultAction() -> onPerformDefaultAction
    263:263:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    176:176:boolean overridesItemVisibility() -> overridesItemVisibility
    200:203:void refreshVisibility() -> refreshVisibility
    306:308:void reset() -> reset
    283:284:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    293:299:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    273:276:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.ContentInfoCompat -> androidx.core.view.ContentInfoCompat:
    149:151:void <init>(androidx.core.view.ContentInfoCompat$Compat) -> <init>
    299:303:android.content.ClipData buildClipData(android.content.ClipDescription,java.util.List) -> buildClipData
    140:143:java.lang.String flagsToString(int) -> flagsToString
    194:194:android.content.ClipData getClip() -> getClip
    232:232:android.os.Bundle getExtras() -> getExtras
    211:211:int getFlags() -> getFlags
    222:222:android.net.Uri getLinkUri() -> getLinkUri
    203:203:int getSource() -> getSource
    254:267:android.util.Pair partition(androidx.core.util.Predicate) -> partition
    273:293:android.util.Pair partition(android.content.ClipData,androidx.core.util.Predicate) -> partition
    326:326:android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate) -> partition
    105:113:java.lang.String sourceToString(int) -> sourceToString
    180:180:android.view.ContentInfo toContentInfo() -> toContentInfo
    165:165:androidx.core.view.ContentInfoCompat toContentInfoCompat(android.view.ContentInfo) -> toContentInfoCompat
    186:186:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$Api31Impl -> androidx.core.view.ContentInfoCompat$Api31Impl:
    331:331:void <init>() -> <init>
    337:350:android.util.Pair partition(android.view.ContentInfo,java.util.function.Predicate) -> partition
androidx.core.view.ContentInfoCompat$Api31Impl$$ExternalSyntheticLambda0 -> androidx.core.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.function.Predicate androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$0$e540f59e9f6f024d05d19d7c6cb8bfb05295bd7e948121a6455648c98f359579$0.f$0 -> a
    void androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$0$e540f59e9f6f024d05d19d7c6cb8bfb05295bd7e948121a6455648c98f359579$0.<init>(java.util.function.Predicate) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ContentInfoCompat$Api31Impl$$InternalSyntheticLambda$0$e540f59e9f6f024d05d19d7c6cb8bfb05295bd7e948121a6455648c98f359579$0.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ContentInfoCompat$Builder -> androidx.core.view.ContentInfoCompat$Builder:
    500:506:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    514:520:void <init>(android.content.ClipData,int) -> <init>
    589:589:androidx.core.view.ContentInfoCompat build() -> build
    530:531:androidx.core.view.ContentInfoCompat$Builder setClip(android.content.ClipData) -> setClip
    580:581:androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle) -> setExtras
    555:556:androidx.core.view.ContentInfoCompat$Builder setFlags(int) -> setFlags
    568:569:androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri) -> setLinkUri
    542:543:androidx.core.view.ContentInfoCompat$Builder setSource(int) -> setSource
androidx.core.view.ContentInfoCompat$BuilderCompat31Impl -> androidx.core.view.ContentInfoCompat$BuilderCompat31Impl:
    665:667:void <init>(android.content.ClipData,int) -> <init>
    669:671:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    701:701:androidx.core.view.ContentInfoCompat build() -> build
    675:676:void setClip(android.content.ClipData) -> setClip
    695:696:void setExtras(android.os.Bundle) -> setExtras
    685:686:void setFlags(int) -> setFlags
    690:691:void setLinkUri(android.net.Uri) -> setLinkUri
    680:681:void setSource(int) -> setSource
androidx.core.view.ContentInfoCompat$BuilderCompatImpl -> androidx.core.view.ContentInfoCompat$BuilderCompatImpl:
    615:618:void <init>(android.content.ClipData,int) -> <init>
    620:626:void <init>(androidx.core.view.ContentInfoCompat) -> <init>
    656:656:androidx.core.view.ContentInfoCompat build() -> build
    630:631:void setClip(android.content.ClipData) -> setClip
    650:651:void setExtras(android.os.Bundle) -> setExtras
    640:641:void setFlags(int) -> setFlags
    645:646:void setLinkUri(android.net.Uri) -> setLinkUri
    635:636:void setSource(int) -> setSource
androidx.core.view.ContentInfoCompat$Compat31Impl -> androidx.core.view.ContentInfoCompat$Compat31Impl:
    443:445:void <init>(android.view.ContentInfo) -> <init>
    456:456:android.content.ClipData getClip() -> getClip
    480:480:android.os.Bundle getExtras() -> getExtras
    468:468:int getFlags() -> getFlags
    474:474:android.net.Uri getLinkUri() -> getLinkUri
    462:462:int getSource() -> getSource
    450:450:android.view.ContentInfo getWrapped() -> getWrapped
    486:486:java.lang.String toString() -> toString
androidx.core.view.ContentInfoCompat$CompatImpl -> androidx.core.view.ContentInfoCompat$CompatImpl:
    381:388:void <init>(androidx.core.view.ContentInfoCompat$BuilderCompatImpl) -> <init>
    399:399:android.content.ClipData getClip() -> getClip
    423:423:android.os.Bundle getExtras() -> getExtras
    411:411:int getFlags() -> getFlags
    417:417:android.net.Uri getLinkUri() -> getLinkUri
    405:405:int getSource() -> getSource
    393:393:android.view.ContentInfo getWrapped() -> getWrapped
    429:434:java.lang.String toString() -> toString
androidx.core.view.DisplayCompat -> androidx.core.view.DisplayCompat:
    50:52:void <init>() -> <init>
    191:205:android.graphics.Point getCurrentDisplaySizeFromWorkarounds(android.content.Context,android.view.Display) -> getCurrentDisplaySizeFromWorkarounds
    71:82:android.graphics.Point getDisplaySize(android.content.Context,android.view.Display) -> getDisplaySize
    60:61:androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display) -> getMode
    93:94:androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display) -> getSupportedModes
    133:137:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    223:224:boolean isCurrentModeTheLargestMode(android.view.Display) -> isCurrentModeTheLargestMode
    212:215:boolean isSonyBravia4kTv(android.content.Context) -> isSonyBravia4kTv
    146:148:boolean isTv(android.content.Context) -> isTv
    112:120:android.graphics.Point parseDisplaySize(java.lang.String) -> parseDisplaySize
    164:178:android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display) -> parsePhysicalDisplaySizeFromSystemProperties
androidx.core.view.DisplayCompat$Api17Impl -> androidx.core.view.DisplayCompat$Api17Impl:
    308:308:void <init>() -> <init>
    311:312:void getRealSize(android.view.Display,android.graphics.Point) -> getRealSize
androidx.core.view.DisplayCompat$Api23Impl -> androidx.core.view.DisplayCompat$Api23Impl:
    233:233:void <init>() -> <init>
    237:243:androidx.core.view.DisplayCompat$ModeCompat getMode(android.content.Context,android.view.Display) -> getMode
    250:272:androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display) -> getSupportedModes
    276:284:boolean isCurrentModeTheLargestMode(android.view.Display) -> isCurrentModeTheLargestMode
    292:293:boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point) -> physicalSizeEquals
    301:302:boolean physicalSizeEquals(android.view.Display$Mode,android.view.Display$Mode) -> physicalSizeEquals
androidx.core.view.DisplayCompat$ModeCompat -> androidx.core.view.DisplayCompat$ModeCompat:
    330:335:void <init>(android.graphics.Point) -> <init>
    343:349:void <init>(android.view.Display$Mode,boolean) -> <init>
    360:366:void <init>(android.view.Display$Mode,android.graphics.Point) -> <init>
    379:379:int getPhysicalHeight() -> getPhysicalHeight
    372:372:int getPhysicalWidth() -> getPhysicalWidth
    393:393:boolean isNative() -> isNative
    402:402:android.view.Display$Mode toMode() -> toMode
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    56:57:void <init>(android.graphics.Rect,java.util.List) -> <init>
    77:79:void <init>(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> <init>
    112:114:void <init>(java.lang.Object) -> <init>
    84:108:android.view.DisplayCutout constructDisplayCutout(androidx.core.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,androidx.core.graphics.Insets) -> constructDisplayCutout
    191:198:boolean equals(java.lang.Object) -> equals
    163:166:java.util.List getBoundingRects() -> getBoundingRects
    127:130:int getSafeInsetBottom() -> getSafeInsetBottom
    136:139:int getSafeInsetLeft() -> getSafeInsetLeft
    145:148:int getSafeInsetRight() -> getSafeInsetRight
    118:121:int getSafeInsetTop() -> getSafeInsetTop
    182:185:androidx.core.graphics.Insets getWaterfallInsets() -> getWaterfallInsets
    203:203:int hashCode() -> hashCode
    208:208:java.lang.String toString() -> toString
    217:217:android.view.DisplayCutout unwrap() -> unwrap
    212:212:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.DragAndDropPermissionsCompat -> androidx.core.view.DragAndDropPermissionsCompat:
    42:44:void <init>(java.lang.Object) -> <init>
    64:67:void release() -> release
    50:57:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> request
androidx.core.view.DragStartHelper -> androidx.core.view.DragStartHelper:
    96:188:void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener) -> <init>
    107:109:void attach() -> attach
    117:119:void detach() -> detach
    178:179:void getTouchPosition(android.graphics.Point) -> getTouchPosition
    170:170:boolean onLongClick(android.view.View) -> onLongClick
    129:161:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$1 -> androidx.core.view.DragStartHelper$1:
    181:181:void <init>(androidx.core.view.DragStartHelper) -> <init>
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> androidx.core.view.DragStartHelper$2:
    188:188:void <init>(androidx.core.view.DragStartHelper) -> <init>
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    531:531:boolean isLongpressEnabled() -> isLongpressEnabled
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    556:557:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    567:568:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:63:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:427:void cancel() -> cancel
    430:440:void cancelTaps() -> cancelTaps
    458:462:void dispatchLongPress() -> dispatchLongPress
    166:182:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    215:215:boolean isLongpressEnabled() -> isLongpressEnabled
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    207:208:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    103:105:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    475:475:boolean isLongpressEnabled() -> isLongpressEnabled
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    485:486:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    490:491:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    153:153:void <init>() -> <init>
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    98:103:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    126:131:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.InputDeviceCompat -> androidx.core.view.InputDeviceCompat:
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    96:97:void <init>() -> <init>
    72:91:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    170:174:androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
    112:129:void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory) -> setFactory
    140:153:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> androidx.core.view.LayoutInflaterCompat$Factory2Wrapper:
    43:45:void <init>(androidx.core.view.LayoutInflaterFactory) -> <init>
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    61:61:java.lang.String toString() -> toString
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    166:166:void <init>() -> <init>
    127:139:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    61:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    112:113:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    161:164:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    150:153:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuCompat -> androidx.core.view.MenuCompat:
    53:53:void <init>() -> <init>
    46:51:void setGroupDividerEnabled(android.view.Menu,boolean) -> setGroupDividerEnabled
    36:37:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
androidx.core.view.MenuHostHelper -> androidx.core.view.MenuHostHelper:
    39:51:void <init>(java.lang.Runnable) -> <init>
    void $r8$lambda$VnUJXnvHt4N_mEoh2slqiieT0pg(androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    89:91:void addMenuProvider(androidx.core.view.MenuProvider) -> addMenuProvider
    103:115:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner) -> addMenuProvider
    132:148:void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State) -> addMenuProvider
    void $r8$lambda$yJLrCbQs1VMDQOb-UI1XiFiSaTs(androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    110:113:void lambda$addMenuProvider$0(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> lambda$addMenuProvider$0
    138:146:void lambda$addMenuProvider$1(androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> lambda$addMenuProvider$1
    61:64:void onCreateMenu(android.view.Menu,android.view.MenuInflater) -> onCreateMenu
    75:80:boolean onMenuItemSelected(android.view.MenuItem) -> onMenuItemSelected
    156:162:void removeMenuProvider(androidx.core.view.MenuProvider) -> removeMenuProvider
androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda0 -> androidx.core.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.MenuHostHelper androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$24717458d1e5bb9b4b5425408897755f8a77b241173aff83e205b59bac08e6c8$0.f$0 -> a
    androidx.core.view.MenuProvider androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$24717458d1e5bb9b4b5425408897755f8a77b241173aff83e205b59bac08e6c8$0.f$1 -> b
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$24717458d1e5bb9b4b5425408897755f8a77b241173aff83e205b59bac08e6c8$0.<init>(androidx.core.view.MenuHostHelper,androidx.core.view.MenuProvider) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$24717458d1e5bb9b4b5425408897755f8a77b241173aff83e205b59bac08e6c8$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuHostHelper$$ExternalSyntheticLambda1 -> androidx.core.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.Lifecycle$State androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$33254df3eb7146f9c5f69317974633db7a39feb540fdb7f5dd407592f77be6c5$0.f$1 -> b
    androidx.core.view.MenuHostHelper androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$33254df3eb7146f9c5f69317974633db7a39feb540fdb7f5dd407592f77be6c5$0.f$0 -> a
    androidx.core.view.MenuProvider androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$33254df3eb7146f9c5f69317974633db7a39feb540fdb7f5dd407592f77be6c5$0.f$2 -> c
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$33254df3eb7146f9c5f69317974633db7a39feb540fdb7f5dd407592f77be6c5$0.<init>(androidx.core.view.MenuHostHelper,androidx.lifecycle.Lifecycle$State,androidx.core.view.MenuProvider) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.MenuHostHelper$$InternalSyntheticLambda$0$33254df3eb7146f9c5f69317974633db7a39feb540fdb7f5dd407592f77be6c5$0.onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.MenuHostHelper$LifecycleContainer -> androidx.core.view.MenuHostHelper$LifecycleContainer:
    168:172:void <init>(androidx.lifecycle.Lifecycle,androidx.lifecycle.LifecycleEventObserver) -> <init>
    175:177:void clearObservers() -> clearObservers
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    268:268:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    249:249:boolean expandActionView(android.view.MenuItem) -> expandActionView
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    188:188:android.view.View getActionView(android.view.MenuItem) -> getActionView
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    436:442:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    135:136:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$1:
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MenuKt -> androidx.core.view.MenuKt:
# {"id":"sourceFile","fileName":"Menu.kt"}
    34:39:boolean contains(android.view.Menu,android.view.MenuItem) -> contains
    56:59:void forEach(android.view.Menu,kotlin.jvm.functions.Function1) -> forEach
    63:66:void forEachIndexed(android.view.Menu,kotlin.jvm.functions.Function2) -> forEachIndexed
    29:29:android.view.MenuItem get(android.view.Menu,int) -> get
    79:81:kotlin.sequences.Sequence getChildren(android.view.Menu) -> getChildren
    46:46:int getSize(android.view.Menu) -> getSize
    49:49:boolean isEmpty(android.view.Menu) -> isEmpty
    52:52:boolean isNotEmpty(android.view.Menu) -> isNotEmpty
    70:75:java.util.Iterator iterator(android.view.Menu) -> iterator
    43:43:void minusAssign(android.view.Menu,android.view.MenuItem) -> minusAssign
androidx.core.view.MenuKt$children$1 -> androidx.core.view.MenuKt$children$1:
# {"id":"sourceFile","fileName":"Menu.kt"}
    79:79:void <init>(android.view.Menu) -> <init>
    80:80:java.util.Iterator iterator() -> iterator
androidx.core.view.MenuKt$iterator$1 -> androidx.core.view.MenuKt$iterator$1:
# {"id":"sourceFile","fileName":"Menu.kt"}
    70:70:void <init>(android.view.Menu) -> <init>
    72:72:boolean hasNext() -> hasNext
    70:70:java.lang.Object next() -> next
    73:73:android.view.MenuItem next() -> next
    74:74:void remove() -> remove
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    602:602:void <init>() -> <init>
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    477:477:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    465:465:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    570:570:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    590:590:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    599:599:int getButtonState(android.view.MotionEvent) -> getButtonState
    532:532:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    499:499:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    544:544:int getSource(android.view.MotionEvent) -> getSource
    510:510:float getX(android.view.MotionEvent,int) -> getX
    521:521:float getY(android.view.MotionEvent,int) -> getY
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:410:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    387:388:void onDetachedFromWindow() -> onDetachedFromWindow
    400:401:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:104:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:65:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:109:void <init>(java.lang.Object) -> <init>
    151:152:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:131:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    180:181:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    78:79:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
androidx.core.view.VelocityTrackerCompat -> androidx.core.view.VelocityTrackerCompat:
    52:52:void <init>() -> <init>
    37:37:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    49:49:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    475:4536:void <clinit>() -> <clinit>
    4149:4150:void <init>() -> <init>
    androidx.core.view.ContentInfoCompat $r8$lambda$wxf3s7r4ODqhaNnVVlzx9IRcwjg(androidx.core.view.ContentInfoCompat) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    4381:4381:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1232:1238:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1326:1333:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    4030:4033:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    4103:4118:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    2080:2088:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1894:1902:void bindTempDetach() -> bindTempDetach
    544:544:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    557:557:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3899:3902:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1784:1784:int combineMeasuredStates(int,int) -> combineMeasuredStates
    3690:3699:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3642:3651:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2661:2662:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2582:2592:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1931:1948:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    3474:3475:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    3517:3518:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    3250:3251:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    3444:3450:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    3219:3220:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    3376:3383:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    3412:3419:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1908:1925:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    4179:4182:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4171:4174:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1420:1423:void enableAccessibleClickableSpanSupport(android.view.View) -> enableAccessibleClickableSpanSupport
    937:942:void ensureAccessibilityDelegateCompat(android.view.View) -> ensureAccessibilityDelegateCompat
    4079:4080:int generateViewId() -> generateViewId
    926:933:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    946:949:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    957:978:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1797:1798:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1450:1456:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    4297:4297:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1362:1368:java.util.List getActionList(android.view.View) -> getActionList
    1470:1470:float getAlpha(android.view.View) -> getAlpha
    1276:1296:int getAvailableActionIdFromResources(android.view.View,java.lang.CharSequence) -> getAvailableActionIdFromResources
    3006:3007:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    3053:3054:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3734:3735:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3856:3857:android.view.Display getDisplay(android.view.View) -> getDisplay
    2364:2365:float getElevation(android.view.View) -> getElevation
    496:505:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2846:2849:androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View) -> getFallback
    2495:2496:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1105:1106:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    786:789:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1545:1546:int getLabelFor(android.view.View) -> getLabelFor
    1534:1534:int getLayerType(android.view.View) -> getLayerType
    1618:1619:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1997:1997:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1755:1755:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1769:1769:int getMeasuredState(android.view.View) -> getMeasuredState
    1738:1738:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    2046:2047:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2010:2011:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3921:3924:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    2803:2806:java.lang.String[] getOnReceiveContentMimeTypes(android.view.View) -> getOnReceiveContentMimeTypes
    575:575:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1864:1865:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1848:1849:int getPaddingStart(android.view.View) -> getPaddingStart
    1657:1658:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2245:2245:float getPivotX(android.view.View) -> getPivotX
    2274:2274:float getPivotY(android.view.View) -> getPivotY
    2639:2640:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    2298:2298:float getRotation(android.view.View) -> getRotation
    2306:2306:float getRotationX(android.view.View) -> getRotationX
    2314:2314:float getRotationY(android.view.View) -> getRotationY
    2322:2322:float getScaleX(android.view.View) -> getScaleX
    2330:2330:float getScaleY(android.view.View) -> getScaleY
    3826:3827:int getScrollIndicators(android.view.View) -> getScrollIndicators
    1405:1405:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2623:2626:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    2421:2422:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1961:1961:float getTranslationX(android.view.View) -> getTranslationX
    1975:1975:float getTranslationY(android.view.View) -> getTranslationY
    2385:2386:float getTranslationZ(android.view.View) -> getTranslationZ
    2676:2687:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    2438:2439:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2338:2338:float getX(android.view.View) -> getX
    2346:2346:float getY(android.view.View) -> getY
    3581:3582:float getZ(android.view.View) -> getZ
    912:912:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    4066:4069:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    3190:3191:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    3335:3340:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3756:3757:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2965:2966:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    991:992:boolean hasTransientState(android.view.View) -> hasTransientState
    4360:4361:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3744:3745:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3976:3979:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1184:1185:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    899:902:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    3539:3540:boolean isInLayout(android.view.View) -> isInLayout
    3947:3950:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    3550:3551:boolean isLaidOut(android.view.View) -> isLaidOut
    3567:3568:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    3132:3133:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1701:1701:boolean isOpaque(android.view.View) -> isOpaque
    2978:2979:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    4222:4223:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2525:2526:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    4014:4017:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    2853:2853:androidx.core.view.ContentInfoCompat lambda$static$0(androidx.core.view.ContentInfoCompat) -> lambda$static$0
    4476:4515:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3659:3687:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3611:3639:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2554:2564:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    666:667:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    698:699:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    634:635:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    4301:4301:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1206:1207:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    2829:2842:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    1020:1025:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1042:1047:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1060:1065:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1083:1088:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1343:1348:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1351:1358:void removeActionWithId(int,android.view.View) -> removeActionWithId
    4130:4143:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    1317:1322:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2449:2454:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1680:1688:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1721:1721:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    4044:4047:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    527:531:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    4227:4227:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    728:733:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4377:4378:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1833:1836:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    4270:4278:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2947:2948:void setActivated(android.view.View,boolean) -> setActivated
    2137:2138:void setAlpha(android.view.View,float) -> setAlpha
    765:768:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2991:2996:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    3023:3042:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    3071:3090:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2470:2488:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3719:3722:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2353:2356:void setElevation(android.view.View,float) -> setElevation
    2511:2512:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    3995:3998:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    1005:1008:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1133:1145:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    830:833:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3961:3964:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1559:1562:void setLabelFor(android.view.View,int) -> setLabelFor
    1595:1604:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1509:1510:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1642:1645:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    3109:3116:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3935:3938:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2534:2537:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    2754:2776:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
    594:595:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1885:1890:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    2261:2262:void setPivotX(android.view.View,float) -> setPivotX
    2290:2291:void setPivotY(android.view.View,float) -> setPivotY
    3837:3841:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    2180:2181:void setRotation(android.view.View,float) -> setRotation
    2194:2195:void setRotationX(android.view.View,float) -> setRotationX
    2208:2209:void setRotationY(android.view.View,float) -> setRotationY
    2931:2932:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    2221:2222:void setScaleX(android.view.View,float) -> setScaleX
    2234:2235:void setScaleY(android.view.View,float) -> setScaleY
    4203:4204:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3774:3777:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3808:3811:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    1386:1389:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
    2608:2611:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
    3876:3879:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2399:2407:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2103:2104:void setTranslationX(android.view.View,float) -> setTranslationX
    2120:2121:void setTranslationY(android.view.View,float) -> setTranslationY
    2374:2377:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4518:4534:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    2714:2715:void setWindowInsetsAnimationCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setWindowInsetsAnimationCallback
    2152:2153:void setX(android.view.View,float) -> setX
    2167:2168:void setY(android.view.View,float) -> setY
    3600:3603:void setZ(android.view.View,float) -> setZ
    3888:3889:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    3154:3155:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    3301:3306:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    4324:4324:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3173:3178:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3318:3323:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3702:3705:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    3909:3912:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$61bc21f98d79c97eb1a56fe34fc0f89325c6bb8a730f1afe13727b4164d83fa4$0 androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$61bc21f98d79c97eb1a56fe34fc0f89325c6bb8a730f1afe13727b4164d83fa4$0.INSTANCE -> b
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$61bc21f98d79c97eb1a56fe34fc0f89325c6bb8a730f1afe13727b4164d83fa4$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$61bc21f98d79c97eb1a56fe34fc0f89325c6bb8a730f1afe13727b4164d83fa4$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ContentInfoCompat androidx.core.view.ViewCompat$$InternalSyntheticLambda$0$61bc21f98d79c97eb1a56fe34fc0f89325c6bb8a730f1afe13727b4164d83fa4$0.onReceiveContent(androidx.core.view.ContentInfoCompat) -> onReceiveContent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    4228:4228:void <init>(int,java.lang.Class,int) -> <init>
    4228:4228:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4233:4233:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4228:4228:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4239:4240:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4228:4228:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4244:4244:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4302:4302:void <init>(int,java.lang.Class,int,int) -> <init>
    4302:4302:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4307:4307:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4302:4302:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4313:4314:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4302:4302:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4318:4318:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4325:4325:void <init>(int,java.lang.Class,int,int) -> <init>
    4325:4325:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4330:4330:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4325:4325:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4336:4337:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4325:4325:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4341:4341:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4382:4382:void <init>(int,java.lang.Class,int) -> <init>
    4382:4382:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4387:4387:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4382:4382:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4393:4394:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4382:4382:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4398:4398:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4539:4541:void <init>() -> <init>
    4567:4572:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4583:4591:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4546:4551:void onGlobalLayout() -> onGlobalLayout
    4557:4558:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4563:4563:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4595:4596:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4576:4579:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4600:4602:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4411:4413:void <init>(int,java.lang.Class,int) -> <init>
    4416:4422:void <init>(int,java.lang.Class,int,int) -> <init>
    4468:4470:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4455:4455:boolean extrasAvailable() -> extrasAvailable
    4451:4451:boolean frameworkAvailable() -> frameworkAvailable
    4439:4447:java.lang.Object get(android.view.View) -> get
    4425:4435:void set(android.view.View,java.lang.Object) -> set
    4459:4459:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
androidx.core.view.ViewCompat$Api15Impl -> androidx.core.view.ViewCompat$Api15Impl:
    5246:5248:void <init>() -> <init>
    5252:5252:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
androidx.core.view.ViewCompat$Api16Impl -> androidx.core.view.ViewCompat$Api16Impl:
    5360:5362:void <init>() -> <init>
    5406:5406:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    5436:5436:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    5396:5396:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    5421:5421:int getMinimumHeight(android.view.View) -> getMinimumHeight
    5416:5416:int getMinimumWidth(android.view.View) -> getMinimumWidth
    5411:5411:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    5426:5426:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    5446:5446:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    5366:5366:boolean hasTransientState(android.view.View) -> hasTransientState
    5441:5441:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    5376:5377:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    5381:5382:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    5386:5387:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    5391:5392:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    5457:5458:void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> removeOnGlobalLayoutListener
    5431:5432:void requestFitSystemWindows(android.view.View) -> requestFitSystemWindows
    5451:5452:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    5371:5372:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    5401:5402:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
androidx.core.view.ViewCompat$Api17Impl -> androidx.core.view.ViewCompat$Api17Impl:
    5298:5300:void <init>() -> <init>
    5309:5309:int generateViewId() -> generateViewId
    5304:5304:android.view.Display getDisplay(android.view.View) -> getDisplay
    5314:5314:int getLabelFor(android.view.View) -> getLabelFor
    5329:5329:int getLayoutDirection(android.view.View) -> getLayoutDirection
    5344:5344:int getPaddingEnd(android.view.View) -> getPaddingEnd
    5339:5339:int getPaddingStart(android.view.View) -> getPaddingStart
    5354:5354:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    5319:5320:void setLabelFor(android.view.View,int) -> setLabelFor
    5324:5325:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    5334:5335:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    5349:5350:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
androidx.core.view.ViewCompat$Api18Impl -> androidx.core.view.ViewCompat$Api18Impl:
    5181:5183:void <init>() -> <init>
    5197:5197:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    5187:5187:boolean isInLayout(android.view.View) -> isInLayout
    5192:5193:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
androidx.core.view.ViewCompat$Api19Impl -> androidx.core.view.ViewCompat$Api19Impl:
    5203:5205:void <init>() -> <init>
    5224:5224:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    5214:5214:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    5209:5209:boolean isLaidOut(android.view.View) -> isLaidOut
    5219:5219:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    5240:5241:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    5229:5230:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    5234:5235:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.ViewCompat$Api20Impl -> androidx.core.view.ViewCompat$Api20Impl:
    5543:5545:void <init>() -> <init>
    5559:5559:android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets) -> dispatchApplyWindowInsets
    5554:5554:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
    5549:5550:void requestApplyInsets(android.view.View) -> requestApplyInsets
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4792:4794:void <init>() -> <init>
    4881:4887:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4806:4812:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    4892:4892:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    4898:4898:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    5001:5001:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    4994:4994:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    4953:4953:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    4958:4958:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    4938:4938:float getElevation(android.view.View) -> getElevation
    4800:4800:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    4943:4943:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    4923:4923:float getTranslationZ(android.view.View) -> getTranslationZ
    4903:4903:float getZ(android.view.View) -> getZ
    4988:4988:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    4933:4933:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    4973:4973:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    4948:4949:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    4963:4964:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    4913:4914:void setElevation(android.view.View,float) -> setElevation
    4968:4969:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    4821:4870:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    4928:4929:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4918:4919:void setTranslationZ(android.view.View,float) -> setTranslationZ
    4908:4909:void setZ(android.view.View,float) -> setZ
    4978:4978:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    4983:4984:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4835:4836:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4841:4867:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    5007:5009:void <init>() -> <init>
    5013:5021:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    5036:5036:int getScrollIndicators(android.view.View) -> getScrollIndicators
    5026:5027:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    5031:5032:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
androidx.core.view.ViewCompat$Api24Impl -> androidx.core.view.ViewCompat$Api24Impl:
    5258:5260:void <init>() -> <init>
    5276:5277:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    5292:5293:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    5287:5288:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    5264:5265:void setPointerIcon(android.view.View,android.view.PointerIcon) -> setPointerIcon
    5271:5271:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    5282:5283:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$Api26Impl -> androidx.core.view.ViewCompat$Api26Impl:
    5097:5099:void <init>() -> <init>
    5150:5151:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    5165:5165:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    5113:5113:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    5160:5160:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    5133:5133:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    5175:5175:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    5123:5123:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    5144:5144:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    5155:5155:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    5103:5104:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    5138:5139:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    5170:5171:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    5128:5129:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    5118:5119:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    5108:5109:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.ViewCompat$Api28Impl:
    5463:5465:void <init>() -> <init>
    5509:5521:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    5475:5475:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    5491:5491:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    5496:5496:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    5528:5538:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    5470:5470:java.lang.Object requireViewById(android.view.View,int) -> requireViewById
    5486:5487:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    5481:5482:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    5501:5502:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$043aaa981f0216defed899305723d2b22ed0f4377efb3c25ba8e1918b6b09ab3$0.f$0 -> a
    void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$043aaa981f0216defed899305723d2b22ed0f4377efb3c25ba8e1918b6b09ab3$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$0$043aaa981f0216defed899305723d2b22ed0f4377efb3c25ba8e1918b6b09ab3$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    5042:5044:void <init>() -> <init>
    5056:5056:android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    5066:5066:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    5050:5052:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    5061:5062:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
androidx.core.view.ViewCompat$Api30Impl -> androidx.core.view.ViewCompat$Api30Impl:
    5072:5074:void <init>() -> <init>
    5091:5091:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    5078:5081:androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View) -> getWindowInsetsController
    5086:5087:void setStateDescription(android.view.View,java.lang.CharSequence) -> setStateDescription
androidx.core.view.ViewCompat$Api31Impl -> androidx.core.view.ViewCompat$Api31Impl:
    2857:2857:void <init>() -> <init>
    2873:2873:java.lang.String[] getReceiveContentMimeTypes(android.view.View) -> getReceiveContentMimeTypes
    2880:2889:androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> performReceiveContent
    2862:2868:void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener) -> setOnReceiveContentListener
androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter -> androidx.core.view.ViewCompat$OnReceiveContentListenerAdapter:
    2900:2902:void <init>(androidx.core.view.OnReceiveContentListener) -> <init>
    2907:2916:android.view.ContentInfo onReceiveContent(android.view.View,android.view.ContentInfo) -> onReceiveContent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4609:4609:void <clinit>() -> <clinit>
    4605:4624:void <init>() -> <init>
    4634:4640:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4644:4658:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4663:4680:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4627:4630:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4722:4732:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4689:4717:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4762:4787:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
    4740:4748:void registerListeningView(android.view.View) -> registerListeningView
    4751:4759:void unregisterListeningView(android.view.View) -> unregisterListeningView
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    68:68:boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    52:52:void <init>() -> <init>
    114:115:int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    181:182:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    157:158:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    75:75:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    130:133:void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    98:99:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    144:149:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewGroupKt -> androidx.core.view.ViewGroupKt:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    35:35:boolean contains(android.view.ViewGroup,android.view.View) -> contains
    54:57:void forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> forEach
    61:64:void forEachIndexed(android.view.ViewGroup,kotlin.jvm.functions.Function2) -> forEachIndexed
    32:32:android.view.View get(android.view.ViewGroup,int) -> get
    81:83:kotlin.sequences.Sequence getChildren(android.view.ViewGroup) -> getChildren
    95:102:kotlin.sequences.Sequence getDescendants(android.view.ViewGroup) -> getDescendants
    44:44:int getSize(android.view.ViewGroup) -> getSize
    47:47:boolean isEmpty(android.view.ViewGroup) -> isEmpty
    50:50:boolean isNotEmpty(android.view.ViewGroup) -> isNotEmpty
    67:72:java.util.Iterator iterator(android.view.ViewGroup) -> iterator
    41:41:void minusAssign(android.view.ViewGroup,android.view.View) -> minusAssign
    38:38:void plusAssign(android.view.ViewGroup,android.view.View) -> plusAssign
    111:112:void setMargins(android.view.ViewGroup$MarginLayoutParams,int) -> setMargins
    126:127:void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMargins
    120:127:void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object) -> updateMargins$default
    142:146:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative
    136:146:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object) -> updateMarginsRelative$default
androidx.core.view.ViewGroupKt$children$1 -> androidx.core.view.ViewGroupKt$children$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    81:81:void <init>(android.view.ViewGroup) -> <init>
    82:82:java.util.Iterator iterator() -> iterator
androidx.core.view.ViewGroupKt$descendants$1 -> androidx.core.view.ViewGroupKt$descendants$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    95:102:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    54:55:void androidx.core.view.ViewGroupKt.forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> invokeSuspend
    54:55:java.lang.Object invokeSuspend(java.lang.Object):96 -> invokeSuspend
    95:101:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
    54:57:void androidx.core.view.ViewGroupKt.forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> invokeSuspend
    54:57:java.lang.Object invokeSuspend(java.lang.Object):96 -> invokeSuspend
    102:102:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewGroupKt$iterator$1 -> androidx.core.view.ViewGroupKt$iterator$1:
# {"id":"sourceFile","fileName":"ViewGroup.kt"}
    67:67:void <init>(android.view.ViewGroup) -> <init>
    69:69:boolean hasNext() -> hasNext
    67:67:java.lang.Object next() -> next
    70:70:android.view.View next() -> next
    71:71:void remove() -> remove
androidx.core.view.ViewKt -> androidx.core.view.ViewKt:
# {"id":"sourceFile","fileName":"View.kt"}
    94:106:void doOnAttach(android.view.View,kotlin.jvm.functions.Function1) -> doOnAttach
    118:130:void doOnDetach(android.view.View,kotlin.jvm.functions.Function1) -> doOnDetach
    66:69:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    38:54:void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    38:54:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1):69 -> doOnLayout
    73:73:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    38:54:void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnNextLayout
    82:82:androidx.core.view.OneShotPreDrawListener doOnPreDraw(android.view.View,kotlin.jvm.functions.Function1) -> doOnPreDraw
    227:230:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    42:43:android.graphics.Bitmap androidx.core.graphics.BitmapKt.applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> drawToBitmap
    42:43:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config):230 -> drawToBitmap
    231:233:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    44:44:android.graphics.Bitmap androidx.core.graphics.BitmapKt.applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> drawToBitmap
    44:44:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config):230 -> drawToBitmap
    228:230:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    226:226:android.graphics.Bitmap drawToBitmap$default(android.view.View,android.graphics.Bitmap$Config,int,java.lang.Object) -> drawToBitmap$default
    405:410:kotlin.sequences.Sequence getAllViews(android.view.View) -> getAllViews
    395:395:kotlin.sequences.Sequence getAncestors(android.view.View) -> getAncestors
    360:360:int getMarginBottom(android.view.View) -> getMarginBottom
    384:385:int getMarginEnd(android.view.View) -> getMarginEnd
    333:333:int getMarginLeft(android.view.View) -> getMarginLeft
    351:351:int getMarginRight(android.view.View) -> getMarginRight
    371:372:int getMarginStart(android.view.View) -> getMarginStart
    342:342:int getMarginTop(android.view.View) -> getMarginTop
    294:294:boolean isGone(android.view.View) -> isGone
    273:273:boolean isInvisible(android.view.View) -> isInvisible
    252:252:boolean isVisible(android.view.View) -> isVisible
    185:187:java.lang.Runnable postDelayed(android.view.View,long,kotlin.jvm.functions.Function0) -> postDelayed
    207:209:java.lang.Runnable postOnAnimationDelayed(android.view.View,long,kotlin.jvm.functions.Function0) -> postOnAnimationDelayed
    296:297:void setGone(android.view.View,boolean) -> setGone
    275:276:void setInvisible(android.view.View,boolean) -> setInvisible
    169:170:void setPadding(android.view.View,int) -> setPadding
    254:255:void setVisible(android.view.View,boolean) -> setVisible
    307:307:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    321:324:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    321:324:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):307 -> updateLayoutParams
    308:308:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    321:321:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    321:321:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):307 -> updateLayoutParams
    321:321:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParamsTyped
    160:160:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePadding
    160:160:void updatePadding(android.view.View,int,int,int,int):160 -> updatePadding
    161:161:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePadding
    161:161:void updatePadding(android.view.View,int,int,int,int):161 -> updatePadding
    154:161:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePadding$default
    145:145:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePaddingRelative
    145:145:void updatePaddingRelative(android.view.View,int,int,int,int):145 -> updatePaddingRelative
    146:146:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePaddingRelative
    146:146:void updatePaddingRelative(android.view.View,int,int,int,int):146 -> updatePaddingRelative
    139:146:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePaddingRelative$default
androidx.core.view.ViewKt$allViews$1 -> androidx.core.view.ViewKt$allViews$1:
# {"id":"sourceFile","fileName":"View.kt"}
    405:410:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
androidx.core.view.ViewKt$ancestors$1 -> androidx.core.view.ViewKt$ancestors$1:
# {"id":"sourceFile","fileName":"View.kt"}
    395:395:android.view.ViewParent invoke(android.view.ViewParent) -> invoke
    395:395:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.view.ViewKt$doOnAttach$1 -> androidx.core.view.ViewKt$doOnAttach$1:
# {"id":"sourceFile","fileName":"View.kt"}
    97:97:void <init>(android.view.View,kotlin.jvm.functions.Function1) -> <init>
    99:101:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    103:103:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewKt$doOnDetach$1 -> androidx.core.view.ViewKt$doOnDetach$1:
# {"id":"sourceFile","fileName":"View.kt"}
    121:121:void <init>(android.view.View,kotlin.jvm.functions.Function1) -> <init>
    122:122:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    125:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1 -> androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1:
# {"id":"sourceFile","fileName":"View.kt"}
    38:38:void androidx.core.view.ViewKt$doOnNextLayout$1.<init>(kotlin.jvm.functions.Function1) -> <init>
    38:38:void <init>(kotlin.jvm.functions.Function1):38 -> <init>
    50:50:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    50:50:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):50 -> onLayoutChange
    51:51:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    51:51:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):51 -> onLayoutChange
    412:413:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    52:52:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    52:52:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):52 -> onLayoutChange
androidx.core.view.ViewKt$doOnNextLayout$1 -> androidx.core.view.ViewKt$doOnNextLayout$1:
# {"id":"sourceFile","fileName":"View.kt"}
    38:38:void <init>(kotlin.jvm.functions.Function1) -> <init>
    50:52:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.core.view.ViewKt$doOnPreDraw$1 -> androidx.core.view.ViewKt$doOnPreDraw$1:
# {"id":"sourceFile","fileName":"View.kt"}
    82:82:void run() -> run
androidx.core.view.ViewKt$postDelayed$runnable$1 -> androidx.core.view.ViewKt$postDelayed$runnable$1:
# {"id":"sourceFile","fileName":"View.kt"}
    185:185:void run() -> run
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1 -> androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1:
# {"id":"sourceFile","fileName":"View.kt"}
    207:207:void run() -> run
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    41:41:void <init>() -> <init>
    498:504:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    492:495:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    178:179:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    132:134:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    160:162:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    102:103:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    85:85:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    114:115:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:39:void <init>(android.view.View) -> <init>
    138:141:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    153:156:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    464:467:void cancel() -> cancel
    237:240:long getDuration() -> getDuration
    267:272:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    302:305:long getStartDelay() -> getStartDelay
    318:321:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    333:336:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    348:351:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    363:366:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    378:381:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    393:396:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    408:411:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    423:426:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    438:441:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    453:456:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    123:126:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:257:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:737:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    741:761:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:289:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:790:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:647:void start() -> start
    168:171:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    538:541:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    183:186:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    553:556:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    589:594:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    570:575:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    216:224:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    680:688:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    708:716:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    478:481:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    493:496:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    508:511:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    523:526:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    608:613:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    627:632:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:746:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:751:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:756:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:784:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:47:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    101:109:void onAnimationCancel(android.view.View) -> onAnimationCancel
    75:97:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:70:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    41:41:void onAnimationEnd(android.view.View) -> onAnimationEnd
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    68:68:void <init>() -> <init>
    135:138:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window,android.view.View) -> getInsetsController
    88:96:android.view.View requireViewById(android.view.Window,int) -> requireViewById
    117:122:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Impl16 -> androidx.core.view.WindowCompat$Impl16:
    143:143:void <init>() -> <init>
    146:155:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowCompat$Impl30 -> androidx.core.view.WindowCompat$Impl30:
    159:159:void <init>() -> <init>
    166:171:androidx.core.view.WindowInsetsControllerCompat getInsetsController(android.view.Window) -> getInsetsController
    162:163:void setDecorFitsSystemWindows(android.view.Window,boolean) -> setDecorFitsSystemWindows
androidx.core.view.WindowInsetsAnimationCompat -> androidx.core.view.WindowInsetsAnimationCompat:
    74:82:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    86:90:void <init>(android.view.WindowInsetsAnimation) -> <init>
    194:194:float getAlpha() -> getAlpha
    168:168:long getDurationMillis() -> getDurationMillis
    121:121:float getFraction() -> getFraction
    148:148:float getInterpolatedFraction() -> getInterpolatedFraction
    160:160:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    97:97:int getTypeMask() -> getTypeMask
    209:210:void setAlpha(float) -> setAlpha
    524:530:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    184:185:void setFraction(float) -> setFraction
    329:329:androidx.core.view.WindowInsetsAnimationCompat toWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> toWindowInsetsAnimationCompat
androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat -> androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat:
    220:223:void <init>(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> <init>
    226:229:void <init>(android.view.WindowInsetsAnimation$Bounds) -> <init>
    252:252:androidx.core.graphics.Insets getLowerBound() -> getLowerBound
    276:276:androidx.core.graphics.Insets getUpperBound() -> getUpperBound
    292:297:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat inset(androidx.core.graphics.Insets) -> inset
    312:312:android.view.WindowInsetsAnimation$Bounds toBounds() -> toBounds
    322:322:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat toBoundsCompat(android.view.WindowInsetsAnimation$Bounds) -> toBoundsCompat
    303:303:java.lang.String toString() -> toString
androidx.core.view.WindowInsetsAnimationCompat$Callback -> androidx.core.view.WindowInsetsAnimationCompat$Callback:
    371:373:void <init>(int) -> <init>
    396:396:int getDispatchMode() -> getDispatchMode
    520:520:void onEnd(androidx.core.view.WindowInsetsAnimationCompat) -> onEnd
    441:441:void onPrepare(androidx.core.view.WindowInsetsAnimationCompat) -> onPrepare
    488:488:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat onStart(androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> onStart
androidx.core.view.WindowInsetsAnimationCompat$Impl -> androidx.core.view.WindowInsetsAnimationCompat$Impl:
    541:545:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    572:572:float getAlpha() -> getAlpha
    568:568:long getDurationMillis() -> getDurationMillis
    552:552:float getFraction() -> getFraction
    556:559:float getInterpolatedFraction() -> getInterpolatedFraction
    564:564:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    548:548:int getTypeMask() -> getTypeMask
    580:581:void setAlpha(float) -> setAlpha
    576:577:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl21 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21:
    589:590:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    648:655:int buildAnimationMask(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat) -> buildAnimationMask
    628:642:androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat computeAnimationBounds(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int) -> computeAnimationBounds
    621:621:android.view.View$OnApplyWindowInsetsListener createProxyListener(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> createProxyListener
    888:902:void dispatchOnEnd(android.view.View,androidx.core.view.WindowInsetsAnimationCompat) -> dispatchOnEnd
    827:845:void dispatchOnPrepare(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,android.view.WindowInsets,boolean) -> dispatchOnPrepare
    869:884:void dispatchOnProgress(android.view.View,androidx.core.view.WindowInsetsCompat,java.util.List) -> dispatchOnProgress
    850:864:void dispatchOnStart(android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> dispatchOnStart
    819:822:android.view.WindowInsets forwardToViewIfNeeded(android.view.View,android.view.WindowInsets) -> forwardToViewIfNeeded
    906:912:androidx.core.view.WindowInsetsAnimationCompat$Callback getCallback(android.view.View) -> getCallback
    662:682:androidx.core.view.WindowInsetsCompat interpolateInsets(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,float,int) -> interpolateInsets
    595:616:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener:
    699:707:void <init>(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    712:807:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$1:
    772:772:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat,int,android.view.View) -> <init>
    775:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$2:
    786:786:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,androidx.core.view.WindowInsetsAnimationCompat,android.view.View) -> <init>
    790:792:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3 -> androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener$3:
    798:798:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Impl21$Impl21OnApplyWindowInsetsListener,android.view.View,androidx.core.view.WindowInsetsAnimationCompat,androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat,android.animation.ValueAnimator) -> <init>
    801:803:void run() -> run
androidx.core.view.WindowInsetsAnimationCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationCompat$Impl30:
    923:925:void <init>(android.view.WindowInsetsAnimation) -> <init>
    928:929:void <init>(int,android.view.animation.Interpolator,long) -> <init>
    1043:1044:android.view.WindowInsetsAnimation$Bounds createPlatformBounds(androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat) -> createPlatformBounds
    944:944:long getDurationMillis() -> getDurationMillis
    949:949:float getFraction() -> getFraction
    1054:1054:androidx.core.graphics.Insets getHigherBounds(android.view.WindowInsetsAnimation$Bounds) -> getHigherBounds
    959:959:float getInterpolatedFraction() -> getInterpolatedFraction
    939:939:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1049:1049:androidx.core.graphics.Insets getLowerBounds(android.view.WindowInsetsAnimation$Bounds) -> getLowerBounds
    933:933:int getTypeMask() -> getTypeMask
    1036:1038:void setCallback(android.view.View,androidx.core.view.WindowInsetsAnimationCompat$Callback) -> setCallback
    954:955:void setFraction(float) -> setFraction
androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback -> androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback:
    968:974:void <init>(androidx.core.view.WindowInsetsAnimationCompat$Callback) -> <init>
    980:986:androidx.core.view.WindowInsetsAnimationCompat getWindowInsetsAnimationCompat(android.view.WindowInsetsAnimation) -> getWindowInsetsAnimationCompat
    1029:1031:void onEnd(android.view.WindowInsetsAnimation) -> onEnd
    991:992:void onPrepare(android.view.WindowInsetsAnimation) -> onPrepare
    1008:1024:android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List) -> onProgress
    999:1001:android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds) -> onStart
androidx.core.view.WindowInsetsAnimationControllerCompat -> androidx.core.view.WindowInsetsAnimationControllerCompat:
    46:53:void <init>() -> <init>
    57:59:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    199:200:void finish(boolean) -> finish
    134:134:float getCurrentAlpha() -> getCurrentAlpha
    125:125:float getCurrentFraction() -> getCurrentFraction
    110:110:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    76:76:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    95:95:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    142:142:int getTypes() -> getTypes
    235:235:boolean isCancelled() -> isCancelled
    223:223:boolean isFinished() -> isFinished
    213:213:boolean isReady() -> isReady
    184:185:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl:
    239:241:void <init>() -> <init>
    278:278:void finish(boolean) -> finish
    264:264:float getCurrentAlpha() -> getCurrentAlpha
    260:260:float getCurrentFraction() -> getCurrentFraction
    255:255:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    245:245:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    250:250:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    269:269:int getTypes() -> getTypes
    289:289:boolean isCancelled() -> isCancelled
    285:285:boolean isFinished() -> isFinished
    281:281:boolean isReady() -> isReady
    275:275:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30 -> androidx.core.view.WindowInsetsAnimationControllerCompat$Impl30:
    298:300:void <init>(android.view.WindowInsetsAnimationController) -> <init>
    345:346:void finish(boolean) -> finish
    327:327:float getCurrentAlpha() -> getCurrentAlpha
    322:322:float getCurrentFraction() -> getCurrentFraction
    317:317:androidx.core.graphics.Insets getCurrentInsets() -> getCurrentInsets
    305:305:androidx.core.graphics.Insets getHiddenStateInsets() -> getHiddenStateInsets
    311:311:androidx.core.graphics.Insets getShownStateInsets() -> getShownStateInsets
    332:332:int getTypes() -> getTypes
    360:360:boolean isCancelled() -> isCancelled
    355:355:boolean isFinished() -> isFinished
    350:350:boolean isReady() -> isReady
    337:341:void setInsetsAndAlpha(androidx.core.graphics.Insets,float,float) -> setInsetsAndAlpha
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    79:84:void <clinit>() -> <clinit>
    89:103:void <init>(android.view.WindowInsets) -> <init>
    110:132:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    507:507:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    478:478:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    319:319:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2115:2116:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    719:726:boolean equals(java.lang.Object) -> equals
    491:491:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    669:669:androidx.core.graphics.Insets getInsets(int) -> getInsets
    697:697:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    567:567:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    442:442:int getStableInsetBottom() -> getStableInsetBottom
    402:402:int getStableInsetLeft() -> getStableInsetLeft
    422:422:int getStableInsetRight() -> getStableInsetRight
    382:382:int getStableInsetTop() -> getStableInsetTop
    550:550:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    607:607:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    240:240:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    192:192:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    224:224:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    208:208:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    527:527:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    586:586:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    268:270:boolean hasInsets() -> hasInsets
    462:462:boolean hasStableInsets() -> hasStableInsets
    257:257:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    731:731:int hashCode() -> hashCode
    627:627:androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets) -> inset
    652:652:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1338:1345:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    287:287:boolean isConsumed() -> isConsumed
    303:303:boolean isRound() -> isRound
    714:714:boolean isVisible(int) -> isVisible
    340:342:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    361:363:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    1707:1708:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2111:2112:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2107:2108:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1805:1806:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    742:742:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    149:149:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    169:176:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder:
    2134:2145:void <clinit>() -> <clinit>
    2123:2125:void <init>() -> <init>
    2151:2177:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1400:1410:void <init>() -> <init>
    1417:1427:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1614:1614:androidx.core.view.WindowInsetsCompat build() -> build
    1603:1604:androidx.core.view.WindowInsetsCompat$Builder setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    1525:1526:androidx.core.view.WindowInsetsCompat$Builder setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1551:1552:androidx.core.view.WindowInsetsCompat$Builder setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets) -> setInsetsIgnoringVisibility
    1488:1489:androidx.core.view.WindowInsetsCompat$Builder setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1588:1589:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1463:1464:androidx.core.view.WindowInsetsCompat$Builder setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1443:1444:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1507:1508:androidx.core.view.WindowInsetsCompat$Builder setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
    1565:1566:androidx.core.view.WindowInsetsCompat$Builder setVisible(int,boolean) -> setVisible
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1624:1625:void <init>() -> <init>
    1627:1629:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1673:1697:void applyInsetTypes() -> applyInsetTypes
    1701:1702:androidx.core.view.WindowInsetsCompat build() -> build
    1641:1641:void setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    1645:1654:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1657:1663:void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets) -> setInsetsIgnoringVisibility
    1635:1635:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1639:1639:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1633:1633:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1631:1631:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1637:1637:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
    1665:1665:void setVisible(int,boolean) -> setVisible
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1713:1716:void <clinit>() -> <clinit>
    1721:1723:void <init>() -> <init>
    1726:1728:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1746:1751:androidx.core.view.WindowInsetsCompat build() -> build
    1762:1800:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1740:1741:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1732:1736:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1813:1815:void <init>() -> <init>
    1818:1823:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1858:1862:androidx.core.view.WindowInsetsCompat build() -> build
    1852:1853:void setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    1837:1838:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1847:1848:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1832:1833:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1827:1828:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1842:1843:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1869:1870:void <init>() -> <init>
    1873:1874:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1878:1882:void setInsets(int,androidx.core.graphics.Insets) -> setInsets
    1886:1890:void setInsetsIgnoringVisibility(int,androidx.core.graphics.Insets) -> setInsetsIgnoringVisibility
    1894:1895:void setVisible(int,boolean) -> setVisible
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    748:752:void <clinit>() -> <clinit>
    756:758:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    785:785:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    775:775:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    770:770:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    865:865:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    868:868:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    841:848:boolean equals(java.lang.Object) -> equals
    780:780:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    823:823:androidx.core.graphics.Insets getInsets(int) -> getInsets
    828:831:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    807:807:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    795:795:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    801:801:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    790:790:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    813:813:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    854:855:int hashCode() -> hashCode
    818:818:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    765:765:boolean isConsumed() -> isConsumed
    761:761:boolean isRound() -> isRound
    835:835:boolean isVisible(int) -> isVisible
    871:871:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    862:862:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    859:859:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    874:874:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    880:880:void <clinit>() -> <clinit>
    893:901:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    904:905:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1112:1117:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1087:1089:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1188:1190:boolean equals(java.lang.Object) -> equals
    915:915:androidx.core.graphics.Insets getInsets(int) -> getInsets
    941:948:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    954:1043:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    921:921:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1103:1106:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1065:1072:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1127:1160:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    1079:1082:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    909:909:boolean isRound() -> isRound
    1048:1058:boolean isTypeVisible(int) -> isTypeVisible
    927:935:boolean isVisible(int) -> isVisible
    1172:1184:void loadReflectionField() -> loadReflectionField
    1165:1166:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1098:1099:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1093:1094:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1196:1200:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1196:1205:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1215:1215:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1221:1221:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1227:1234:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1209:1209:boolean isConsumed() -> isConsumed
    1239:1240:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1247:1248:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1251:1252:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1263:1263:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1268:1273:boolean equals(java.lang.Object) -> equals
    1257:1257:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1278:1278:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1285:1291:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1285:1295:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1309:1313:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1300:1303:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1319:1322:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    1328:1328:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    1334:1334:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1351:1351:void <clinit>() -> <clinit>
    1354:1355:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1358:1359:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    1388:1388:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1364:1365:androidx.core.graphics.Insets getInsets(int) -> getInsets
    1372:1373:androidx.core.graphics.Insets getInsetsIgnoringVisibility(int) -> getInsetsIgnoringVisibility
    1379:1379:boolean isVisible(int) -> isVisible
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    1919:1919:void <init>() -> <init>
    2023:2023:int all() -> all
    1942:1942:int captionBar() -> captionBar
    2003:2003:int displayCutout() -> displayCutout
    1950:1950:int ime() -> ime
    2027:2047:int indexOf(int) -> indexOf
    1980:1980:int mandatorySystemGestures() -> mandatorySystemGestures
    1934:1934:int navigationBars() -> navigationBars
    1926:1926:int statusBars() -> statusBars
    2012:2012:int systemBars() -> systemBars
    1972:1972:int systemGestures() -> systemGestures
    1988:1988:int tappableElement() -> tappableElement
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2063:2063:void <init>() -> <init>
    2071:2102:int toPlatformType(int) -> toPlatformType
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.WindowInsetsControllerCompat:
    88:94:void <init>(android.view.WindowInsetsController) -> <init>
    96:108:void <init>(android.view.Window,android.view.View) -> <init>
    289:290:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    250:255:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    275:275:int getSystemBarsBehavior() -> getSystemBarsBehavior
    162:163:void hide(int) -> hide
    199:199:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    175:175:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    304:305:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    211:212:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    187:188:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    264:265:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    148:149:void show(int) -> show
    122:122:androidx.core.view.WindowInsetsControllerCompat toWindowInsetsControllerCompat(android.view.WindowInsetsController) -> toWindowInsetsControllerCompat
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.WindowInsetsControllerCompat$Impl:
    341:343:void <init>() -> <init>
    379:379:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    354:354:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    360:360:int getSystemBarsBehavior() -> getSystemBarsBehavior
    349:349:void hide(int) -> hide
    371:371:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    364:364:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    384:384:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    375:375:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    368:368:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    357:357:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    346:346:void show(int) -> show
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.WindowInsetsControllerCompat$Impl20:
    396:399:void <init>(android.view.Window,android.view.View) -> <init>
    537:537:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    509:509:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    531:531:int getSystemBarsBehavior() -> getSystemBarsBehavior
    458:465:void hide(int) -> hide
    468:481:void hideForType(int) -> hideForType
    543:543:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    513:527:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    484:488:void setSystemUiFlag(int) -> setSystemUiFlag
    498:499:void setWindowFlag(int) -> setWindowFlag
    403:410:void show(int) -> show
    413:454:void showForType(int) -> showForType
    491:495:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
    502:503:void unsetWindowFlag(int) -> unsetWindowFlag
androidx.core.view.WindowInsetsControllerCompat$Impl20$1 -> androidx.core.view.WindowInsetsControllerCompat$Impl20$1:
    442:442:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl20,android.view.View) -> <init>
    445:450:void run() -> run
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.WindowInsetsControllerCompat$Impl23:
    550:551:void <init>(android.view.Window,android.view.View) -> <init>
    555:555:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    561:568:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.WindowInsetsControllerCompat$Impl26:
    575:576:void <init>(android.view.Window,android.view.View) -> <init>
    580:580:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    586:593:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.WindowInsetsControllerCompat$Impl30:
    609:611:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    601:617:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat) -> <init>
    738:758:void addOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> addOnControllableInsetsChangedListener
    677:708:void controlWindowInsetsAnimation(int,long,android.view.animation.Interpolator,android.os.CancellationSignal,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> controlWindowInsetsAnimation
    730:730:int getSystemBarsBehavior() -> getSystemBarsBehavior
    626:627:void hide(int) -> hide
    654:654:boolean isAppearanceLightNavigationBars() -> isAppearanceLightNavigationBars
    631:631:boolean isAppearanceLightStatusBars() -> isAppearanceLightStatusBars
    765:769:void removeOnControllableInsetsChangedListener(androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> removeOnControllableInsetsChangedListener
    660:669:void setAppearanceLightNavigationBars(boolean) -> setAppearanceLightNavigationBars
    637:650:void setAppearanceLightStatusBars(boolean) -> setAppearanceLightStatusBars
    718:719:void setSystemBarsBehavior(int) -> setSystemBarsBehavior
    621:622:void show(int) -> show
    772:776:void unsetSystemUiFlag(int) -> unsetSystemUiFlag
androidx.core.view.WindowInsetsControllerCompat$Impl30$1 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$1:
    678:680:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsAnimationControlListenerCompat) -> <init>
    699:700:void onCancelled(android.view.WindowInsetsAnimationController) -> onCancelled
    693:694:void onFinished(android.view.WindowInsetsAnimationController) -> onFinished
    685:688:void onReady(android.view.WindowInsetsAnimationController,int) -> onReady
androidx.core.view.WindowInsetsControllerCompat$Impl30$2 -> androidx.core.view.WindowInsetsControllerCompat$Impl30$2:
    744:744:void <init>(androidx.core.view.WindowInsetsControllerCompat$Impl30,androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener) -> <init>
    750:754:void onControllableInsetsChanged(android.view.WindowInsetsController,int) -> onControllableInsetsChanged
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    245:247:void <init>() -> <init>
    274:275:void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    309:309:androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    405:406:int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
    343:344:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    369:370:int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    288:288:androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    258:258:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    394:397:void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    322:325:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    358:361:void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    278:278:void <init>() -> <init>
    47:50:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> addAccessibilityStateChangeListener
    168:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    143:143:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    120:120:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    156:156:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    68:71:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> removeAccessibilityStateChangeListener
    187:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    240:240:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper:
    81:83:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    92:100:boolean equals(java.lang.Object) -> equals
    87:87:int hashCode() -> hashCode
    105:106:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    204:206:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    215:223:boolean equals(java.lang.Object) -> equals
    210:210:int hashCode() -> hashCode
    228:229:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1671:1671:void <clinit>() -> <clinit>
    1250:1698:void <init>(java.lang.Object) -> <init>
    1250:1702:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1997:1998:void addAction(int) -> addAction
    2030:2033:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1909:1910:void addChild(android.view.View) -> addChild
    1927:1930:void addChild(android.view.View,int) -> addChild
    2775:2779:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2704:2719:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    3332:3333:boolean canOpenPopup() -> canOpenPopup
    2766:2772:void clearExtrasSpans() -> clearExtrasSpans
    4082:4105:boolean equals(java.lang.Object) -> equals
    2001:2010:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    2144:2151:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    3379:3385:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1833:1834:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1855:1856:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    3074:3087:java.util.List getActionList() -> getActionList
    4186:4264:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1982:1982:int getActions() -> getActions
    4180:4182:boolean getBooleanProperty(int) -> getBooleanProperty
    2227:2228:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2259:2260:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1894:1894:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1877:1877:int getChildCount() -> getChildCount
    2642:2642:java.lang.CharSequence getClassName() -> getClassName
    2741:2745:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2989:2995:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    3022:3028:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2802:2802:java.lang.CharSequence getContentDescription() -> getContentDescription
    2958:2959:int getDrawingOrder() -> getDrawingOrder
    3212:3213:java.lang.CharSequence getError() -> getError
    3405:3406:android.os.Bundle getExtras() -> getExtras
    3158:3161:java.lang.CharSequence getHintText() -> getHintText
    1728:1728:java.lang.Object getInfo() -> getInfo
    3418:3419:int getInputType() -> getInputType
    3263:3264:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    3319:3320:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2921:2922:int getLiveRegion() -> getLiveRegion
    3472:3473:int getMaxTextLength() -> getMaxTextLength
    2123:2124:int getMovementGranularities() -> getMovementGranularities
    2722:2727:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2618:2618:java.lang.CharSequence getPackageName() -> getPackageName
    3819:3822:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    2165:2165:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    3037:3043:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    3989:3990:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2732:2732:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2812:2815:java.lang.CharSequence getStateDescription() -> getStateDescription
    2666:2680:java.lang.CharSequence getText() -> getText
    3517:3518:int getTextSelectionEnd() -> getTextSelectionEnd
    3504:3505:int getTextSelectionStart() -> getTextSelectionStart
    3763:3766:java.lang.CharSequence getTooltipText() -> getTooltipText
    4043:4049:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo() -> getTouchDelegateInfo
    3599:3600:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    3534:3535:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2895:2896:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3660:3661:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1868:1868:int getWindowId() -> getWindowId
    2762:2762:boolean hasSpans() -> hasSpans
    4077:4077:int hashCode() -> hashCode
    2750:2758:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2410:2411:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2283:2283:boolean isCheckable() -> isCheckable
    2307:2307:boolean isChecked() -> isChecked
    2465:2465:boolean isClickable() -> isClickable
    3115:3116:boolean isContentInvalid() -> isContentInvalid
    3128:3129:boolean isContextClickable() -> isContextClickable
    3673:3674:boolean isDismissable() -> isDismissable
    3702:3703:boolean isEditable() -> isEditable
    2513:2513:boolean isEnabled() -> isEnabled
    2331:2331:boolean isFocusable() -> isFocusable
    2355:2355:boolean isFocused() -> isFocused
    3909:3914:boolean isHeading() -> isHeading
    2588:2589:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2489:2489:boolean isLongClickable() -> isLongClickable
    3733:3734:boolean isMultiLine() -> isMultiLine
    2537:2537:boolean isPassword() -> isPassword
    3838:3841:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2561:2561:boolean isScrollable() -> isScrollable
    2441:2441:boolean isSelected() -> isSelected
    3872:3875:boolean isShowingHintText() -> isShowingHintText
    3942:3945:boolean isTextEntryKey() -> isTextEntryKey
    2379:2380:boolean isVisibleToUser() -> isVisibleToUser
    1739:1739:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1753:1755:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1767:1767:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1778:1778:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2075:2075:boolean performAction(int) -> performAction
    2092:2093:boolean performAction(int,android.os.Bundle) -> performAction
    2862:2863:void recycle() -> recycle
    3977:3978:boolean refresh() -> refresh
    2055:2056:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1947:1948:boolean removeChild(android.view.View) -> removeChild
    1965:1966:boolean removeChild(android.view.View,int) -> removeChild
    2782:2794:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2430:2433:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4170:4177:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2250:2251:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2274:2275:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3350:3353:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2298:2299:void setCheckable(boolean) -> setCheckable
    2322:2323:void setChecked(boolean) -> setChecked
    2657:2658:void setClassName(java.lang.CharSequence) -> setClassName
    2480:2481:void setClickable(boolean) -> setClickable
    2999:3005:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3008:3013:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2832:2833:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3103:3106:void setContentInvalid(boolean) -> setContentInvalid
    3147:3150:void setContextClickable(boolean) -> setContextClickable
    3691:3694:void setDismissable(boolean) -> setDismissable
    2977:2980:void setDrawingOrder(int) -> setDrawingOrder
    3722:3725:void setEditable(boolean) -> setEditable
    2528:2529:void setEnabled(boolean) -> setEnabled
    3201:3204:void setError(java.lang.CharSequence) -> setError
    2346:2347:void setFocusable(boolean) -> setFocusable
    2370:2371:void setFocused(boolean) -> setFocused
    3929:3934:void setHeading(boolean) -> setHeading
    3180:3185:void setHintText(java.lang.CharSequence) -> setHintText
    2607:2610:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    3439:3442:void setInputType(int) -> setInputType
    3226:3229:void setLabelFor(android.view.View) -> setLabelFor
    3246:3249:void setLabelFor(android.view.View,int) -> setLabelFor
    3277:3280:void setLabeledBy(android.view.View) -> setLabeledBy
    3302:3305:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2941:2944:void setLiveRegion(int) -> setLiveRegion
    2504:2505:void setLongClickable(boolean) -> setLongClickable
    3460:3463:void setMaxTextLength(int) -> setMaxTextLength
    2112:2115:void setMovementGranularities(int) -> setMovementGranularities
    3751:3754:void setMultiLine(boolean) -> setMultiLine
    2633:2634:void setPackageName(java.lang.CharSequence) -> setPackageName
    3805:3810:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2180:2183:void setParent(android.view.View) -> setParent
    2207:2212:void setParent(android.view.View,int) -> setParent
    2552:2553:void setPassword(boolean) -> setPassword
    3057:3060:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    4021:4024:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3857:3862:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2576:2577:void setScrollable(boolean) -> setScrollable
    2456:2457:void setSelected(boolean) -> setSelected
    3892:3897:void setShowingHintText(boolean) -> setShowingHintText
    1787:1790:void setSource(android.view.View) -> setSource
    1814:1819:void setSource(android.view.View,int) -> setSource
    2847:2852:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    2696:2697:void setText(java.lang.CharSequence) -> setText
    3960:3965:void setTextEntryKey(boolean) -> setTextEntryKey
    3493:3496:void setTextSelection(int,int) -> setTextSelection
    3785:3790:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    4070:4073:void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat) -> setTouchDelegateInfo
    3621:3624:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3647:3650:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    3556:3559:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3583:3586:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2877:2880:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    2399:2402:void setVisibleToUser(boolean) -> setVisibleToUser
    4112:4166:java.lang.String toString() -> toString
    1718:1718:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1711:1711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    1681:1684:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    105:589:void <clinit>() -> <clinit>
    609:610:void <init>(int,java.lang.CharSequence) -> <init>
    623:624:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    627:628:void <init>(java.lang.Object) -> <init>
    632:633:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    637:646:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    709:709:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    720:735:boolean equals(java.lang.Object) -> equals
    654:655:int getId() -> getId
    668:669:java.lang.CharSequence getLabel() -> getLabel
    715:715:int hashCode() -> hashCode
    684:700:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    809:811:void <init>(java.lang.Object) -> <init>
    819:820:int getColumnCount() -> getColumnCount
    832:833:int getRowCount() -> getRowCount
    863:864:int getSelectionMode() -> getSelectionMode
    845:846:boolean isHierarchical() -> isHierarchical
    779:780:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    801:802:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    933:935:void <init>(java.lang.Object) -> <init>
    943:944:int getColumnIndex() -> getColumnIndex
    956:957:int getColumnSpan() -> getColumnSpan
    969:970:int getRowIndex() -> getRowIndex
    982:983:int getRowSpan() -> getRowSpan
    999:1000:boolean isHeading() -> isHeading
    1012:1013:boolean isSelected() -> isSelected
    900:901:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    925:926:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    1051:1053:void <init>(java.lang.Object) -> <init>
    1061:1062:float getCurrent() -> getCurrent
    1074:1075:float getMax() -> getMax
    1087:1088:float getMin() -> getMin
    1104:1105:int getType() -> getType
    1041:1043:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat:
    1123:1129:void <init>(java.util.Map) -> <init>
    1131:1133:void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo) -> <init>
    1165:1168:android.graphics.Region getRegionAt(int) -> getRegionAt
    1146:1149:int getRegionCount() -> getRegionCount
    1193:1199:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region) -> getTargetForRegion
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    119:129:void <init>() -> <init>
    137:139:void <init>(java.lang.Object) -> <init>
    248:248:void addExtraDataToAccessibilityNodeInfo(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
    172:172:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    209:209:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    225:225:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    145:145:java.lang.Object getProvider() -> getProvider
    189:189:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    39:41:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    45:50:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    57:68:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    74:74:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    81:82:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    86:90:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi26:
    98:99:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    104:106:void addExtraDataToAccessibilityNodeInfo(int,android.view.accessibility.AccessibilityNodeInfo,java.lang.String,android.os.Bundle) -> addExtraDataToAccessibilityNodeInfo
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    43:45:void <init>(java.lang.Object) -> <init>
    763:777:boolean equals(java.lang.Object) -> equals
    572:572:int getAddedCount() -> getAddedCount
    663:663:java.lang.CharSequence getBeforeText() -> getBeforeText
    624:624:java.lang.CharSequence getClassName() -> getClassName
    689:689:java.lang.CharSequence getContentDescription() -> getContentDescription
    340:340:int getCurrentItemIndex() -> getCurrentItemIndex
    369:369:int getFromIndex() -> getFromIndex
    55:55:java.lang.Object getImpl() -> getImpl
    314:314:int getItemCount() -> getItemCount
    472:472:int getMaxScrollX() -> getMaxScrollX
    482:483:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    522:522:int getMaxScrollY() -> getMaxScrollY
    532:533:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    715:715:android.os.Parcelable getParcelableData() -> getParcelableData
    598:598:int getRemovedCount() -> getRemovedCount
    424:424:int getScrollX() -> getScrollX
    448:448:int getScrollY() -> getScrollY
    160:160:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    651:651:java.util.List getText() -> getText
    399:399:int getToIndex() -> getToIndex
    172:172:int getWindowId() -> getWindowId
    754:754:int hashCode() -> hashCode
    184:184:boolean isChecked() -> isChecked
    210:210:boolean isEnabled() -> isEnabled
    262:262:boolean isFullScreen() -> isFullScreen
    236:236:boolean isPassword() -> isPassword
    288:288:boolean isScrollable() -> isScrollable
    70:70:androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat) -> obtain
    84:84:androidx.core.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    745:746:void recycle() -> recycle
    586:587:void setAddedCount(int) -> setAddedCount
    677:678:void setBeforeText(java.lang.CharSequence) -> setBeforeText
    198:199:void setChecked(boolean) -> setChecked
    638:639:void setClassName(java.lang.CharSequence) -> setClassName
    703:704:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    354:355:void setCurrentItemIndex(int) -> setCurrentItemIndex
    224:225:void setEnabled(boolean) -> setEnabled
    386:387:void setFromIndex(int) -> setFromIndex
    276:277:void setFullScreen(boolean) -> setFullScreen
    328:329:void setItemCount(int) -> setItemCount
    498:499:void setMaxScrollX(int) -> setMaxScrollX
    508:511:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    548:549:void setMaxScrollY(int) -> setMaxScrollY
    558:561:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    729:730:void setParcelableData(android.os.Parcelable) -> setParcelableData
    250:251:void setPassword(boolean) -> setPassword
    612:613:void setRemovedCount(int) -> setRemovedCount
    436:437:void setScrollX(int) -> setScrollX
    460:461:void setScrollY(int) -> setScrollY
    302:303:void setScrollable(boolean) -> setScrollable
    98:99:void setSource(android.view.View) -> setSource
    119:120:void setSource(android.view.View,int) -> setSource
    139:142:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
    412:413:void setToIndex(int) -> setToIndex
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:55:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
    88:88:boolean getExtendSelection() -> getExtendSelection
    80:80:int getGranularity() -> getGranularity
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
    104:104:java.lang.String getHTMLElement() -> getHTMLElement
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
    189:189:int getX() -> getX
    196:196:int getY() -> getY
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
    161:161:int getColumn() -> getColumn
    154:154:int getRow() -> getRow
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
    175:175:float getProgress() -> getProgress
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
    126:126:int getEnd() -> getEnd
    119:119:int getStart() -> getStart
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
    139:139:java.lang.CharSequence getText() -> getText
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    84:86:void <init>(java.lang.Object) -> <init>
    321:338:boolean equals(java.lang.Object) -> equals
    259:261:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    166:169:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    232:233:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    218:219:int getChildCount() -> getChildCount
    153:154:int getId() -> getId
    113:114:int getLayer() -> getLayer
    140:141:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    126:128:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    246:247:java.lang.CharSequence getTitle() -> getTitle
    99:100:int getType() -> getType
    316:316:int hashCode() -> hashCode
    205:206:boolean isAccessibilityFocused() -> isAccessibilityFocused
    179:180:boolean isActive() -> isActive
    192:193:boolean isFocused() -> isFocused
    274:275:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    290:294:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    309:312:void recycle() -> recycle
    344:357:java.lang.String toString() -> toString
    361:375:java.lang.String typeToString(int) -> typeToString
    78:81:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    36:53:void <init>(android.graphics.Path) -> <init>
    56:57:void <init>(float,float) -> <init>
    61:62:void <init>(float,float,float,float) -> <init>
    107:110:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    99:102:android.graphics.Path createQuad(float,float) -> createQuad
    66:95:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    31:33:void <init>() -> <init>
    48:49:android.view.animation.Interpolator create(android.graphics.Path) -> create
    63:64:android.view.animation.Interpolator create(float,float) -> create
    81:82:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    93:93:void <clinit>() -> <clinit>
    527:528:void <init>() -> <init>
    183:194:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    392:421:java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int) -> getInitialSelectedText
    438:456:java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int) -> getInitialTextAfterCursor
    357:376:java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int) -> getInitialTextBeforeCursor
    505:522:int getProtocol(android.view.inputmethod.EditorInfo) -> getProtocol
    461:467:boolean isCutOnSurrogate(java.lang.CharSequence,int,int) -> isCutOnSurrogate
    472:474:boolean isPasswordInputType(int) -> isPasswordInputType
    160:169:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
    237:270:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
    214:219:void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence) -> setInitialSurroundingText
    485:494:void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> setSurroundingText
    291:341:void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int) -> trimLongSurroundingText
androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl -> androidx.core.view.inputmethod.EditorInfoCompat$Api30Impl:
    532:532:void <init>() -> <init>
    545:545:java.lang.CharSequence getInitialSelectedText(android.view.inputmethod.EditorInfo,int) -> getInitialSelectedText
    550:550:java.lang.CharSequence getInitialTextAfterCursor(android.view.inputmethod.EditorInfo,int,int) -> getInitialTextAfterCursor
    541:541:java.lang.CharSequence getInitialTextBeforeCursor(android.view.inputmethod.EditorInfo,int,int) -> getInitialTextBeforeCursor
    536:537:void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int) -> setInitialSurroundingSubText
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    412:413:void <init>() -> <init>
    144:199:boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> commitContent
    365:366:androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListenerUsingPerformReceiveContent(android.view.View) -> createOnCommitContentListenerUsingPerformReceiveContent
    278:303:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    352:354:android.view.inputmethod.InputConnection createWrapper(android.view.View,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> createWrapper
    84:127:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    285:285:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    290:294:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    303:303:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    306:309:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$3 -> androidx.core.view.inputmethod.InputConnectionCompat$3:
    366:366:void <init>(android.view.View) -> <init>
    370:396:boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> onCommitContent
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    167:173:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    175:177:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    184:184:android.net.Uri getContentUri() -> getContentUri
    194:194:android.content.ClipDescription getDescription() -> getDescription
    202:202:android.net.Uri getLinkUri() -> getLinkUri
    258:259:void releasePermission() -> releasePermission
    249:250:void requestPermission() -> requestPermission
    236:236:java.lang.Object unwrap() -> unwrap
    217:223:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    107:109:void <init>(java.lang.Object) -> <init>
    112:114:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    119:119:android.net.Uri getContentUri() -> getContentUri
    125:125:android.content.ClipDescription getDescription() -> getDescription
    137:137:java.lang.Object getInputContentInfo() -> getInputContentInfo
    131:131:android.net.Uri getLinkUri() -> getLinkUri
    147:148:void releasePermission() -> releasePermission
    142:143:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    89:89:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    98:98:void releasePermission() -> releasePermission
    94:94:void requestPermission() -> requestPermission
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    248:248:boolean isEnabled() -> isEnabled
    277:277:boolean isExclusive() -> isExclusive
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    264:265:androidx.core.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    44:44:void <clinit>() -> <clinit>
androidx.core.widget.CheckedTextViewCompat -> androidx.core.widget.CheckedTextViewCompat:
    40:41:void <init>() -> <init>
    121:122:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
    70:71:android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView) -> getCheckMarkTintList
    105:106:android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView) -> getCheckMarkTintMode
    56:61:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    91:96:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CheckedTextViewCompat$Api14Impl -> androidx.core.widget.CheckedTextViewCompat$Api14Impl:
    172:173:void <init>() -> <init>
    177:196:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api16Impl -> androidx.core.widget.CheckedTextViewCompat$Api16Impl:
    158:159:void <init>() -> <init>
    163:163:android.graphics.drawable.Drawable getCheckMarkDrawable(android.widget.CheckedTextView) -> getCheckMarkDrawable
androidx.core.widget.CheckedTextViewCompat$Api21Impl -> androidx.core.widget.CheckedTextViewCompat$Api21Impl:
    131:132:void <init>() -> <init>
    141:141:android.content.res.ColorStateList getCheckMarkTintList(android.widget.CheckedTextView) -> getCheckMarkTintList
    151:151:android.graphics.PorterDuff$Mode getCheckMarkTintMode(android.widget.CheckedTextView) -> getCheckMarkTintMode
    136:137:void setCheckMarkTintList(android.widget.CheckedTextView,android.content.res.ColorStateList) -> setCheckMarkTintList
    146:147:void setCheckMarkTintMode(android.widget.CheckedTextView,android.graphics.PorterDuff$Mode) -> setCheckMarkTintMode
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    41:41:void <init>() -> <init>
    123:124:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:72:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    107:108:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    59:60:void <init>(android.content.Context) -> <init>
    39:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    void $r8$lambda$9ZVtVfM7MwrgGmJEIZNfuhCC7eY(androidx.core.widget.ContentLoadingProgressBar) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Ije3417V0uZgdBrD9pbxQ2_AHiI(androidx.core.widget.ContentLoadingProgressBar) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$ovrYLeWrClCHhOWg8t_Ay80kDrs(androidx.core.widget.ContentLoadingProgressBar) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$tmknj5M20Tn8TaJxR587u-39ZDQ(androidx.core.widget.ContentLoadingProgressBar) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    94:95:void hide() -> hide
    99:117:void hideOnUiThread() -> hideOnUiThread
    45:48:void lambda$new$0() -> lambda$new$0
    51:56:void lambda$new$1() -> lambda$new$1
    68:70:void onAttachedToWindow() -> onAttachedToWindow
    74:76:void onDetachedFromWindow() -> onDetachedFromWindow
    79:81:void removeCallbacks() -> removeCallbacks
    129:130:void show() -> show
    135:143:void showOnUiThread() -> showOnUiThread
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda0 -> androidx.core.widget.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.f$0 -> b
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda1 -> androidx.core.widget.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.f$0 -> b
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$62dfa22687fb51f065c7936f4783bba5467fff0dc677f5b69a6fac416d356031$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda2 -> androidx.core.widget.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.f$0 -> b
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$493ea19ec193ccae637d28862add574c7b1024af3755002071d3b7b355e290ae$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.ContentLoadingProgressBar$$ExternalSyntheticLambda3 -> androidx.core.widget.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.widget.ContentLoadingProgressBar androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.f$0 -> b
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.<init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.widget.ContentLoadingProgressBar$$InternalSyntheticLambda$0$2939d8dba2e427d66242a15e0a33cc277afc3f7418786f7828787befa6068a74$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    53:55:void <init>(android.content.Context) -> <init>
    66:70:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    295:295:boolean draw(android.graphics.Canvas) -> draw
    128:129:void finish() -> finish
    87:90:float getDistance(android.widget.EdgeEffect) -> getDistance
    117:117:boolean isFinished() -> isFinished
    277:278:boolean onAbsorb(int) -> onAbsorb
    146:147:boolean onPull(float) -> onPull
    171:172:boolean onPull(float,float) -> onPull
    194:199:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    239:243:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
    258:259:boolean onRelease() -> onRelease
    103:104:void setSize(int,int) -> setSize
androidx.core.widget.EdgeEffectCompat$Api31Impl -> androidx.core.widget.EdgeEffectCompat$Api31Impl:
    301:301:void <init>() -> <init>
    306:308:android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet) -> create
    329:331:float getDistance(android.widget.EdgeEffect) -> getDistance
    319:322:float onPullDistance(android.widget.EdgeEffect,float,float) -> onPullDistance
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    107:107:void <init>() -> <init>
    37:38:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:75:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListPopupWindowCompat -> androidx.core.widget.ListPopupWindowCompat:
    31:33:void <init>() -> <init>
    65:65:android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    97:98:android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> createDragToOpenListener
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    90:90:void <init>() -> <init>
    67:69:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    189:191:void <clinit>() -> <clinit>
    203:204:void <init>(android.content.Context) -> <init>
    207:208:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    105:232:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1763:1765:void abortAnimatedScroll() -> abortAnimatedScroll
    488:493:void addView(android.view.View) -> addView
    497:502:void addView(android.view.View,int) -> addView
    506:511:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    515:520:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1382:1428:boolean arrowScroll(int) -> arrowScroll
    539:546:boolean canScroll() -> canScroll
    2121:2147:int clamp(int,int,int) -> clamp
    1626:1626:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1619:1619:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1612:1612:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1662:1716:void computeScroll() -> computeScroll
    1815:1876:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1605:1605:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1598:1598:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1574:1591:int computeVerticalScrollRange() -> computeVerticalScrollRange
    637:637:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    314:314:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    319:319:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    270:270:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    309:309:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    239:241:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    263:263:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    303:303:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1457:1464:void doScrollY(int) -> doScrollY
    2073:2118:void draw(android.graphics.Canvas) -> draw
    1015:1023:boolean edgeEffectFling(int) -> edgeEffectFling
    2039:2046:void endDrag() -> endDrag
    649:687:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1203:1264:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    2027:2036:void fling(int) -> fling
    1318:1334:boolean fullScroll(int) -> fullScroll
    451:464:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    472:472:int getMaxScrollAmount() -> getMaxScrollAmount
    424:424:int getNestedScrollAxes() -> getNestedScrollAxes
    1175:1183:int getScrollRange() -> getScrollRange
    436:446:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1096:1107:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    257:257:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    297:297:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    691:699:boolean inChild(int,int) -> inChild
    703:708:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    476:484:void initScrollView() -> initScrollView
    711:714:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    557:557:boolean isFillViewport() -> isFillViewport
    282:282:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1436:1436:boolean isOffScreen(android.view.View) -> isOffScreen
    579:579:boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    2011:2016:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1444:1448:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1632:1643:void measureChild(android.view.View,int,int) -> measureChild
    1648:1657:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1982:1985:void onAttachedToWindow() -> onAttachedToWindow
    1068:1092:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    744:840:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1944:1978:void onLayout(boolean,int,int,int,int) -> onLayout
    601:632:void onMeasure(int,int) -> onMeasure
    409:414:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    419:419:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    373:374:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    403:404:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    327:328:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    367:368:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    398:399:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    354:356:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    387:388:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    331:341:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1113:1114:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1904:1923:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2152:2161:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2165:2168:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    592:597:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1051:1064:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1989:2005:void onSizeChanged(int,int,int,int) -> onSizeChanged
    348:348:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    381:381:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    360:362:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    392:393:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    845:1011:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1121:1171:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1280:1302:boolean pageScroll(int) -> pageScroll
    717:721:void recycleVelocityTracker() -> recycleVelocityTracker
    1730:1749:int releaseVerticalGlow(int,float) -> releaseVerticalGlow
    1881:1888:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1930:1933:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    725:729:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1938:1940:void requestLayout() -> requestLayout
    1753:1760:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1350:1371:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    2056:2069:void scrollTo(int,int) -> scrollTo
    1773:1783:void scrollToChild(android.view.View) -> scrollToChild
    1794:1803:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    569:573:void setFillViewport(boolean) -> setFillViewport
    277:278:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    532:533:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    587:588:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    431:431:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1473:1474:void smoothScrollBy(int,int) -> smoothScrollBy
    1484:1485:void smoothScrollBy(int,int,int) -> smoothScrollBy
    1496:1518:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1527:1528:void smoothScrollTo(int,int) -> smoothScrollTo
    1538:1539:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1550:1551:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1563:1564:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    247:247:boolean startNestedScroll(int,int) -> startNestedScroll
    287:287:boolean startNestedScroll(int) -> startNestedScroll
    1038:1047:boolean stopGlowAnimations(android.view.MotionEvent) -> stopGlowAnimations
    252:253:void stopNestedScroll(int) -> stopNestedScroll
    292:293:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2211:2211:void <init>() -> <init>
    2276:2285:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2251:2272:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2214:2246:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2197:2197:void <clinit>() -> <clinit>
    2175:2176:void <init>(android.os.Parcelable) -> <init>
    2179:2181:void <init>(android.os.Parcel) -> <init>
    2192:2193:java.lang.String toString() -> toString
    2185:2187:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2198:2198:void <init>() -> <init>
    2198:2198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2201:2201:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2198:2198:java.lang.Object[] newArray(int) -> newArray
    2206:2206:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> androidx.core.widget.PopupMenuCompat:
    30:32:void <init>() -> <init>
    55:56:android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    48:50:void <init>() -> <init>
    124:125:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    187:188:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    93:113:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    157:178:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    70:83:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api19Impl -> androidx.core.widget.PopupWindowCompat$Api19Impl:
    240:242:void <init>() -> <init>
    247:248:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.PopupWindowCompat$Api23Impl -> androidx.core.widget.PopupWindowCompat$Api23Impl:
    213:215:void <init>() -> <init>
    224:224:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    234:234:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    219:220:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    229:230:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
androidx.core.widget.ScrollerCompat -> androidx.core.widget.ScrollerCompat:
    56:59:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    273:274:void abortAnimation() -> abortAnimation
    142:142:boolean computeScrollOffset() -> computeScrollOffset
    41:41:androidx.core.widget.ScrollerCompat create(android.content.Context) -> create
    49:49:androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    210:211:void fling(int,int,int,int,int,int,int,int) -> fling
    242:244:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    130:130:float getCurrVelocity() -> getCurrVelocity
    82:82:int getCurrX() -> getCurrX
    94:94:int getCurrY() -> getCurrY
    104:104:int getFinalX() -> getFinalX
    114:114:int getFinalY() -> getFinalY
    70:70:boolean isFinished() -> isFinished
    334:334:boolean isOverScrolled() -> isOverScrolled
    294:295:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    314:315:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    262:262:boolean springBack(int,int,int,int,int,int) -> springBack
    163:164:void startScroll(int,int,int,int) -> startScroll
    183:184:void startScroll(int,int,int,int,int) -> startScroll
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    111:111:void <init>() -> <init>
    456:462:int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    439:445:int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    422:428:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    473:479:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    406:412:int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    1029:1031:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1064:1066:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    295:296:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    788:788:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    798:798:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    226:227:int getMaxLines(android.widget.TextView) -> getMaxLines
    252:253:int getMinLines(android.widget.TextView) -> getMinLines
    983:1000:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    927:974:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    835:847:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    114:121:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    126:130:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    361:368:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    387:393:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    326:331:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    1013:1019:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1047:1054:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    178:187:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    210:219:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    506:508:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    713:738:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    758:779:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    816:824:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    904:915:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:288:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    862:889:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    541:544:android.view.ActionMode$Callback unwrapCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> unwrapCustomSelectionActionModeCallback
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    564:568:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    691:691:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    679:681:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    650:662:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    593:593:android.view.ActionMode$Callback getWrappedCallback() -> getWrappedCallback
    685:687:boolean isEditable(android.widget.TextView) -> isEditable
    666:673:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    583:583:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    572:572:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    588:589:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    577:578:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    597:646:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewKt -> androidx.core.widget.TextViewKt:
# {"id":"sourceFile","fileName":"TextView.kt"}
    80:80:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addTextChangedListener
    80:80:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1):80 -> addTextChangedListener
    93:93:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addTextChangedListener
    93:93:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1):93 -> addTextChangedListener
    95:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addTextChangedListener
    95:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1):95 -> addTextChangedListener
    65:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addTextChangedListener$default
    58:58:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    65:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doAfterTextChanged
    65:95:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):58 -> doAfterTextChanged
    58:58:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    35:35:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doBeforeTextChanged
    65:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doBeforeTextChanged
    65:95:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):35 -> doBeforeTextChanged
    35:35:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doBeforeTextChanged
    49:49:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doOnTextChanged
    65:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnTextChanged
    65:95:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):49 -> doOnTextChanged
    49:49:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doOnTextChanged
androidx.core.widget.TextViewKt$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$addTextChangedListener$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    71:71:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    71:71:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    71:71:void invoke(java.lang.CharSequence,int,int,int):71 -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$2 -> androidx.core.widget.TextViewKt$addTextChangedListener$2:
# {"id":"sourceFile","fileName":"TextView.kt"}
    77:77:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    77:77:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
    77:77:void invoke(java.lang.CharSequence,int,int,int):77 -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$3 -> androidx.core.widget.TextViewKt$addTextChangedListener$3:
# {"id":"sourceFile","fileName":"TextView.kt"}
    78:78:java.lang.Object invoke(java.lang.Object) -> invoke
    78:78:java.lang.Object invoke(java.lang.Object) -> invoke
    78:78:void invoke(android.text.Editable):78 -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1 -> androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    80:80:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    82:83:void afterTextChanged(android.text.Editable) -> afterTextChanged
    86:87:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    90:91:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1 -> androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$default$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function1):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    71:71:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$1.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> beforeTextChanged
    71:71:void beforeTextChanged(java.lang.CharSequence,int,int,int):98 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    77:77:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$2.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> onTextChanged
    77:77:void onTextChanged(java.lang.CharSequence,int,int,int):99 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1 -> androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$default$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function4):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    78:78:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$3.invoke(java.lang.Object) -> afterTextChanged
    78:78:void afterTextChanged(android.text.Editable):98 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    77:77:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$2.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> onTextChanged
    77:77:void onTextChanged(java.lang.CharSequence,int,int,int):99 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1 -> androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$default$1:
# {"id":"sourceFile","fileName":"TextView.kt"}
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function4):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    78:78:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$3.invoke(java.lang.Object) -> afterTextChanged
    78:78:void afterTextChanged(android.text.Editable):98 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    71:71:java.lang.Object androidx.core.widget.TextViewKt$addTextChangedListener$1.invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> beforeTextChanged
    71:71:void beforeTextChanged(java.lang.CharSequence,int,int,int):99 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.core.widget.TextViewOnReceiveContentListener -> androidx.core.widget.TextViewOnReceiveContentListener:
    49:49:void <init>() -> <init>
    94:95:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int) -> coerceToText
    56:89:androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat) -> onReceiveContent
    103:109:void replaceSelection(android.text.Editable,java.lang.CharSequence) -> replaceSelection
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl -> androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl:
    113:113:void <init>() -> <init>
    117:121:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl -> androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl:
    127:127:void <init>() -> <init>
    131:135:java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int) -> coerce
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> init
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:473:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    135:136:void setDropDownViewResource(int) -> setDropDownViewResource
    126:127:void setViewResource(int) -> setViewResource
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    53:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    53:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    233:233:int getStringConversionColumn() -> getStringConversionColumn
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    251:252:void setStringConversionColumn(int) -> setStringConversionColumn
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:51:void <init>(android.os.Parcelable) -> <init>
    59:60:void <init>(android.os.Parcel) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:153:void <init>(android.view.View) -> <init>
    998:1005:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    637:641:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:891:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:199:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    526:527:void invalidateRoot() -> invalidateRoot
    542:544:void invalidateVirtualView(int) -> invalidateVirtualView
    566:576:void invalidateVirtualView(int,int) -> invalidateVirtualView
    932:952:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:317:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    895:899:boolean performAction(int,int,android.os.Bundle) -> performAction
    908:918:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:987:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    454:455:void <init>() -> <init>
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    119:402:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    525:535:void abort() -> abort
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    511:518:void cancel() -> cancel
    471:480:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1340:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1376:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:673:int clampMag(int,int,int) -> clampMag
    687:690:float clampMag(float,float,float) -> clampMag
    790:801:void clearMotionHistory() -> clearMotionHistory
    804:815:void clearMotionHistory(int) -> clearMotionHistory
    638:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:787:void dispatchViewReleased(float,float) -> dispatchViewReleased
    694:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1424:1443:void dragTo(int,int,int,int) -> dragTo
    818:845:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    710:721:void flingCapturedView(int,int,int,int) -> flingCapturedView
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    495:495:int getActivePointerId() -> getActivePointerId
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1499:1506:int getEdgesTouched(int,int) -> getEdgesTouched
    422:422:float getMinVelocity() -> getMinVelocity
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1389:1395:boolean isEdgeTouched(int) -> isEdgeTouched
    1409:1409:boolean isEdgeTouched(int,int) -> isEdgeTouched
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1516:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1421:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1255:1273:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:853:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:868:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:896:void setDragState(int) -> setDragState
    447:448:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:412:void setMinVelocity(float) -> setMinVelocity
    577:584:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    310:310:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    325:325:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
    163:163:void onViewDragStateChanged(int) -> onViewDragStateChanged
    176:176:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    207:207:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1972:void cancelChildViewTouch() -> cancelChildViewTouch
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1748:void closeDrawer(android.view.View) -> closeDrawer
    1757:1780:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1790:void closeDrawer(int) -> closeDrawer
    1800:1806:void closeDrawer(int,boolean) -> closeDrawer
    1637:1638:void closeDrawers() -> closeDrawers
    1641:1670:void closeDrawers(boolean) -> closeDrawers
    1309:1322:void computeScroll() -> computeScroll
    1536:1564:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:875:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:897:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    985:995:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:963:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1956:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    652:697:int getDrawerLockMode(int) -> getDrawerLockMode
    709:713:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    746:753:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1005:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1882:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1823:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1836:1840:boolean isDrawerOpen(int) -> isDrawerOpen
    1468:1479:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1855:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1871:boolean isDrawerVisible(int) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1213:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:976:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1155:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1679:void openDrawer(android.view.View) -> openDrawer
    1688:1713:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1723:void openDrawer(int) -> openDrawer
    1733:1739:void openDrawer(int,boolean) -> openDrawer
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1163:void resolveShadowDrawables() -> resolveShadowDrawables
    405:409:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    576:614:void setDrawerLockMode(int,int) -> setDrawerLockMode
    635:641:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    431:448:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    465:466:void setDrawerShadow(int,int) -> setDrawerShadow
    727:734:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    927:934:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:847:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2422:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2313:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2313:2328:void <init>(int,int) -> <init>
    2331:2333:void <init>(int,int,int) -> <init>
    2313:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2313:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2313:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2095:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2095:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
    298:298:void onDrawerClosed(android.view.View) -> onDrawerClosed
    294:294:void onDrawerOpened(android.view.View) -> onDrawerOpened
    290:290:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    302:302:void onDrawerStateChanged(int) -> onDrawerStateChanged
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2146:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2208:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2259:void peekDrawer() -> peekDrawer
    2161:2162:void removeCallbacks() -> removeCallbacks
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.emoji2.text.ConcurrencyHelpers -> androidx.emoji2.text.ConcurrencyHelpers:
    43:43:void <init>() -> <init>
    java.lang.Thread $r8$lambda$rm7NN8F9tEuy2Vr8i0fl8_hnx_A(java.lang.String,java.lang.Runnable) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    94:94:java.util.concurrent.Executor convertHandlerToExecutor(android.os.Handler) -> convertHandlerToExecutor
    56:70:java.util.concurrent.ThreadPoolExecutor createBackgroundPriorityExecutor(java.lang.String) -> createBackgroundPriorityExecutor
    57:59:java.lang.Thread lambda$createBackgroundPriorityExecutor$0(java.lang.String,java.lang.Runnable) -> lambda$createBackgroundPriorityExecutor$0
    77:80:android.os.Handler mainHandlerAsync() -> mainHandlerAsync
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda0 -> androidx.emoji2.text.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$898775460a2780e4f6c899217b97fa0895df5fa15b5a247c81a9e0909a756318$0.f$0 -> b
    void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$898775460a2780e4f6c899217b97fa0895df5fa15b5a247c81a9e0909a756318$0.<init>(android.os.Handler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$898775460a2780e4f6c899217b97fa0895df5fa15b5a247c81a9e0909a756318$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1 -> androidx.emoji2.text.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$0f8279e382289c3331597fd50e7aca59564e3adacf0d9e24f5df1472d0c40284$0.f$0 -> a
    void androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$0f8279e382289c3331597fd50e7aca59564e3adacf0d9e24f5df1472d0c40284$0.<init>(java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Thread androidx.emoji2.text.ConcurrencyHelpers$$InternalSyntheticLambda$0$0f8279e382289c3331597fd50e7aca59564e3adacf0d9e24f5df1472d0c40284$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl -> androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl:
    99:101:void <init>() -> <init>
    105:105:android.os.Handler createAsync(android.os.Looper) -> createAsync
androidx.emoji2.text.DefaultEmojiCompatConfig -> androidx.emoji2.text.DefaultEmojiCompatConfig:
    80:81:void <init>() -> <init>
    97:98:androidx.emoji2.text.FontRequestEmojiCompatConfig create(android.content.Context) -> create
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory:
    119:121:void <init>(androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper) -> <init>
    142:145:androidx.emoji2.text.EmojiCompat$Config configOrNull(android.content.Context,androidx.core.provider.FontRequest) -> configOrNull
    234:238:java.util.List convertToByteArray(android.content.pm.Signature[]) -> convertToByteArray
    130:130:androidx.emoji2.text.EmojiCompat$Config create(android.content.Context) -> create
    219:225:androidx.core.provider.FontRequest generateFontRequestFrom(android.content.pm.ProviderInfo,android.content.pm.PackageManager) -> generateFontRequestFrom
    246:249:androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper getHelperForApi() -> getHelperForApi
    201:201:boolean hasFlagSystem(android.content.pm.ProviderInfo) -> hasFlagSystem
    183:192:android.content.pm.ProviderInfo queryDefaultInstalledContentProvider(android.content.pm.PackageManager) -> queryDefaultInstalledContentProvider
    159:170:androidx.core.provider.FontRequest queryForDefaultFontRequest(android.content.Context) -> queryForDefaultFontRequest
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper:
    262:262:void <init>() -> <init>
    291:291:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    270:272:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
    281:281:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API19:
    302:302:void <init>() -> <init>
    314:314:android.content.pm.ProviderInfo getProviderInfo(android.content.pm.ResolveInfo) -> getProviderInfo
    308:308:java.util.List queryIntentContentProviders(android.content.pm.PackageManager,android.content.Intent,int) -> queryIntentContentProviders
androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 -> androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28:
    324:324:void <init>() -> <init>
    337:339:android.content.pm.Signature[] getSigningSignatures(android.content.pm.PackageManager,java.lang.String) -> getSigningSignatures
androidx.emoji2.text.EmojiCompat -> androidx.emoji2.text.EmojiCompat:
    229:230:void <clinit>() -> <clinit>
    339:358:void <init>(androidx.emoji2.text.EmojiCompat$Config) -> <init>
    111:111:androidx.emoji2.text.EmojiCompat$GlyphChecker access$000(androidx.emoji2.text.EmojiCompat) -> access$000
    528:532:androidx.emoji2.text.EmojiCompat get() -> get
    969:970:java.lang.String getAssetSignature() -> getAssetSignature
    693:693:int getEmojiSpanIndicatorColor() -> getEmojiSpanIndicatorColor
    663:668:int getLoadState() -> getLoadState
    747:748:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    718:719:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    766:768:boolean hasEmojiGlyph(java.lang.CharSequence) -> hasEmojiGlyph
    785:787:boolean hasEmojiGlyph(java.lang.CharSequence,int) -> hasEmojiGlyph
    377:377:androidx.emoji2.text.EmojiCompat init(android.content.Context) -> init
    389:413:androidx.emoji2.text.EmojiCompat init(android.content.Context,androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory) -> init
    429:439:androidx.emoji2.text.EmojiCompat init(androidx.emoji2.text.EmojiCompat$Config) -> init
    473:473:boolean isConfigured() -> isConfigured
    684:684:boolean isEmojiSpanIndicatorEnabled() -> isEmojiSpanIndicatorEnabled
    675:675:boolean isInitialized() -> isInitialized
    552:565:void load() -> load
    568:580:void loadMetadata() -> loadMetadata
    599:609:void onMetadataLoadFailed(java.lang.Throwable) -> onMetadataLoadFailed
    584:595:void onMetadataLoadSuccess() -> onMetadataLoadSuccess
    807:808:java.lang.CharSequence process(java.lang.CharSequence) -> process
    842:842:java.lang.CharSequence process(java.lang.CharSequence,int,int) -> process
    880:880:java.lang.CharSequence process(java.lang.CharSequence,int,int,int) -> process
    922:957:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,int) -> process
    626:638:void registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    485:489:androidx.emoji2.text.EmojiCompat reset(androidx.emoji2.text.EmojiCompat$Config) -> reset
    500:503:androidx.emoji2.text.EmojiCompat reset(androidx.emoji2.text.EmojiCompat) -> reset
    513:516:void skipDefaultConfigurationLookup(boolean) -> skipDefaultConfigurationLookup
    646:653:void unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
    994:1001:void updateEditorInfo(android.view.inputmethod.EditorInfo) -> updateEditorInfo
androidx.emoji2.text.EmojiCompat$CompatInternal -> androidx.emoji2.text.EmojiCompat$CompatInternal:
    1417:1419:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1448:1448:java.lang.String getAssetSignature() -> getAssetSignature
    1428:1428:boolean hasEmojiGlyph(java.lang.CharSequence) -> hasEmojiGlyph
    1433:1433:boolean hasEmojiGlyph(java.lang.CharSequence,int) -> hasEmojiGlyph
    1423:1424:void loadMetadata() -> loadMetadata
    1440:1440:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1445:1445:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19 -> androidx.emoji2.text.EmojiCompat$CompatInternal19:
    1467:1468:void <init>(androidx.emoji2.text.EmojiCompat) -> <init>
    1535:1536:java.lang.String getAssetSignature() -> getAssetSignature
    1512:1512:boolean hasEmojiGlyph(java.lang.CharSequence) -> hasEmojiGlyph
    1517:1518:boolean hasEmojiGlyph(java.lang.CharSequence,int) -> hasEmojiGlyph
    1473:1488:void loadMetadata() -> loadMetadata
    1493:1508:void onMetadataLoadSuccess(androidx.emoji2.text.MetadataRepo) -> onMetadataLoadSuccess
    1524:1524:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
    1529:1531:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.text.EmojiCompat$CompatInternal19$1 -> androidx.emoji2.text.EmojiCompat$CompatInternal19$1:
    1473:1473:void <init>(androidx.emoji2.text.EmojiCompat$CompatInternal19) -> <init>
    1481:1482:void onFailed(java.lang.Throwable) -> onFailed
    1476:1477:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompat$Config -> androidx.emoji2.text.EmojiCompat$Config:
    1151:1167:void <init>(androidx.emoji2.text.EmojiCompat$MetadataRepoLoader) -> <init>
    1359:1359:androidx.emoji2.text.EmojiCompat$MetadataRepoLoader getMetadataRepoLoader() -> getMetadataRepoLoader
    1179:1186:androidx.emoji2.text.EmojiCompat$Config registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> registerInitCallback
    1295:1296:androidx.emoji2.text.EmojiCompat$Config setEmojiSpanIndicatorColor(int) -> setEmojiSpanIndicatorColor
    1283:1284:androidx.emoji2.text.EmojiCompat$Config setEmojiSpanIndicatorEnabled(boolean) -> setEmojiSpanIndicatorEnabled
    1349:1351:androidx.emoji2.text.EmojiCompat$Config setGlyphChecker(androidx.emoji2.text.EmojiCompat$GlyphChecker) -> setGlyphChecker
    1337:1338:androidx.emoji2.text.EmojiCompat$Config setMetadataLoadStrategy(int) -> setMetadataLoadStrategy
    1216:1217:androidx.emoji2.text.EmojiCompat$Config setReplaceAll(boolean) -> setReplaceAll
    1237:1237:androidx.emoji2.text.EmojiCompat$Config setUseEmojiAsDefaultStyle(boolean) -> setUseEmojiAsDefaultStyle
    1259:1270:androidx.emoji2.text.EmojiCompat$Config setUseEmojiAsDefaultStyle(boolean,java.util.List) -> setUseEmojiAsDefaultStyle
    1198:1202:androidx.emoji2.text.EmojiCompat$Config unregisterInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback) -> unregisterInitCallback
androidx.emoji2.text.EmojiCompat$InitCallback -> androidx.emoji2.text.EmojiCompat$InitCallback:
    1026:1026:void <init>() -> <init>
    1039:1039:void onFailed(java.lang.Throwable) -> onFailed
    1032:1032:void onInitialized() -> onInitialized
androidx.emoji2.text.EmojiCompat$ListenerDispatcher -> androidx.emoji2.text.EmojiCompat$ListenerDispatcher:
    1374:1376:void <init>(androidx.emoji2.text.EmojiCompat$InitCallback,int) -> <init>
    1380:1381:void <init>(java.util.Collection,int) -> <init>
    1385:1390:void <init>(java.util.Collection,int,java.lang.Throwable) -> <init>
    1394:1408:void run() -> run
androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback -> androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback:
    1113:1113:void <init>() -> <init>
androidx.emoji2.text.EmojiCompat$SpanFactory -> androidx.emoji2.text.EmojiCompat$SpanFactory:
    1010:1010:void <init>() -> <init>
    1019:1019:androidx.emoji2.text.EmojiSpan createSpan(androidx.emoji2.text.EmojiMetadata) -> createSpan
androidx.emoji2.text.EmojiCompatInitializer -> androidx.emoji2.text.EmojiCompatInitializer:
    73:73:void <init>() -> <init>
    73:73:java.lang.Object create(android.content.Context) -> create
    87:90:java.lang.Boolean create(android.content.Context) -> create
    103:114:void delayUntilFirstResume(android.content.Context) -> delayUntilFirstResume
    128:128:java.util.List dependencies() -> dependencies
    118:120:void loadEmojiCompatAfterDelay() -> loadEmojiCompatAfterDelay
androidx.emoji2.text.EmojiCompatInitializer$1 -> androidx.emoji2.text.EmojiCompatInitializer$1:
    107:107:void <init>(androidx.emoji2.text.EmojiCompatInitializer,androidx.lifecycle.Lifecycle) -> <init>
    110:112:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultConfig:
    150:152:void <init>(android.content.Context) -> <init>
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader:
    159:161:void <init>(android.content.Context) -> <init>
    void $r8$lambda$2V1iWTiAwNxOBlVvz73bbuEdzIw(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    174:205:void doLoad(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> doLoad
    167:167:void lambda$load$0(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> lambda$load$0
    165:168:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$9100475115e8089aa3f5bd60914a597a04bd55ac33c771ff0e0a94e91b452f2e$0.f$0 -> b
    java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$9100475115e8089aa3f5bd60914a597a04bd55ac33c771ff0e0a94e91b452f2e$0.f$2 -> d
    androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$9100475115e8089aa3f5bd60914a597a04bd55ac33c771ff0e0a94e91b452f2e$0.f$1 -> c
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$9100475115e8089aa3f5bd60914a597a04bd55ac33c771ff0e0a94e91b452f2e$0.<init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$$InternalSyntheticLambda$0$9100475115e8089aa3f5bd60914a597a04bd55ac33c771ff0e0a94e91b452f2e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1 -> androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader$1:
    180:180:void <init>(androidx.emoji2.text.EmojiCompatInitializer$BackgroundDefaultLoader,androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback,java.util.concurrent.ThreadPoolExecutor) -> <init>
    195:199:void onFailed(java.lang.Throwable) -> onFailed
    185:189:void onLoaded(androidx.emoji2.text.MetadataRepo) -> onLoaded
androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable -> androidx.emoji2.text.EmojiCompatInitializer$LoadEmojiCompatRunnable:
    131:131:void <init>() -> <init>
    137:144:void run() -> run
androidx.emoji2.text.EmojiDefaults -> androidx.emoji2.text.EmojiDefaults:
    29:29:void <init>() -> <init>
androidx.emoji2.text.EmojiMetadata -> androidx.emoji2.text.EmojiMetadata:
    73:73:void <clinit>() -> <clinit>
    89:95:void <init>(androidx.emoji2.text.MetadataRepo,int) -> <init>
    108:118:void draw(android.graphics.Canvas,float,float,android.graphics.Paint) -> draw
    230:230:int getCodepointAt(int) -> getCodepointAt
    237:237:int getCodepointsLength() -> getCodepointsLength
    173:173:short getCompatAdded() -> getCompatAdded
    190:190:int getHasGlyph() -> getHasGlyph
    166:166:short getHeight() -> getHeight
    152:152:int getId() -> getId
    132:145:androidx.emoji2.text.flatbuffer.MetadataItem getMetadataItem() -> getMetadataItem
    180:180:short getSdkAdded() -> getSdkAdded
    125:125:android.graphics.Typeface getTypeface() -> getTypeface
    159:159:short getWidth() -> getWidth
    221:221:boolean isDefaultEmoji() -> isDefaultEmoji
    203:204:void resetHasGlyphCache() -> resetHasGlyphCache
    213:214:void setHasGlyph(boolean) -> setHasGlyph
    242:252:java.lang.String toString() -> toString
androidx.emoji2.text.EmojiProcessor -> androidx.emoji2.text.EmojiProcessor:
    115:121:void <init>(androidx.emoji2.text.MetadataRepo,androidx.emoji2.text.EmojiCompat$SpanFactory,androidx.emoji2.text.EmojiCompat$GlyphChecker,boolean,int[]) -> <init>
    443:445:void addEmoji(android.text.Spannable,androidx.emoji2.text.EmojiMetadata,int,int) -> addEmoji
    328:354:boolean delete(android.text.Editable,android.view.KeyEvent,boolean) -> delete
    124:142:androidx.emoji2.text.EmojiMetadata getEmojiMetadata(java.lang.CharSequence) -> getEmojiMetadata
    377:430:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    306:323:boolean handleOnKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleOnKeyDown
    462:468:boolean hasGlyph(java.lang.CharSequence,int,int,androidx.emoji2.text.EmojiMetadata) -> hasGlyph
    434:434:boolean hasInvalidSelection(int,int) -> hasInvalidSelection
    438:438:boolean hasModifiers(android.view.KeyEvent) -> hasModifiers
    169:282:java.lang.CharSequence process(java.lang.CharSequence,int,int,int,boolean) -> process
androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder -> androidx.emoji2.text.EmojiProcessor$CodepointIndexFinder:
    661:661:void <init>() -> <init>
    676:716:int findIndexBackward(java.lang.CharSequence,int,int) -> findIndexBackward
    732:775:int findIndexForward(java.lang.CharSequence,int,int) -> findIndexForward
androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker -> androidx.emoji2.text.EmojiProcessor$DefaultGlyphChecker:
    796:796:void <clinit>() -> <clinit>
    803:806:void <init>() -> <init>
    834:837:java.lang.StringBuilder getStringBuilder() -> getStringBuilder
    818:830:boolean hasGlyph(java.lang.CharSequence,int,int,int) -> hasGlyph
androidx.emoji2.text.EmojiProcessor$ProcessorSm -> androidx.emoji2.text.EmojiProcessor$ProcessorSm:
    479:523:void <init>(androidx.emoji2.text.MetadataRepo$Node,boolean,int[]) -> <init>
    528:573:int check(int) -> check
    595:595:androidx.emoji2.text.EmojiMetadata getCurrentMetadata() -> getCurrentMetadata
    588:588:androidx.emoji2.text.EmojiMetadata getFlushMetadata() -> getFlushMetadata
    641:641:boolean isEmojiStyle(int) -> isEmojiStyle
    606:607:boolean isInFlushableState() -> isInFlushableState
    650:650:boolean isTextStyle(int) -> isTextStyle
    578:581:int reset() -> reset
    611:632:boolean shouldUseEmojiPresentationStyleForSingleCodepoint() -> shouldUseEmojiPresentationStyleForSingleCodepoint
androidx.emoji2.text.EmojiSpan -> androidx.emoji2.text.EmojiSpan:
    42:78:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    130:130:int getHeight() -> getHeight
    148:148:int getId() -> getId
    110:110:androidx.emoji2.text.EmojiMetadata getMetadata() -> getMetadata
    138:138:float getRatio() -> getRatio
    87:101:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    120:120:int getWidth() -> getWidth
androidx.emoji2.text.FontRequestEmojiCompatConfig -> androidx.emoji2.text.FontRequestEmojiCompatConfig:
    442:442:void <clinit>() -> <clinit>
    122:123:void <init>(android.content.Context,androidx.core.provider.FontRequest) -> <init>
    131:132:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    172:178:androidx.emoji2.text.FontRequestEmojiCompatConfig setHandler(android.os.Handler) -> setHandler
    148:149:androidx.emoji2.text.FontRequestEmojiCompatConfig setLoadingExecutor(java.util.concurrent.Executor) -> setLoadingExecutor
    191:192:androidx.emoji2.text.FontRequestEmojiCompatConfig setRetryPolicy(androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy) -> setRetryPolicy
androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy -> androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy:
    92:94:void <init>(long) -> <init>
    98:112:long getRetryDelay() -> getRetryDelay
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper:
    412:412:void <init>() -> <init>
    424:424:android.graphics.Typeface buildTypeface(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo) -> buildTypeface
    417:417:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,androidx.core.provider.FontRequest) -> fetchFonts
    431:434:void registerObserver(android.content.Context,android.net.Uri,android.database.ContentObserver) -> registerObserver
    438:439:void unregisterObserver(android.content.Context,android.database.ContentObserver) -> unregisterObserver
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader:
    208:241:void <init>(android.content.Context,androidx.core.provider.FontRequest,androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper) -> <init>
    326:343:void cleanUp() -> cleanUp
    350:404:void createMetadata() -> createMetadata
    258:263:void load(androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback) -> load
    267:279:void loadInternal() -> loadInternal
    285:296:androidx.core.provider.FontsContractCompat$FontInfo retrieveFontInfo() -> retrieveFontInfo
    302:322:void scheduleRetry(android.net.Uri,long) -> scheduleRetry
    244:247:void setExecutor(java.util.concurrent.Executor) -> setExecutor
    250:253:void setRetryPolicy(androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy) -> setRetryPolicy
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda0 -> androidx.emoji2.text.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$b6ad420a59e06a58aab40f542fed2b904e747de0cf42631a591dc8f98212215e$0.f$0 -> b
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$b6ad420a59e06a58aab40f542fed2b904e747de0cf42631a591dc8f98212215e$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$b6ad420a59e06a58aab40f542fed2b904e747de0cf42631a591dc8f98212215e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$ExternalSyntheticLambda1 -> androidx.emoji2.text.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$86ff27c49f2f02cfc15b1c33bc0b5b530a86503a7eecfa8f0957b7e04f5ec92e$0.f$0 -> b
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$86ff27c49f2f02cfc15b1c33bc0b5b530a86503a7eecfa8f0957b7e04f5ec92e$0.<init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$$InternalSyntheticLambda$0$86ff27c49f2f02cfc15b1c33bc0b5b530a86503a7eecfa8f0957b7e04f5ec92e$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1 -> androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader$1:
    309:309:void <init>(androidx.emoji2.text.FontRequestEmojiCompatConfig$FontRequestMetadataLoader,android.os.Handler) -> <init>
    312:313:void onChange(boolean,android.net.Uri) -> onChange
androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy -> androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy:
    58:58:void <init>() -> <init>
androidx.emoji2.text.MetadataListReader -> androidx.emoji2.text.MetadataListReader:
    346:347:void <init>() -> <init>
    120:161:androidx.emoji2.text.MetadataListReader$OffsetInfo findOffsetInfo(androidx.emoji2.text.MetadataListReader$OpenTypeReader) -> findOffsetInfo
    69:80:androidx.emoji2.text.flatbuffer.MetadataList read(java.io.InputStream) -> read
    89:94:androidx.emoji2.text.flatbuffer.MetadataList read(java.nio.ByteBuffer) -> read
    106:108:androidx.emoji2.text.flatbuffer.MetadataList read(android.content.res.AssetManager,java.lang.String) -> read
    192:192:long toUnsignedInt(int) -> toUnsignedInt
    187:187:int toUnsignedShort(short) -> toUnsignedShort
androidx.emoji2.text.MetadataListReader$ByteBufferReader -> androidx.emoji2.text.MetadataListReader$ByteBufferReader:
    315:318:void <init>(java.nio.ByteBuffer) -> <init>
    342:342:long getPosition() -> getPosition
    332:332:int readTag() -> readTag
    327:327:long readUnsignedInt() -> readUnsignedInt
    322:322:int readUnsignedShort() -> readUnsignedShort
    337:338:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$InputStreamOpenTypeReader -> androidx.emoji2.text.MetadataListReader$InputStreamOpenTypeReader:
    241:254:void <init>(java.io.InputStream) -> <init>
    291:291:long getPosition() -> getPosition
    296:300:void read(int) -> read
    272:274:int readTag() -> readTag
    265:267:long readUnsignedInt() -> readUnsignedInt
    258:260:int readUnsignedShort() -> readUnsignedShort
    279:287:void skip(int) -> skip
androidx.emoji2.text.MetadataListReader$OffsetInfo -> androidx.emoji2.text.MetadataListReader$OffsetInfo:
    171:174:void <init>(long,long) -> <init>
    181:181:long getLength() -> getLength
    177:177:long getStartOffset() -> getStartOffset
androidx.emoji2.text.MetadataRepo -> androidx.emoji2.text.MetadataRepo:
    75:81:void <init>(android.graphics.Typeface,androidx.emoji2.text.flatbuffer.MetadataList) -> <init>
    160:169:void constructIndex(androidx.emoji2.text.flatbuffer.MetadataList) -> constructIndex
    93:97:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface) -> create
    111:115:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.io.InputStream) -> create
    129:133:androidx.emoji2.text.MetadataRepo create(android.graphics.Typeface,java.nio.ByteBuffer) -> create
    147:153:androidx.emoji2.text.MetadataRepo create(android.content.res.AssetManager,java.lang.String) -> create
    203:203:char[] getEmojiCharArray() -> getEmojiCharArray
    212:212:androidx.emoji2.text.flatbuffer.MetadataList getMetadataList() -> getMetadataList
    185:185:int getMetadataVersion() -> getMetadataVersion
    194:194:androidx.emoji2.text.MetadataRepo$Node getRootNode() -> getRootNode
    177:177:android.graphics.Typeface getTypeface() -> getTypeface
    223:228:void put(androidx.emoji2.text.EmojiMetadata) -> put
androidx.emoji2.text.MetadataRepo$Node -> androidx.emoji2.text.MetadataRepo$Node:
    242:243:void <init>() -> <init>
    246:248:void <init>(int) -> <init>
    251:251:androidx.emoji2.text.MetadataRepo$Node get(int) -> get
    255:255:androidx.emoji2.text.EmojiMetadata getData() -> getData
    260:271:void put(androidx.emoji2.text.EmojiMetadata,int,int) -> put
androidx.emoji2.text.SpannableBuilder -> androidx.emoji2.text.SpannableBuilder:
    58:67:void <init>(java.lang.Class) -> <init>
    58:77:void <init>(java.lang.Class,java.lang.CharSequence) -> <init>
    58:88:void <init>(java.lang.Class,java.lang.CharSequence,int,int) -> <init>
    48:48:android.text.Editable append(char) -> append
    48:48:android.text.Editable append(java.lang.CharSequence) -> append
    48:48:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    48:48:java.lang.Appendable append(char) -> append
    48:48:java.lang.Appendable append(java.lang.CharSequence) -> append
    48:48:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    343:344:android.text.SpannableStringBuilder append(java.lang.CharSequence) -> append
    350:351:android.text.SpannableStringBuilder append(char) -> append
    359:360:android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int) -> append
    366:367:android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int) -> append
    260:261:void beginBatchEdit() -> beginBatchEdit
    276:279:void blockWatchers() -> blockWatchers
    96:96:androidx.emoji2.text.SpannableBuilder create(java.lang.Class,java.lang.CharSequence) -> create
    48:48:android.text.Editable delete(int,int) -> delete
    336:337:android.text.SpannableStringBuilder delete(int,int) -> delete
    268:270:void endBatchEdit() -> endBatchEdit
    295:298:void fireWatchers() -> fireWatchers
    204:210:int getSpanEnd(java.lang.Object) -> getSpanEnd
    218:224:int getSpanFlags(java.lang.Object) -> getSpanFlags
    190:196:int getSpanStart(java.lang.Object) -> getSpanStart
    150:159:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    246:252:androidx.emoji2.text.SpannableBuilder$WatcherWrapper getWatcherFor(java.lang.Object) -> getWatcherFor
    48:48:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    48:48:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    322:323:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence) -> insert
    329:330:android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    107:107:boolean isWatcher(java.lang.Object) -> isWatcher
    118:118:boolean isWatcher(java.lang.Class) -> isWatcher
    232:235:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    169:183:void removeSpan(java.lang.Object) -> removeSpan
    48:48:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    48:48:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    303:306:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence) -> replace
    313:316:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int) -> replace
    134:140:void setSpan(java.lang.Object,int,int,int) -> setSpan
    124:124:java.lang.CharSequence subSequence(int,int) -> subSequence
    285:288:void unblockwatchers() -> unblockwatchers
androidx.emoji2.text.SpannableBuilder$WatcherWrapper -> androidx.emoji2.text.SpannableBuilder$WatcherWrapper:
    376:380:void <init>(java.lang.Object) -> <init>
    394:395:void afterTextChanged(android.text.Editable) -> afterTextChanged
    384:385:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    435:436:void blockCalls() -> blockCalls
    443:443:boolean isEmojiSpan(java.lang.Object) -> isEmojiSpan
    403:407:void onSpanAdded(android.text.Spannable,java.lang.Object,int,int) -> onSpanAdded
    428:432:void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int) -> onSpanChanged
    415:419:void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int) -> onSpanRemoved
    389:390:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    439:440:void unblockCalls() -> unblockCalls
androidx.emoji2.text.TypefaceEmojiSpan -> androidx.emoji2.text.TypefaceEmojiSpan:
    49:50:void <init>(androidx.emoji2.text.EmojiMetadata) -> <init>
    57:61:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    65:70:android.graphics.Paint getDebugPaint() -> getDebugPaint
androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf -> androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf:
    20:21:void <init>() -> <init>
    24:25:void <init>(int) -> <init>
    27:30:void <init>(byte[]) -> <init>
    32:35:void <init>(byte[],int) -> <init>
    89:89:byte[] data() -> data
    44:44:byte get(int) -> get
    39:39:boolean getBoolean(int) -> getBoolean
    79:79:double getDouble(int) -> getDouble
    74:74:float getFloat(int) -> getFloat
    54:54:int getInt(int) -> getInt
    62:62:long getLong(int) -> getLong
    49:49:short getShort(int) -> getShort
    84:84:java.lang.String getString(int,int) -> getString
    222:222:int limit() -> limit
    101:103:void put(byte[],int,int) -> put
    107:109:void put(byte) -> put
    95:97:void putBoolean(boolean) -> putBoolean
    137:139:void putDouble(double) -> putDouble
    131:133:void putFloat(float) -> putFloat
    119:121:void putInt(int) -> putInt
    125:127:void putLong(long) -> putLong
    113:115:void putShort(short) -> putShort
    232:239:boolean requestCapacity(int) -> requestCapacity
    148:150:void set(int,byte) -> set
    154:156:void set(int,byte[],int,int) -> set
    143:144:void setBoolean(int,boolean) -> setBoolean
    205:218:void setDouble(int,double) -> setDouble
    194:201:void setFloat(int,float) -> setFloat
    168:174:void setInt(int,int) -> setInt
    178:190:void setLong(int,long) -> setLong
    160:164:void setShort(int,short) -> setShort
    227:227:int writePosition() -> writePosition
androidx.emoji2.text.flatbuffer.BaseVector -> androidx.emoji2.text.flatbuffer.BaseVector:
    26:26:void <init>() -> <init>
    52:52:int __element(int) -> __element
    63:73:void __reset(int,int,java.nio.ByteBuffer) -> __reset
    42:42:int __vector() -> __vector
    92:92:int length() -> length
    83:84:void reset() -> reset
androidx.emoji2.text.flatbuffer.BooleanVector -> androidx.emoji2.text.flatbuffer.BooleanVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.BooleanVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:boolean get(int) -> get
androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf -> androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf:
    10:13:void <init>(java.nio.ByteBuffer) -> <init>
    57:57:byte[] data() -> data
    22:22:byte get(int) -> get
    17:17:boolean getBoolean(int) -> getBoolean
    47:47:double getDouble(int) -> getDouble
    42:42:float getFloat(int) -> getFloat
    32:32:int getInt(int) -> getInt
    37:37:long getLong(int) -> getLong
    27:27:short getShort(int) -> getShort
    52:52:java.lang.String getString(int,int) -> getString
    157:157:int limit() -> limit
    67:68:void put(byte[],int,int) -> put
    72:73:void put(byte) -> put
    62:63:void putBoolean(boolean) -> putBoolean
    97:98:void putDouble(double) -> putDouble
    92:93:void putFloat(float) -> putFloat
    82:83:void putInt(int) -> putInt
    87:88:void putLong(long) -> putLong
    77:78:void putShort(short) -> putShort
    162:162:boolean requestCapacity(int) -> requestCapacity
    107:109:void set(int,byte) -> set
    113:118:void set(int,byte[],int,int) -> set
    102:103:void setBoolean(int,boolean) -> setBoolean
    146:148:void setDouble(int,double) -> setDouble
    140:142:void setFloat(int,float) -> setFloat
    128:130:void setInt(int,int) -> setInt
    134:136:void setLong(int,long) -> setLong
    122:124:void setShort(int,short) -> setShort
    152:152:int writePosition() -> writePosition
androidx.emoji2.text.flatbuffer.ByteBufferUtil -> androidx.emoji2.text.flatbuffer.ByteBufferUtil:
    30:30:void <init>() -> <init>
    39:39:int getSizePrefix(java.nio.ByteBuffer) -> getSizePrefix
    51:53:java.nio.ByteBuffer removeSizePrefix(java.nio.ByteBuffer) -> removeSizePrefix
androidx.emoji2.text.flatbuffer.ByteVector -> androidx.emoji2.text.flatbuffer.ByteVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.ByteVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:byte get(int) -> get
    58:58:int getAsUnsigned(int) -> getAsUnsigned
androidx.emoji2.text.flatbuffer.Constants -> androidx.emoji2.text.flatbuffer.Constants:
    24:24:void <init>() -> <init>
    49:49:void FLATBUFFERS_1_12_0() -> FLATBUFFERS_1_12_0
androidx.emoji2.text.flatbuffer.DoubleVector -> androidx.emoji2.text.flatbuffer.DoubleVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.DoubleVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:double get(int) -> get
androidx.emoji2.text.flatbuffer.FlatBufferBuilder -> androidx.emoji2.text.flatbuffer.FlatBufferBuilder:
    34:34:void <clinit>() -> <clinit>
    59:60:void <init>(int,androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) -> <init>
    38:85:void <init>(int,androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory,java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.Utf8) -> <init>
    93:94:void <init>(int) -> <init>
    100:101:void <init>() -> <init>
    113:114:void <init>(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) -> <init>
    124:125:void <init>(java.nio.ByteBuffer) -> <init>
    635:637:void Nested(int) -> Nested
    360:360:void addBoolean(boolean) -> addBoolean
    697:697:void addBoolean(int,boolean,boolean) -> addBoolean
    367:367:void addByte(byte) -> addByte
    708:708:void addByte(int,byte,int) -> addByte
    402:402:void addDouble(double) -> addDouble
    763:763:void addDouble(int,double,double) -> addDouble
    395:395:void addFloat(float) -> addFloat
    752:752:void addFloat(int,float,double) -> addFloat
    381:381:void addInt(int) -> addInt
    730:730:void addInt(int,int,int) -> addInt
    388:388:void addLong(long) -> addLong
    741:741:void addLong(int,long,long) -> addLong
    410:414:void addOffset(int) -> addOffset
    774:774:void addOffset(int,int,int) -> addOffset
    374:374:void addShort(short) -> addShort
    719:719:void addShort(int,short,int) -> addShort
    784:788:void addStruct(int,int,int) -> addStruct
    217:227:void clear() -> clear
    568:572:int createByteVector(byte[]) -> createByteVector
    584:587:int createByteVector(byte[],int,int) -> createByteVector
    600:604:int createByteVector(java.nio.ByteBuffer) -> createByteVector
    526:527:int createSortedVectorOfTables(androidx.emoji2.text.flatbuffer.Table,int[]) -> createSortedVectorOfTables
    538:543:int createString(java.lang.CharSequence) -> createString
    553:558:int createString(java.nio.ByteBuffer) -> createString
    494:502:java.nio.ByteBuffer createUnintializedVector(int,int,int) -> createUnintializedVector
    512:515:int createVectorOfTables(int[]) -> createVectorOfTables
    976:977:java.nio.ByteBuffer dataBuffer() -> dataBuffer
    990:991:int dataStart() -> dataStart
    807:860:int endTable() -> endTable
    475:479:int endVector() -> endVector
    887:894:void finish(int,boolean) -> finish
    902:903:void finish(int) -> finish
    923:931:void finish(int,java.lang.String,boolean) -> finish
    941:942:void finish(int,java.lang.String) -> finish
    911:912:void finishSizePrefixed(int) -> finishSizePrefixed
    952:953:void finishSizePrefixed(int,java.lang.String) -> finishSizePrefixed
    612:616:void finished() -> finished
    964:965:androidx.emoji2.text.flatbuffer.FlatBufferBuilder forceDefaults(boolean) -> forceDefaults
    239:248:java.nio.ByteBuffer growByteBuffer(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) -> growByteBuffer
    138:150:androidx.emoji2.text.flatbuffer.FlatBufferBuilder init(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) -> init
    210:210:boolean isFieldPresent(androidx.emoji2.text.flatbuffer.Table,int) -> isFieldPresent
    623:625:void notNested() -> notNested
    257:257:int offset() -> offset
    266:267:void pad(int) -> pad
    281:296:void prep(int,int) -> prep
    304:304:void putBoolean(boolean) -> putBoolean
    312:312:void putByte(byte) -> putByte
    352:352:void putDouble(double) -> putDouble
    344:344:void putFloat(float) -> putFloat
    328:328:void putInt(int) -> putInt
    336:336:void putLong(long) -> putLong
    320:320:void putShort(short) -> putShort
    871:877:void required(int,int) -> required
    1004:1008:byte[] sizedByteArray(int,int) -> sizedByteArray
    1017:1017:byte[] sizedByteArray() -> sizedByteArray
    1027:1031:java.io.InputStream sizedInputStream() -> sizedInputStream
    797:798:void slot(int) -> slot
    680:686:void startTable(int) -> startTable
    460:465:void startVector(int,int,int) -> startVector
androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferBackedInputStream -> androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferBackedInputStream:
    1041:1043:void <init>(java.nio.ByteBuffer) -> <init>
    1047:1049:int read() -> read
androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory -> androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory:
    163:163:void <init>() -> <init>
    183:183:void releaseByteBuffer(java.nio.ByteBuffer) -> releaseByteBuffer
androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory -> androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory:
    194:194:void <clinit>() -> <clinit>
    192:192:void <init>() -> <init>
    198:198:java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
androidx.emoji2.text.flatbuffer.FlexBuffers -> androidx.emoji2.text.flatbuffer.FlexBuffers:
    45:103:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    45:45:androidx.emoji2.text.flatbuffer.ReadBuf access$000() -> access$000
    45:45:int access$100(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> access$100
    45:45:int access$200(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> access$200
    45:45:long access$300(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> access$300
    45:45:double access$400(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> access$400
    45:45:long access$500(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> access$500
    202:202:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference getRoot(java.nio.ByteBuffer) -> getRoot
    214:218:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference getRoot(androidx.emoji2.text.flatbuffer.ReadBuf) -> getRoot
    156:156:int indirect(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> indirect
    122:122:boolean isTypeInline(int) -> isTypeInline
    112:112:boolean isTypedVector(int) -> isTypedVector
    150:150:boolean isTypedVectorElementType(int) -> isTypedVectorElementType
    187:190:double readDouble(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> readDouble
    172:172:int readInt(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> readInt
    177:182:long readLong(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> readLong
    161:166:long readUInt(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> readUInt
    137:144:int toTypedVector(int,int) -> toTypedVector
    126:126:int toTypedVectorElementType(int) -> toTypedVectorElementType
androidx.emoji2.text.flatbuffer.FlexBuffers$Blob -> androidx.emoji2.text.flatbuffer.FlexBuffers$Blob:
    673:674:void <clinit>() -> <clinit>
    677:678:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    690:693:java.nio.ByteBuffer data() -> data
    682:682:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob empty() -> empty
    714:715:byte get(int) -> get
    701:706:byte[] getBytes() -> getBytes
    673:673:int size() -> size
    723:723:java.lang.String toString() -> toString
    731:733:java.lang.StringBuilder toString(java.lang.StringBuilder) -> toString
androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException -> androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException:
    1083:1084:void <init>(java.lang.String) -> <init>
androidx.emoji2.text.flatbuffer.FlexBuffers$Key -> androidx.emoji2.text.flatbuffer.FlexBuffers$Key:
    743:743:void <clinit>() -> <clinit>
    746:747:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    741:741:androidx.emoji2.text.flatbuffer.FlexBuffers$Key access$700() -> access$700
    778:795:int compareTo(byte[]) -> compareTo
    754:754:androidx.emoji2.text.flatbuffer.FlexBuffers$Key empty() -> empty
    805:808:boolean equals(java.lang.Object) -> equals
    812:812:int hashCode() -> hashCode
    762:762:java.lang.StringBuilder toString(java.lang.StringBuilder) -> toString
    768:774:java.lang.String toString() -> toString
androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector -> androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector:
    1039:1041:void <init>(androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) -> <init>
    1050:1053:androidx.emoji2.text.flatbuffer.FlexBuffers$Key get(int) -> get
    1062:1062:int size() -> size
    1069:1077:java.lang.String toString() -> toString
androidx.emoji2.text.flatbuffer.FlexBuffers$Map -> androidx.emoji2.text.flatbuffer.FlexBuffers$Map:
    820:820:void <clinit>() -> <clinit>
    823:824:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    902:916:int binarySearch(androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector,byte[]) -> binarySearch
    831:831:androidx.emoji2.text.flatbuffer.FlexBuffers$Map empty() -> empty
    839:839:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference get(java.lang.String) -> get
    847:853:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference get(byte[]) -> get
    862:866:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector keys() -> keys
    884:897:java.lang.StringBuilder toString(java.lang.StringBuilder) -> toString
    874:874:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector values() -> values
androidx.emoji2.text.flatbuffer.FlexBuffers$Object -> androidx.emoji2.text.flatbuffer.FlexBuffers$Object:
    637:641:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    645:645:java.lang.String toString() -> toString
androidx.emoji2.text.flatbuffer.FlexBuffers$Reference -> androidx.emoji2.text.flatbuffer.FlexBuffers$Reference:
    226:226:void <clinit>() -> <clinit>
    234:235:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int,int) -> <init>
    237:243:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int,int,int) -> <init>
    224:224:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference access$600() -> access$600
    546:549:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob asBlob() -> asBlob
    559:562:boolean asBoolean() -> asBoolean
    457:474:double asFloat() -> asFloat
    366:382:int asInt() -> asInt
    483:486:androidx.emoji2.text.flatbuffer.FlexBuffers$Key asKey() -> asKey
    424:446:long asLong() -> asLong
    517:520:androidx.emoji2.text.flatbuffer.FlexBuffers$Map asMap() -> asMap
    495:508:java.lang.String asString() -> asString
    395:411:long asUInt() -> asUInt
    529:537:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector asVector() -> asVector
    250:250:int getType() -> getType
    354:354:boolean isBlob() -> isBlob
    266:266:boolean isBoolean() -> isBoolean
    290:290:boolean isFloat() -> isFloat
    298:298:boolean isInt() -> isInt
    282:282:boolean isIntOrUInt() -> isIntOrUInt
    322:322:boolean isKey() -> isKey
    346:346:boolean isMap() -> isMap
    258:258:boolean isNull() -> isNull
    274:274:boolean isNumeric() -> isNumeric
    314:314:boolean isString() -> isString
    338:338:boolean isTypedVector() -> isTypedVector
    306:306:boolean isUInt() -> isUInt
    330:330:boolean isVector() -> isVector
    571:571:java.lang.String toString() -> toString
    580:623:java.lang.StringBuilder toString(java.lang.StringBuilder) -> toString
androidx.emoji2.text.flatbuffer.FlexBuffers$Sized -> androidx.emoji2.text.flatbuffer.FlexBuffers$Sized:
    657:659:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    662:662:int size() -> size
androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector -> androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector:
    986:986:void <clinit>() -> <clinit>
    991:993:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int,int) -> <init>
    996:996:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector empty() -> empty
    1025:1028:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference get(int) -> get
    1014:1014:int getElemType() -> getElemType
    1005:1005:boolean isEmptyVector() -> isEmptyVector
androidx.emoji2.text.flatbuffer.FlexBuffers$Unsigned -> androidx.emoji2.text.flatbuffer.FlexBuffers$Unsigned:
    1087:1087:void <init>() -> <init>
    1090:1090:int byteToUnsignedInt(byte) -> byteToUnsignedInt
    1098:1098:long intToUnsignedLong(int) -> intToUnsignedLong
    1094:1094:int shortToUnsignedInt(short) -> shortToUnsignedInt
androidx.emoji2.text.flatbuffer.FlexBuffers$Vector -> androidx.emoji2.text.flatbuffer.FlexBuffers$Vector:
    925:925:void <clinit>() -> <clinit>
    928:929:void <init>(androidx.emoji2.text.flatbuffer.ReadBuf,int,int) -> <init>
    936:936:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector empty() -> empty
    971:977:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference get(int) -> get
    944:944:boolean isEmpty() -> isEmpty
    923:923:int size() -> size
    923:923:java.lang.String toString() -> toString
    952:961:java.lang.StringBuilder toString(java.lang.StringBuilder) -> toString
androidx.emoji2.text.flatbuffer.FlexBuffersBuilder -> androidx.emoji2.text.flatbuffer.FlexBuffersBuilder:
    51:51:void <clinit>() -> <clinit>
    119:120:void <init>(int) -> <init>
    126:127:void <init>() -> <init>
    137:138:void <init>(java.nio.ByteBuffer,int) -> <init>
    87:143:void <init>(androidx.emoji2.text.flatbuffer.ReadWriteBuf,int) -> <init>
    151:152:void <init>(java.nio.ByteBuffer) -> <init>
    51:51:androidx.emoji2.text.flatbuffer.ReadWriteBuf access$000(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) -> access$000
    392:397:int align(int) -> align
    614:633:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value createKeyVector(int,int) -> createKeyVector
    494:547:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value createVector(int,int,int,boolean,boolean,androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) -> createVector
    598:609:int endMap(java.lang.String,int) -> endMap
    449:456:int endVector(java.lang.String,int,boolean,boolean) -> endVector
    470:479:java.nio.ByteBuffer finish() -> finish
    161:162:androidx.emoji2.text.flatbuffer.ReadWriteBuf getBuffer() -> getBuffer
    415:415:int putBlob(byte[]) -> putBlob
    425:428:int putBlob(java.lang.String,byte[]) -> putBlob
    170:171:void putBoolean(boolean) -> putBoolean
    179:180:void putBoolean(java.lang.String,boolean) -> putBoolean
    301:302:void putFloat(float) -> putFloat
    310:311:void putFloat(java.lang.String,float) -> putFloat
    318:319:void putFloat(double) -> putFloat
    327:328:void putFloat(java.lang.String,double) -> putFloat
    211:212:void putInt(int) -> putInt
    220:221:void putInt(java.lang.String,int) -> putInt
    229:239:void putInt(java.lang.String,long) -> putInt
    246:247:void putInt(long) -> putInt
    183:203:int putKey(java.lang.String) -> putKey
    336:336:int putString(java.lang.String) -> putString
    346:362:int putString(java.lang.String,java.lang.String) -> putString
    254:255:void putUInt(int) -> putUInt
    262:263:void putUInt(long) -> putUInt
    279:294:void putUInt(java.lang.String,long) -> putUInt
    271:272:void putUInt64(java.math.BigInteger) -> putUInt64
    275:276:void putUInt64(java.lang.String,long) -> putUInt64
    588:588:int startMap() -> startMap
    437:437:int startVector() -> startVector
    372:375:int widthUInBits(long) -> widthUInBits
    558:572:void writeAny(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value,int) -> writeAny
    379:387:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value writeBlob(int,byte[],int,boolean) -> writeBlob
    575:580:void writeDouble(double,int) -> writeDouble
    401:407:void writeInt(long,int) -> writeInt
    552:555:void writeOffset(long,int) -> writeOffset
    367:367:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value writeString(int,java.lang.String) -> writeString
androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$1 -> androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$1:
    94:94:void <init>(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) -> <init>
    94:94:int compare(java.lang.Object,java.lang.Object) -> compare
    97:109:int compare(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value,androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) -> compare
androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value -> androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value:
    636:636:void <clinit>() -> <clinit>
    649:655:void <init>(int,int,int,long) -> <init>
    657:663:void <init>(int,int,int,double) -> <init>
    636:636:int access$100(int,int) -> access$100
    636:636:int access$200(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value,int,int) -> access$200
    636:636:byte access$300(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) -> access$300
    636:636:byte access$400(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value,int) -> access$400
    636:636:int access$500(int,int,long,int,int) -> access$500
    670:670:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value blob(int,int,int,int) -> blob
    666:666:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value bool(int,boolean) -> bool
    734:734:int elemWidth(int,int) -> elemWidth
    738:759:int elemWidth(int,int,long,int,int) -> elemWidth
    706:706:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value float32(int,float) -> float32
    710:710:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value float64(int,double) -> float64
    678:678:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value int16(int,int) -> int16
    682:682:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value int32(int,int) -> int32
    686:686:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value int64(int,long) -> int64
    674:674:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value int8(int,int) -> int8
    722:722:byte packedType(int,int) -> packedType
    765:765:int paddingBytes(int,int) -> paddingBytes
    714:714:byte storedPackedType() -> storedPackedType
    718:718:byte storedPackedType(int) -> storedPackedType
    726:729:int storedWidth(int) -> storedWidth
    694:694:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value uInt16(int,int) -> uInt16
    698:698:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value uInt32(int,int) -> uInt32
    702:702:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value uInt64(int,long) -> uInt64
    690:690:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value uInt8(int,int) -> uInt8
androidx.emoji2.text.flatbuffer.FloatVector -> androidx.emoji2.text.flatbuffer.FloatVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.FloatVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:float get(int) -> get
androidx.emoji2.text.flatbuffer.IntVector -> androidx.emoji2.text.flatbuffer.IntVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.IntVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:int get(int) -> get
    58:58:long getAsUnsigned(int) -> getAsUnsigned
androidx.emoji2.text.flatbuffer.LongVector -> androidx.emoji2.text.flatbuffer.LongVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.LongVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:long get(int) -> get
androidx.emoji2.text.flatbuffer.MetadataItem -> androidx.emoji2.text.flatbuffer.MetadataItem:
    28:28:void <init>() -> <init>
    29:29:void ValidateVersion() -> ValidateVersion
    33:33:androidx.emoji2.text.flatbuffer.MetadataItem __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    28:28:int access$000(int,java.nio.ByteBuffer) -> access$000
    74:74:void addCodepoints(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> addCodepoints
    71:71:void addCompatAdded(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,short) -> addCompatAdded
    69:69:void addEmojiStyle(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,boolean) -> addEmojiStyle
    73:73:void addHeight(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,short) -> addHeight
    68:68:void addId(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> addId
    70:70:void addSdkAdded(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,short) -> addSdkAdded
    72:72:void addWidth(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,short) -> addWidth
    41:41:int codepoints(int) -> codepoints
    45:45:java.nio.ByteBuffer codepointsAsByteBuffer() -> codepointsAsByteBuffer
    46:46:java.nio.ByteBuffer codepointsInByteBuffer(java.nio.ByteBuffer) -> codepointsInByteBuffer
    42:42:int codepointsLength() -> codepointsLength
    43:43:androidx.emoji2.text.flatbuffer.IntVector codepointsVector() -> codepointsVector
    44:44:androidx.emoji2.text.flatbuffer.IntVector codepointsVector(androidx.emoji2.text.flatbuffer.IntVector) -> codepointsVector
    38:38:short compatAdded() -> compatAdded
    75:75:int createCodepointsVector(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int[]) -> createCodepointsVector
    56:64:int createMetadataItem(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int,boolean,short,short,short,short,int) -> createMetadataItem
    36:36:boolean emojiStyle() -> emojiStyle
    78:79:int endMetadataItem(androidx.emoji2.text.flatbuffer.FlatBufferBuilder) -> endMetadataItem
    30:30:androidx.emoji2.text.flatbuffer.MetadataItem getRootAsMetadataItem(java.nio.ByteBuffer) -> getRootAsMetadataItem
    31:31:androidx.emoji2.text.flatbuffer.MetadataItem getRootAsMetadataItem(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataItem) -> getRootAsMetadataItem
    40:40:short height() -> height
    35:35:int id() -> id
    37:37:short sdkAdded() -> sdkAdded
    76:76:void startCodepointsVector(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> startCodepointsVector
    67:67:void startMetadataItem(androidx.emoji2.text.flatbuffer.FlatBufferBuilder) -> startMetadataItem
    39:39:short width() -> width
androidx.emoji2.text.flatbuffer.MetadataItem$Vector -> androidx.emoji2.text.flatbuffer.MetadataItem$Vector:
    82:82:void <init>() -> <init>
    83:83:androidx.emoji2.text.flatbuffer.MetadataItem$Vector __assign(int,int,java.nio.ByteBuffer) -> __assign
    85:85:androidx.emoji2.text.flatbuffer.MetadataItem get(int) -> get
    86:86:androidx.emoji2.text.flatbuffer.MetadataItem get(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> get
androidx.emoji2.text.flatbuffer.MetadataList -> androidx.emoji2.text.flatbuffer.MetadataList:
    28:28:void <init>() -> <init>
    29:29:void ValidateVersion() -> ValidateVersion
    33:33:androidx.emoji2.text.flatbuffer.MetadataList __assign(int,java.nio.ByteBuffer) -> __assign
    32:32:void __init(int,java.nio.ByteBuffer) -> __init
    28:28:int access$000(int,java.nio.ByteBuffer) -> access$000
    58:58:void addList(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> addList
    61:61:void addSourceSha(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> addSourceSha
    57:57:void addVersion(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> addVersion
    59:59:int createListVector(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int[]) -> createListVector
    49:53:int createMetadataList(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int,int,int) -> createMetadataList
    63:64:int endMetadataList(androidx.emoji2.text.flatbuffer.FlatBufferBuilder) -> endMetadataList
    66:66:void finishMetadataListBuffer(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> finishMetadataListBuffer
    67:67:void finishSizePrefixedMetadataListBuffer(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> finishSizePrefixedMetadataListBuffer
    30:30:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer) -> getRootAsMetadataList
    31:31:androidx.emoji2.text.flatbuffer.MetadataList getRootAsMetadataList(java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.MetadataList) -> getRootAsMetadataList
    36:36:androidx.emoji2.text.flatbuffer.MetadataItem list(int) -> list
    37:37:androidx.emoji2.text.flatbuffer.MetadataItem list(androidx.emoji2.text.flatbuffer.MetadataItem,int) -> list
    38:38:int listLength() -> listLength
    39:39:androidx.emoji2.text.flatbuffer.MetadataItem$Vector listVector() -> listVector
    40:40:androidx.emoji2.text.flatbuffer.MetadataItem$Vector listVector(androidx.emoji2.text.flatbuffer.MetadataItem$Vector) -> listVector
    41:41:java.lang.String sourceSha() -> sourceSha
    42:42:java.nio.ByteBuffer sourceShaAsByteBuffer() -> sourceShaAsByteBuffer
    43:43:java.nio.ByteBuffer sourceShaInByteBuffer(java.nio.ByteBuffer) -> sourceShaInByteBuffer
    60:60:void startListVector(androidx.emoji2.text.flatbuffer.FlatBufferBuilder,int) -> startListVector
    56:56:void startMetadataList(androidx.emoji2.text.flatbuffer.FlatBufferBuilder) -> startMetadataList
    35:35:int version() -> version
androidx.emoji2.text.flatbuffer.MetadataList$Vector -> androidx.emoji2.text.flatbuffer.MetadataList$Vector:
    69:69:void <init>() -> <init>
    70:70:androidx.emoji2.text.flatbuffer.MetadataList$Vector __assign(int,int,java.nio.ByteBuffer) -> __assign
    72:72:androidx.emoji2.text.flatbuffer.MetadataList get(int) -> get
    73:73:androidx.emoji2.text.flatbuffer.MetadataList get(androidx.emoji2.text.flatbuffer.MetadataList,int) -> get
androidx.emoji2.text.flatbuffer.ShortVector -> androidx.emoji2.text.flatbuffer.ShortVector:
    27:27:void <init>() -> <init>
    37:37:androidx.emoji2.text.flatbuffer.ShortVector __assign(int,java.nio.ByteBuffer) -> __assign
    47:47:short get(int) -> get
    58:58:int getAsUnsigned(int) -> getAsUnsigned
androidx.emoji2.text.flatbuffer.StringVector -> androidx.emoji2.text.flatbuffer.StringVector:
    27:28:void <init>() -> <init>
    40:40:androidx.emoji2.text.flatbuffer.StringVector __assign(int,int,java.nio.ByteBuffer) -> __assign
    50:50:java.lang.String get(int) -> get
androidx.emoji2.text.flatbuffer.Struct -> androidx.emoji2.text.flatbuffer.Struct:
    26:26:void <init>() -> <init>
    39:45:void __reset(int,java.nio.ByteBuffer) -> __reset
    57:58:void __reset() -> __reset
androidx.emoji2.text.flatbuffer.Table -> androidx.emoji2.text.flatbuffer.Table:
    28:37:void <init>() -> <init>
    214:220:boolean __has_identifier(java.nio.ByteBuffer,java.lang.String) -> __has_identifier
    68:68:int __indirect(int) -> __indirect
    79:79:int __indirect(int,java.nio.ByteBuffer) -> __indirect
    53:53:int __offset(int) -> __offset
    57:58:int __offset(int,int,java.nio.ByteBuffer) -> __offset
    298:308:void __reset(int,java.nio.ByteBuffer) -> __reset
    318:319:void __reset() -> __reset
    94:94:java.lang.String __string(int) -> __string
    111:113:java.lang.String __string(int,java.nio.ByteBuffer,androidx.emoji2.text.flatbuffer.Utf8) -> __string
    189:189:androidx.emoji2.text.flatbuffer.Table __union(androidx.emoji2.text.flatbuffer.Table,int) -> __union
    201:202:androidx.emoji2.text.flatbuffer.Table __union(androidx.emoji2.text.flatbuffer.Table,int,java.nio.ByteBuffer) -> __union
    135:136:int __vector(int) -> __vector
    151:157:java.nio.ByteBuffer __vector_as_bytebuffer(int,int) -> __vector_as_bytebuffer
    172:178:java.nio.ByteBuffer __vector_in_bytebuffer(java.nio.ByteBuffer,int,int) -> __vector_in_bytebuffer
    123:125:int __vector_len(int) -> __vector_len
    257:268:int compareStrings(int,int,java.nio.ByteBuffer) -> compareStrings
    279:288:int compareStrings(int,byte[],java.nio.ByteBuffer) -> compareStrings
    44:44:java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    247:247:int keysCompare(java.lang.Integer,java.lang.Integer,java.nio.ByteBuffer) -> keysCompare
    230:238:void sortTables(int[],java.nio.ByteBuffer) -> sortTables
androidx.emoji2.text.flatbuffer.Table$1 -> androidx.emoji2.text.flatbuffer.Table$1:
    232:232:void <init>(androidx.emoji2.text.flatbuffer.Table,java.nio.ByteBuffer) -> <init>
    232:232:int compare(java.lang.Object,java.lang.Object) -> compare
    234:234:int compare(java.lang.Integer,java.lang.Integer) -> compare
androidx.emoji2.text.flatbuffer.UnionVector -> androidx.emoji2.text.flatbuffer.UnionVector:
    27:27:void <init>() -> <init>
    38:38:androidx.emoji2.text.flatbuffer.UnionVector __assign(int,int,java.nio.ByteBuffer) -> __assign
    50:50:androidx.emoji2.text.flatbuffer.Table get(androidx.emoji2.text.flatbuffer.Table,int) -> get
androidx.emoji2.text.flatbuffer.Utf8 -> androidx.emoji2.text.flatbuffer.Utf8:
    25:25:void <init>() -> <init>
    62:65:androidx.emoji2.text.flatbuffer.Utf8 getDefault() -> getDefault
    73:74:void setDefault(androidx.emoji2.text.flatbuffer.Utf8) -> setDefault
androidx.emoji2.text.flatbuffer.Utf8$DecodeUtil -> androidx.emoji2.text.flatbuffer.Utf8$DecodeUtil:
    81:81:void <init>() -> <init>
    140:159:void handleFourBytes(byte,byte,byte,byte,char[],int) -> handleFourBytes
    105:106:void handleOneByte(byte,char[],int) -> handleOneByte
    125:135:void handleThreeBytes(byte,byte,byte,char[],int) -> handleThreeBytes
    113:120:void handleTwoBytes(byte,byte,char[],int) -> handleTwoBytes
    176:176:char highSurrogate(int) -> highSurrogate
    165:165:boolean isNotTrailingByte(byte) -> isNotTrailingByte
    87:87:boolean isOneByte(byte) -> isOneByte
    101:101:boolean isThreeBytes(byte) -> isThreeBytes
    94:94:boolean isTwoBytes(byte) -> isTwoBytes
    181:181:char lowSurrogate(int) -> lowSurrogate
    172:172:int trailingByteValue(byte) -> trailingByteValue
androidx.emoji2.text.flatbuffer.Utf8$UnpairedSurrogateException -> androidx.emoji2.text.flatbuffer.Utf8$UnpairedSurrogateException:
    190:191:void <init>(int,int) -> <init>
androidx.emoji2.text.flatbuffer.Utf8Old -> androidx.emoji2.text.flatbuffer.Utf8Old:
    45:46:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    androidx.emoji2.text.flatbuffer.Utf8Old$Cache $r8$lambda$3aH_IojK_oDyJD-2_vEnld_hMZQ() -> a
      # {"id":"com.android.tools.r8.synthesized"}
    87:96:java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int) -> decodeUtf8
    76:83:void encodeUtf8(java.lang.CharSequence,java.nio.ByteBuffer) -> encodeUtf8
    53:71:int encodedLength(java.lang.CharSequence) -> encodedLength
    46:46:androidx.emoji2.text.flatbuffer.Utf8Old$Cache lambda$static$0() -> lambda$static$0
androidx.emoji2.text.flatbuffer.Utf8Old$$ExternalSyntheticLambda0 -> androidx.emoji2.text.flatbuffer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.emoji2.text.flatbuffer.Utf8Old$$InternalSyntheticLambda$0$207dd99c70266e21e4ed4aa5fd4a9ec9f979d8e7adddc46f9621adfaa85e8d9e$0 androidx.emoji2.text.flatbuffer.Utf8Old$$InternalSyntheticLambda$0$207dd99c70266e21e4ed4aa5fd4a9ec9f979d8e7adddc46f9621adfaa85e8d9e$0.INSTANCE -> a
    void androidx.emoji2.text.flatbuffer.Utf8Old$$InternalSyntheticLambda$0$207dd99c70266e21e4ed4aa5fd4a9ec9f979d8e7adddc46f9621adfaa85e8d9e$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void androidx.emoji2.text.flatbuffer.Utf8Old$$InternalSyntheticLambda$0$207dd99c70266e21e4ed4aa5fd4a9ec9f979d8e7adddc46f9621adfaa85e8d9e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.emoji2.text.flatbuffer.Utf8Old$$InternalSyntheticLambda$0$207dd99c70266e21e4ed4aa5fd4a9ec9f979d8e7adddc46f9621adfaa85e8d9e$0.get() -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.emoji2.text.flatbuffer.Utf8Old$Cache -> androidx.emoji2.text.flatbuffer.Utf8Old$Cache:
    36:42:void <init>() -> <init>
androidx.emoji2.text.flatbuffer.Utf8Safe -> androidx.emoji2.text.flatbuffer.Utf8Safe:
    63:63:void <init>() -> <init>
    75:100:int computeEncodedLength(java.lang.CharSequence) -> computeEncodedLength
    289:292:java.lang.String decodeUtf8(java.nio.ByteBuffer,int,int) -> decodeUtf8
    128:197:java.lang.String decodeUtf8Array(byte[],int,int) -> decodeUtf8Array
    203:273:java.lang.String decodeUtf8Buffer(java.nio.ByteBuffer,int,int) -> decodeUtf8Buffer
    433:441:void encodeUtf8(java.lang.CharSequence,java.nio.ByteBuffer) -> encodeUtf8
    370:419:int encodeUtf8Array(java.lang.CharSequence,byte[],int,int) -> encodeUtf8Array
    298:366:void encodeUtf8Buffer(java.lang.CharSequence,java.nio.ByteBuffer) -> encodeUtf8Buffer
    278:278:int encodedLength(java.lang.CharSequence) -> encodedLength
    104:123:int encodedLengthGeneral(java.lang.CharSequence,int) -> encodedLengthGeneral
androidx.emoji2.text.flatbuffer.Utf8Safe$UnpairedSurrogateException -> androidx.emoji2.text.flatbuffer.Utf8Safe$UnpairedSurrogateException:
    448:449:void <init>(int,int) -> <init>
androidx.emoji2.viewsintegration.EmojiEditTextHelper -> androidx.emoji2.viewsintegration.EmojiEditTextHelper:
    82:83:void <init>(android.widget.EditText) -> <init>
    72:111:void <init>(android.widget.EditText,boolean) -> <init>
    203:203:int getEmojiReplaceStrategy() -> getEmojiReplaceStrategy
    154:154:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    138:138:int getMaxEmojiCount() -> getMaxEmojiCount
    213:213:boolean isEnabled() -> isEnabled
    172:173:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    188:190:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    226:227:void setEnabled(boolean) -> setEnabled
    125:129:void setMaxEmojiCount(int) -> setMaxEmojiCount
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal:
    230:230:void <init>() -> <init>
    234:234:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    255:255:boolean isEnabled() -> isEnabled
    239:239:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    248:248:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    252:252:void setEnabled(boolean) -> setEnabled
    244:244:void setMaxEmojiCount(int) -> setMaxEmojiCount
androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiEditTextHelper$HelperInternal19:
    264:269:void <init>(android.widget.EditText,boolean) -> <init>
    283:293:android.text.method.KeyListener getKeyListener(android.text.method.KeyListener) -> getKeyListener
    318:318:boolean isEnabled() -> isEnabled
    299:304:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    278:279:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    309:314:void setEnabled(boolean) -> setEnabled
    273:274:void setMaxEmojiCount(int) -> setMaxEmojiCount
androidx.emoji2.viewsintegration.EmojiEditableFactory -> androidx.emoji2.viewsintegration.EmojiEditableFactory:
    44:44:void <clinit>() -> <clinit>
    51:58:void <init>() -> <init>
    62:69:android.text.Editable$Factory getInstance() -> getInstance
    74:77:android.text.Editable newEditable(java.lang.CharSequence) -> newEditable
androidx.emoji2.viewsintegration.EmojiInputConnection -> androidx.emoji2.viewsintegration.EmojiInputConnection:
    49:50:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo) -> <init>
    58:62:void <init>(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) -> <init>
    66:68:boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    74:76:boolean deleteSurroundingTextInCodePoints(int,int) -> deleteSurroundingTextInCodePoints
    80:80:android.text.Editable getEditable() -> getEditable
androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper -> androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper:
    83:83:void <init>() -> <init>
    90:90:boolean handleDeleteSurroundingText(android.view.inputmethod.InputConnection,android.text.Editable,int,int,boolean) -> handleDeleteSurroundingText
    95:98:void updateEditorInfoAttrs(android.view.inputmethod.EditorInfo) -> updateEditorInfoAttrs
androidx.emoji2.viewsintegration.EmojiInputFilter -> androidx.emoji2.viewsintegration.EmojiInputFilter:
    49:51:void <init>(android.widget.TextView) -> <init>
    56:88:java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
    93:96:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    151:158:void updateSelection(android.text.Spannable,int,int) -> updateSelection
androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiInputFilter$InitCallbackImpl:
    105:108:void <init>(android.widget.TextView,androidx.emoji2.viewsintegration.EmojiInputFilter) -> <init>
    132:146:boolean isInputFilterCurrentlyRegisteredOnTextView(android.widget.TextView,android.text.InputFilter) -> isInputFilterCurrentlyRegisteredOnTextView
    112:128:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiKeyListener -> androidx.emoji2.viewsintegration.EmojiKeyListener:
    40:41:void <init>(android.text.method.KeyListener) -> <init>
    44:47:void <init>(android.text.method.KeyListener,androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) -> <init>
    73:74:void clearMetaKeyState(android.view.View,android.text.Editable,int) -> clearMetaKeyState
    51:51:int getInputType() -> getInputType
    56:58:boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyDown
    68:68:boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent) -> onKeyOther
    63:63:boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent) -> onKeyUp
androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper -> androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper:
    76:76:void <init>() -> <init>
    79:79:boolean handleKeyDown(android.text.Editable,int,android.view.KeyEvent) -> handleKeyDown
androidx.emoji2.viewsintegration.EmojiTextViewHelper -> androidx.emoji2.viewsintegration.EmojiTextViewHelper:
    75:76:void <init>(android.widget.TextView) -> <init>
    96:105:void <init>(android.widget.TextView,boolean) -> <init>
    132:132:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    180:180:boolean isEnabled() -> isEnabled
    173:174:void setAllCaps(boolean) -> setAllCaps
    163:164:void setEnabled(boolean) -> setEnabled
    115:116:void updateTransformationMethod() -> updateTransformationMethod
    145:145:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal:
    184:184:void <init>() -> <init>
    192:192:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    210:210:boolean isEnabled() -> isEnabled
    203:203:void setAllCaps(boolean) -> setAllCaps
    207:207:void setEnabled(boolean) -> setEnabled
    188:188:void updateTransformationMethod() -> updateTransformationMethod
    198:198:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19:
    322:326:void <init>(android.widget.TextView) -> <init>
    365:374:android.text.InputFilter[] addEmojiInputFilterIfMissing(android.text.InputFilter[]) -> addEmojiInputFilterIfMissing
    409:415:android.util.SparseArray getEmojiInputFilterPositionArray(android.text.InputFilter[]) -> getEmojiInputFilterPositionArray
    349:353:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    479:479:boolean isEnabled() -> isEnabled
    385:401:android.text.InputFilter[] removeEmojiInputFilterIfPresent(android.text.InputFilter[]) -> removeEmojiInputFilterIfPresent
    465:468:void setAllCaps(boolean) -> setAllCaps
    472:475:void setEnabled(boolean) -> setEnabled
    491:492:void setEnabledUnsafe(boolean) -> setEnabledUnsafe
    435:440:android.text.method.TransformationMethod unwrapForDisabled(android.text.method.TransformationMethod) -> unwrapForDisabled
    342:344:void updateFilters() -> updateFilters
    333:336:void updateTransformationMethod() -> updateTransformationMethod
    452:457:android.text.method.TransformationMethod wrapForEnabled(android.text.method.TransformationMethod) -> wrapForEnabled
    422:425:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 -> androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19:
    232:234:void <init>(android.widget.TextView) -> <init>
    261:264:android.text.InputFilter[] getFilters(android.text.InputFilter[]) -> getFilters
    312:312:boolean isEnabled() -> isEnabled
    289:293:void setAllCaps(boolean) -> setAllCaps
    303:308:void setEnabled(boolean) -> setEnabled
    237:237:boolean skipBecauseEmojiCompatNotInitialized() -> skipBecauseEmojiCompatNotInitialized
    247:251:void updateTransformationMethod() -> updateTransformationMethod
    276:279:android.text.method.TransformationMethod wrapTransformationMethod(android.text.method.TransformationMethod) -> wrapTransformationMethod
androidx.emoji2.viewsintegration.EmojiTextWatcher -> androidx.emoji2.viewsintegration.EmojiTextWatcher:
    44:53:void <init>(android.widget.EditText,boolean) -> <init>
    109:109:void afterTextChanged(android.text.Editable) -> afterTextChanged
    104:104:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    64:64:int getEmojiReplaceStrategy() -> getEmojiReplaceStrategy
    112:115:androidx.emoji2.text.EmojiCompat$InitCallback getInitCallback() -> getInitCallback
    60:60:int getMaxEmojiCount() -> getMaxEmojiCount
    119:119:boolean isEnabled() -> isEnabled
    74:95:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    151:162:void processTextOnEnablingEvent(android.widget.EditText,int) -> processTextOnEnablingEvent
    68:69:void setEmojiReplaceStrategy(int) -> setEmojiReplaceStrategy
    123:132:void setEnabled(boolean) -> setEnabled
    56:57:void setMaxEmojiCount(int) -> setMaxEmojiCount
    98:98:boolean shouldSkipForDisabledOrNotConfigured() -> shouldSkipForDisabledOrNotConfigured
androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl -> androidx.emoji2.viewsintegration.EmojiTextWatcher$InitCallbackImpl:
    138:140:void <init>(android.widget.EditText) -> <init>
    144:147:void onInitialized() -> onInitialized
androidx.emoji2.viewsintegration.EmojiTransformationMethod -> androidx.emoji2.viewsintegration.EmojiTransformationMethod:
    39:41:void <init>(android.text.method.TransformationMethod) -> <init>
    81:81:android.text.method.TransformationMethod getOriginalTransformationMethod() -> getOriginalTransformationMethod
    45:64:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    70:74:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:142:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:281:void bumpBackStackNesting(int) -> bumpBackStackNesting
    294:294:int commit() -> commit
    299:299:int commitAllowingStateLoss() -> commitAllowingStateLoss
    315:330:int commitInternal(boolean) -> commitInternal
    304:306:void commitNow() -> commitNow
    310:312:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    223:228:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    183:185:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:59:void dump(java.lang.String,java.io.PrintWriter) -> dump
    62:135:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:461:void executeOps() -> executeOps
    471:529:void executePopOps(boolean) -> executePopOps
    555:620:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:354:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    175:178:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    158:158:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    165:168:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    152:152:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    146:146:int getId() -> getId
    687:687:java.lang.String getName() -> getName
    201:206:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    358:366:boolean interactsWith(int) -> interactsWith
    370:394:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    692:692:boolean isEmpty() -> isEmpty
    679:681:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    660:666:boolean isPostponed() -> isPostponed
    190:195:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    284:290:void runOnCommitRunnables() -> runOnCommitRunnables
    247:260:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    670:676:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    234:240:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    212:217:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    42:54:java.lang.String toString() -> toString
    634:656:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    169:169:void <clinit>() -> <clinit>
    48:81:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:98:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    101:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:167:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:53:void <init>(android.view.ViewGroup) -> <init>
    742:744:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    697:717:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    59:127:void executeOperations(java.util.List,boolean) -> executeOperations
    724:738:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    679:686:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:281:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    288:667:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:110:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:191:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:201:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:262:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    266:266:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    248:248:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:260:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:278:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    454:454:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    457:460:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    485:485:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    488:490:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:582:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    639:639:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    642:643:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    783:791:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    795:803:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    752:755:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    776:777:void completeSpecialEffect() -> completeSpecialEffect
    759:759:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    764:764:androidx.core.os.CancellationSignal getSignal() -> getSignal
    768:771:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    817:845:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    867:879:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    884:896:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    862:862:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    849:849:java.lang.Object getTransition() -> getTransition
    857:857:boolean hasSharedElementTransition() -> hasSharedElementTransition
    853:853:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    107:189:void <init>() -> <init>
    107:214:void <init>(int) -> <init>
    60:60:android.app.Dialog access$000(androidx.fragment.app.DialogFragment) -> access$000
    60:60:android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment) -> access$100
    60:60:boolean access$200(androidx.fragment.app.DialogFragment) -> access$200
    505:506:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    307:308:void dismiss() -> dismiss
    317:318:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    321:358:void dismissInternal(boolean,boolean) -> dismissInternal
    367:367:android.app.Dialog getDialog() -> getDialog
    439:439:boolean getShowsDialog() -> getShowsDialog
    388:388:int getTheme() -> getTheme
    409:409:boolean isCancelable() -> isCancelable
    445:452:void onAttach(android.content.Context) -> onAttach
    620:620:void onCancel(android.content.DialogInterface) -> onCancel
    471:484:void onCreate(android.os.Bundle) -> onCreate
    612:615:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    737:756:void onDestroyView() -> onDestroyView
    457:465:void onDetach() -> onDetach
    624:634:void onDismiss(android.content.DialogInterface) -> onDismiss
    525:528:android.view.View onFindViewById(int) -> onFindViewById
    545:567:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    532:532:boolean onHasView() -> onHasView
    699:720:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    683:694:void onStart() -> onStart
    725:729:void onStop() -> onStop
    671:678:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    489:500:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    637:666:void prepareDialog(android.os.Bundle) -> prepareDialog
    379:383:android.app.Dialog requireDialog() -> requireDialog
    401:403:void setCancelable(boolean) -> setCancelable
    432:433:void setShowsDialog(boolean) -> setShowsDialog
    231:242:void setStyle(int,int) -> setStyle
    573:585:void setupDialog(android.app.Dialog,int) -> setupDialog
    256:261:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    273:278:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    293:298:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    107:107:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    111:112:void run() -> run
androidx.fragment.app.DialogFragment$2 -> androidx.fragment.app.DialogFragment$2:
    116:116:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    120:123:void onCancel(android.content.DialogInterface) -> onCancel
androidx.fragment.app.DialogFragment$3 -> androidx.fragment.app.DialogFragment$3:
    127:127:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    131:134:void onDismiss(android.content.DialogInterface) -> onDismiss
androidx.fragment.app.DialogFragment$4 -> androidx.fragment.app.DialogFragment$4:
    143:143:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    143:143:void onChanged(java.lang.Object) -> onChanged
    147:161:void onChanged(androidx.lifecycle.LifecycleOwner) -> onChanged
androidx.fragment.app.DialogFragment$5 -> androidx.fragment.app.DialogFragment$5:
    506:506:void <init>(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer) -> <init>
    510:513:android.view.View onFindViewById(int) -> onFindViewById
    518:518:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:538:void <init>() -> <init>
    563:565:void <init>(int) -> <init>
    2758:2788:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2896:2896:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2802:2884:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3263:3266:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2888:2891:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    3541:3541:java.lang.String generateActivityResultKey() -> generateActivityResultKey
    914:914:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2613:2614:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2638:2639:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3374:3377:android.view.View getAnimatingAway() -> getAnimatingAway
    3389:3392:android.animation.Animator getAnimator() -> getAnimator
    735:735:android.os.Bundle getArguments() -> getArguments
    1074:1077:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    887:887:android.content.Context getContext() -> getContext
    426:450:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    3280:3283:int getEnterAnim() -> getEnterAnim
    2396:2399:java.lang.Object getEnterTransition() -> getEnterTransition
    3360:3363:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3287:3290:int getExitAnim() -> getExitAnim
    2475:2478:java.lang.Object getExitTransition() -> getExitTransition
    3367:3370:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3411:3414:android.view.View getFocusedView() -> getFocusedView
    1021:1021:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    941:941:java.lang.Object getHost() -> getHost
    704:704:int getId() -> getId
    1638:1641:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1672:1678:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1357:1357:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3322:3325:int getNextTransition() -> getNextTransition
    1086:1086:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1038:1043:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3308:3311:boolean getPopDirection() -> getPopDirection
    3294:3297:int getPopEnterAnim() -> getPopEnterAnim
    3301:3304:int getPopExitAnim() -> getPopExitAnim
    3400:3403:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2513:2517:java.lang.Object getReenterTransition() -> getReenterTransition
    964:964:android.content.res.Resources getResources() -> getResources
    1261:1261:boolean getRetainInstance() -> getRetainInstance
    2435:2439:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2546:2549:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2584:2589:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3338:3341:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3346:3349:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    986:986:java.lang.String getString(int) -> getString
    999:999:java.lang.String getString(int,java.lang.Object[]) -> getString
    712:712:java.lang.String getTag() -> getTag
    855:863:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    877:877:int getTargetRequestCode() -> getTargetRequestCode
    975:975:java.lang.CharSequence getText(int) -> getText
    1345:1345:boolean getUserVisibleHint() -> getUserVisibleHint
    1951:1951:android.view.View getView() -> getView
    360:364:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    381:381:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1191:1191:boolean hasOptionsMenu() -> hasOptionsMenu
    672:672:int hashCode() -> hashCode
    568:573:void initLifecycle() -> initLifecycle
    2164:2180:void initState() -> initState
    585:585:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    1116:1116:boolean isAdded() -> isAdded
    1125:1125:boolean isDetached() -> isDetached
    1184:1184:boolean isHidden() -> isHidden
    3425:3428:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1155:1155:boolean isInLayout() -> isInLayout
    1197:1198:boolean isMenuVisible() -> isMenuVisible
    3418:3421:boolean isPostponed() -> isPostponed
    1134:1134:boolean isRemoving() -> isRemoving
    1143:1144:boolean isRemovingParent() -> isRemovingParent
    1163:1163:boolean isResumed() -> isResumed
    762:765:boolean isStateSaved() -> isStateSaved
    1172:1173:boolean isVisible() -> isVisible
    3052:3053:void noteStateNotSaved() -> noteStateNotSaved
    1996:1997:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1489:1494:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1779:1785:void onAttach(android.content.Context) -> onAttach
    1798:1799:void onAttach(android.app.Activity) -> onAttach
    1769:1769:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2085:2086:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2343:2343:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1866:1871:void onCreate(android.os.Bundle) -> onCreate
    1819:1819:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1841:1841:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2295:2296:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2207:2207:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1923:1926:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2154:2155:void onDestroy() -> onDestroy
    2236:2236:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2144:2145:void onDestroyView() -> onDestroyView
    2189:2190:void onDetach() -> onDetach
    1622:1622:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1209:1209:void onHiddenChanged(boolean) -> onHiddenChanged
    1727:1733:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1747:1748:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2129:2130:void onLowMemory() -> onLowMemory
    2070:2070:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    2259:2259:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    2272:2272:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2111:2112:void onPause() -> onPause
    2080:2080:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    2225:2225:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    2101:2101:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1591:1591:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2035:2036:void onResume() -> onResume
    2059:2059:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2023:2024:void onStart() -> onStart
    2122:2123:void onStop() -> onStop
    1941:1941:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2012:2013:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2993:3003:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2915:2929:void performAttach() -> performAttach
    3077:3079:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3132:3138:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2932:2956:void performCreate(android.os.Bundle) -> performCreate
    3096:3104:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2960:2982:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3214:3224:void performDestroy() -> performDestroy
    3193:3211:void performDestroyView() -> performDestroyView
    3227:3243:void performDetach() -> performDetach
    1654:1655:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3082:3084:void performLowMemory() -> performLowMemory
    3067:3069:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3120:3128:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3142:3148:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3161:3173:void performPause() -> performPause
    3072:3074:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3108:3116:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3056:3064:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3035:3049:void performResume() -> performResume
    3151:3157:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3017:3031:void performStart() -> performStart
    3177:3189:void performStop() -> performStop
    2987:2989:void performViewCreated() -> performViewCreated
    2674:2675:void postponeEnterTransition() -> postponeEnterTransition
    2709:2718:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    3481:3502:androidx.activity.result.ActivityResultLauncher prepareCallInternal(androidx.activity.result.contract.ActivityResultContract,androidx.arch.core.util.Function,androidx.activity.result.ActivityResultCallback) -> prepareCallInternal
    3449:3449:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    3467:3467:androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback) -> registerForActivityResult
    2309:2310:void registerForContextMenu(android.view.View) -> registerForContextMenu
    3531:3537:void registerOnPreAttachListener(androidx.fragment.app.Fragment$OnPreAttachedListener) -> registerOnPreAttachListener
    1558:1562:void requestPermissions(java.lang.String[],int) -> requestPermissions
    926:930:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    746:750:android.os.Bundle requireArguments() -> requireArguments
    898:902:android.content.Context requireContext() -> requireContext
    1065:1065:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    952:956:java.lang.Object requireHost() -> requireHost
    1098:1109:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1962:1967:android.view.View requireView() -> requireView
    1886:1894:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:655:void restoreViewState(android.os.Bundle) -> restoreViewState
    3006:3013:void restoreViewState() -> restoreViewState
    2601:2602:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2626:2627:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    3381:3382:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3270:3277:void setAnimations(int,int,int,int) -> setAnimations
    3385:3386:void setAnimator(android.animation.Animator) -> setAnimator
    723:727:void setArguments(android.os.Bundle) -> setArguments
    2354:2355:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2382:2383:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2365:2366:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2458:2459:void setExitTransition(java.lang.Object) -> setExitTransition
    3407:3408:void setFocusedView(android.view.View) -> setFocusedView
    1272:1278:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    3432:3433:void setHideReplaced(boolean) -> setHideReplaced
    777:782:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1290:1296:void setMenuVisibility(boolean) -> setMenuVisibility
    3329:3334:void setNextTransition(int) -> setNextTransition
    3246:3260:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3315:3319:void setPopDirection(boolean) -> setPopDirection
    3396:3397:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    2497:2498:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1235:1245:void setRetainInstance(boolean) -> setRetainInstance
    2418:2419:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2532:2533:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    3354:3357:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2567:2568:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    812:840:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1322:1334:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1604:1607:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1365:1366:void startActivity(android.content.Intent) -> startActivity
    1374:1378:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1398:1399:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1421:1426:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1455:1465:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2731:2747:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:695:java.lang.String toString() -> toString
    2320:2321:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:260:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2738:2738:void <init>(androidx.fragment.app.Fragment) -> <init>
    2741:2742:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2777:2777:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2780:2781:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2896:2896:void <init>(androidx.fragment.app.Fragment) -> <init>
    2900:2904:android.view.View onFindViewById(int) -> onFindViewById
    2909:2909:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2936:2936:void <init>(androidx.fragment.app.Fragment) -> <init>
    2940:2945:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$6 -> androidx.fragment.app.Fragment$6:
    3449:3449:void <init>(androidx.fragment.app.Fragment) -> <init>
    3449:3449:java.lang.Object apply(java.lang.Object) -> apply
    3452:3455:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$7 -> androidx.fragment.app.Fragment$7:
    3467:3467:void <init>(androidx.fragment.app.Fragment,androidx.activity.result.ActivityResultRegistry) -> <init>
    3467:3467:java.lang.Object apply(java.lang.Object) -> apply
    3470:3470:androidx.activity.result.ActivityResultRegistry apply(java.lang.Void) -> apply
androidx.fragment.app.Fragment$8 -> androidx.fragment.app.Fragment$8:
    3493:3493:void <init>(androidx.fragment.app.Fragment,androidx.arch.core.util.Function,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> <init>
    3496:3499:void onPreAttached() -> onPreAttached
androidx.fragment.app.Fragment$9 -> androidx.fragment.app.Fragment$9:
    3502:3502:void <init>(androidx.fragment.app.Fragment,java.util.concurrent.atomic.AtomicReference,androidx.activity.result.contract.ActivityResultContract) -> <init>
    3524:3524:androidx.activity.result.contract.ActivityResultContract getContract() -> getContract
    3505:3511:void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat) -> launch
    3515:3519:void unregister() -> unregister
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3558:3597:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:517:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
    306:306:void <init>(androidx.fragment.app.Fragment$1) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    490:490:void <clinit>() -> <clinit>
    468:470:void <init>(android.os.Bundle) -> <init>
    472:477:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    481:481:int describeContents() -> describeContents
    486:487:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    491:491:void <init>() -> <init>
    491:491:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    491:491:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    494:494:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    499:499:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    491:491:java.lang.Object[] newArray(int) -> newArray
    504:504:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:105:void <init>() -> <init>
    84:121:void <init>(int) -> <init>
    319:319:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    562:576:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    608:608:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    618:618:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    125:153:void init() -> init
    823:825:void markFragmentsCreated() -> markFragmentsCreated
    828:848:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:165:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    600:600:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    261:264:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    273:277:void onCreate(android.os.Bundle) -> onCreate
    286:291:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    298:302:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    309:313:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    329:332:void onDestroy() -> onDestroy
    341:343:void onLowMemory() -> onLowMemory
    352:364:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:236:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    409:411:void onNewIntent(android.content.Intent) -> onNewIntent
    375:379:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    388:392:void onPause() -> onPause
    251:252:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    446:448:void onPostResume() -> onPostResume
    485:485:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    469:474:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    635:637:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    433:437:void onResume() -> onResume
    457:459:void onResumeFragments() -> onResumeFragments
    495:511:void onStart() -> onStart
    421:422:void onStateNotSaved() -> onStateNotSaved
    520:527:void onStop() -> onStop
    190:191:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    203:204:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    651:652:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    671:678:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    710:717:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    178:179:void supportFinishAfterTransition() -> supportFinishAfterTransition
    545:546:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    211:212:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    219:220:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    628:628:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:137:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:151:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    724:726:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    816:816:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    735:735:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    747:747:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    741:741:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    798:799:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    753:754:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    804:804:android.view.View onFindViewById(int) -> onFindViewById
    719:719:java.lang.Object onGetHost() -> onGetHost
    769:769:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    764:764:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    790:791:int onGetWindowAnimations() -> onGetWindowAnimations
    809:810:boolean onHasView() -> onHasView
    785:785:boolean onHasWindowAnimations() -> onHasWindowAnimations
    758:758:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    779:779:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    774:775:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    41:42:void <init>() -> <init>
    146:211:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    121:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    46:117:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    215:227:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    150:150:void <init>(androidx.fragment.app.Fragment) -> <init>
    153:159:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    166:166:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    176:185:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    189:189:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    169:169:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    176:176:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    179:183:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    195:195:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    198:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    237:243:void <init>(android.view.animation.Animation) -> <init>
    245:251:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    265:276:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    280:289:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    295:304:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    309:317:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    109:113:void <init>(android.content.Context) -> <init>
    120:121:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    109:146:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:183:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    395:401:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    308:314:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    326:331:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    235:246:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    251:257:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    261:268:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    284:292:void endViewTransition(android.view.View) -> endViewTransition
    223:223:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    373:378:void removeAllViewsInLayout() -> removeAllViewsInLayout
    382:386:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    349:351:void removeView(android.view.View) -> removeView
    336:339:void removeViewAt(int) -> removeViewAt
    343:345:void removeViewInLayout(android.view.View) -> removeViewInLayout
    355:360:void removeViews(int,int) -> removeViews
    364:369:void removeViewsInLayout(int,int) -> removeViewsInLayout
    296:297:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    201:209:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    216:217:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    273:280:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:252:void dispatchActivityCreated() -> dispatchActivityCreated
    367:368:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:241:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:335:void dispatchDestroy() -> dispatchDestroy
    313:314:void dispatchDestroyView() -> dispatchDestroyView
    379:380:void dispatchLowMemory() -> dispatchLowMemory
    345:346:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:441:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:285:void dispatchPause() -> dispatchPause
    356:357:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    303:303:void dispatchReallyStop() -> dispatchReallyStop
    273:274:void dispatchResume() -> dispatchResume
    262:263:void dispatchStart() -> dispatchStart
    295:296:void dispatchStop() -> dispatchStop
    492:492:void doLoaderDestroy() -> doLoaderDestroy
    483:483:void doLoaderRetain() -> doLoaderRetain
    461:461:void doLoaderStart() -> doLoaderStart
    474:474:void doLoaderStop(boolean) -> doLoaderStop
    536:536:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    451:451:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    108:108:java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    99:99:int getActiveFragmentsCount() -> getActiveFragmentsCount
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    83:83:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    142:143:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    501:501:void reportLoaderStart() -> reportLoaderStart
    167:169:void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    183:184:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    526:526:void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap) -> restoreLoaderNonConfig
    193:199:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    512:512:androidx.collection.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    229:229:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    212:215:java.util.List retainNonConfig() -> retainNonConfig
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    120:134:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    70:73:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:56:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    85:87:void <init>(android.content.Context,android.os.Handler,int) -> <init>
    91:92:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:100:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    113:113:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    232:232:android.view.View onFindViewById(int) -> onFindViewById
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    226:226:int onGetWindowAnimations() -> onGetWindowAnimations
    237:237:boolean onHasView() -> onHasView
    219:219:boolean onHasWindowAnimations() -> onHasWindowAnimations
    205:205:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    119:119:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    212:212:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    152:153:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    162:167:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    184:190:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    144:144:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:38:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:167:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    170:170:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:55:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:167:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:118:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:150:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:283:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:297:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:225:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:103:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:134:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:211:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:255:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:197:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:239:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:183:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:269:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    68:69:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    80:88:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder:
    40:43:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    97:99:void <clinit>() -> <clinit>
    96:521:void <init>() -> <init>
    96:96:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    96:96:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    96:96:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2458:2471:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2568:2572:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    833:837:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1708:1722:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3417:3418:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    813:817:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    1104:1105:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1920:1920:int allocBackStackIndex() -> allocBackStackIndex
    2829:2972:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1790:1801:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    575:575:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1485:1494:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3446:3455:boolean checkForMenus() -> checkForMenus
    1843:1847:void checkStateLoss() -> checkStateLoss
    1987:1990:void cleanupExec() -> cleanupExec
    874:875:void clearFragmentResult(java.lang.String) -> clearFragmentResult
    918:922:void clearFragmentResultListener(java.lang.String) -> clearFragmentResultListener
    2512:2521:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2240:2254:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2345:2381:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1536:1582:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1694:1704:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1510:1519:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1774:1787:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3069:3073:void dispatchActivityCreated() -> dispatchActivityCreated
    3051:3055:void dispatchAttach() -> dispatchAttach
    3158:3163:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3235:3245:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3058:3062:void dispatchCreate() -> dispatchCreate
    3174:3202:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3104:3122:void dispatchDestroy() -> dispatchDestroy
    3100:3101:void dispatchDestroyView() -> dispatchDestroyView
    3166:3171:void dispatchLowMemory() -> dispatchLowMemory
    3142:3147:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3427:3430:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3221:3231:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3249:3257:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3272:3275:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3090:3091:void dispatchPause() -> dispatchPause
    3150:3155:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3206:3217:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3278:3281:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3083:3087:void dispatchResume() -> dispatchResume
    3076:3080:void dispatchStart() -> dispatchStart
    3126:3139:void dispatchStateChange(int) -> dispatchStateChange
    3094:3097:void dispatchStop() -> dispatchStop
    3065:3066:void dispatchViewCreated() -> dispatchViewCreated
    2553:2557:void doPendingDeferredStart() -> doPendingDeferredStart
    1208:1289:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    137:138:void enableDebugLogging(boolean) -> enableDebugLogging
    124:125:void enableNewStateManager(boolean) -> enableNewStateManager
    2496:2509:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1875:1897:void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> enqueueAction
    1930:1960:void ensureExecReady(boolean) -> ensureExecReady
    1996:2013:boolean execPendingActions(boolean) -> execPendingActions
    1963:1980:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2393:2407:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2120:2236:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    600:602:boolean executePendingTransactions() -> executePendingTransactions
    2022:2052:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1839:1839:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    981:985:androidx.fragment.app.Fragment findFragment(android.view.View) -> findFragment
    1813:1813:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1830:1830:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1834:1834:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1044:1073:androidx.fragment.app.FragmentManager findFragmentManager(android.view.View) -> findFragmentManager
    995:1003:androidx.fragment.app.Fragment findViewFragment(android.view.View) -> findViewFragment
    2477:2489:void forcePostponedTransactions() -> forcePostponedTransactions
    2536:2549:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    1128:1128:int getActiveFragmentCount() -> getActiveFragmentCount
    1119:1119:java.util.List getActiveFragments() -> getActiveFragments
    806:806:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    797:797:int getBackStackEntryCount() -> getBackStackEntryCount
    1100:1100:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2817:2817:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    954:963:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2430:2448:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3334:3344:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2822:2822:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1090:1090:java.util.List getFragments() -> getFragments
    2807:2807:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3487:3487:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3382:3382:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2812:2812:androidx.fragment.app.Fragment getParent() -> getParent
    3297:3297:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3367:3377:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1013:1017:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1095:1095:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    661:674:void handleOnBackPressed() -> handleOnBackPressed
    1747:1755:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3463:3466:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1169:1169:boolean isDestroyed() -> isDestroyed
    141:141:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3459:3459:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    648:652:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    630:640:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1309:1309:boolean isStateAtLeast(int) -> isStateAtLeast
    1864:1864:boolean isStateSaved() -> isStateSaved
    3041:3048:void launchRequestPermissions(androidx.fragment.app.Fragment,java.lang.String[],int) -> launchRequestPermissions
    2994:3004:void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> launchStartActivityForResult
    3011:3036:void launchStartIntentSenderForResult(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> launchStartIntentSenderForResult
    2265:2274:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1591:1624:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1314:1480:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1522:1523:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1636:1675:void moveToState(int,boolean) -> moveToState
    2978:2989:void noteStateNotSaved() -> noteStateNotSaved
    1022:1031:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    557:557:androidx.fragment.app.FragmentTransaction openTransaction() -> openTransaction
    1292:1306:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    682:683:void popBackStack() -> popBackStack
    709:710:void popBackStack(java.lang.String,int) -> popBackStack
    737:741:void popBackStack(int,int) -> popBackStack
    692:692:boolean popBackStackImmediate() -> popBackStackImmediate
    719:719:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    750:753:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    764:790:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2577:2628:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2291:2324:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    936:941:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    3395:3396:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    847:857:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1726:1738:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    3440:3441:void removeFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> removeFragmentOnAttachListener
    824:827:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    2070:2108:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    1108:1109:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2560:2565:void reportBackStackChanged() -> reportBackStackChanged
    2697:2703:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    2707:2803:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2637:2641:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    3469:3481:int reverseTransit(int) -> reverseTransit
    2647:2692:android.os.Parcelable saveAllState() -> saveAllState
    1155:1161:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    1907:1917:void scheduleCommit() -> scheduleCommit
    1501:1507:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3320:3321:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
    862:870:void setFragmentResult(java.lang.String,android.os.Bundle) -> setFragmentResult
    882:914:void setFragmentResultListener(java.lang.String,androidx.lifecycle.LifecycleOwner,androidx.fragment.app.FragmentResultListener) -> setFragmentResultListener
    3301:3307:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3260:3269:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    3356:3357:void setSpecialEffectsControllerFactory(androidx.fragment.app.SpecialEffectsControllerFactory) -> setSpecialEffectsControllerFactory
    2416:2426:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1764:1771:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1679:1682:void startPendingDeferredFragments() -> startPendingDeferredFragments
    529:546:void throwException(java.lang.RuntimeException) -> throwException
    1175:1195:java.lang.String toString() -> toString
    3406:3407:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    609:620:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    433:433:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    436:437:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    2913:2913:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2913:2913:void onActivityResult(java.lang.Object) -> onActivityResult
    2916:2934:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    2939:2939:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2939:2939:void onActivityResult(java.lang.Object) -> onActivityResult
    2943:2969:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    451:451:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    460:463:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    455:456:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    478:478:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    483:483:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    488:488:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    492:492:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    521:521:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    524:525:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    887:887:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.Lifecycle) -> <init>
    891:906:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1550:1550:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1553:1558:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2837:2837:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2842:2843:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2885:2885:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2885:2885:void onActivityResult(java.lang.Object) -> onActivityResult
    2888:2907:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3656:3656:void <init>() -> <init>
    3656:3656:android.content.Intent createIntent(android.content.Context,java.lang.Object) -> createIntent
    3662:3681:android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest) -> createIntent
    3656:3656:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3687:3687:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    269:269:void <init>() -> <init>
    334:334:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    291:291:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    315:315:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    411:411:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    420:420:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    373:373:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    280:280:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    303:303:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    364:364:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    393:393:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    355:355:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    382:382:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    346:346:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    402:402:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3642:3642:void <clinit>() -> <clinit>
    3621:3624:void <init>(java.lang.String,int) -> <init>
    3626:3629:void <init>(android.os.Parcel) -> <init>
    3633:3633:int describeContents() -> describeContents
    3638:3640:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3643:3643:void <init>() -> <init>
    3643:3643:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3646:3646:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3643:3643:java.lang.Object[] newArray(int) -> newArray
    3651:3651:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$LifecycleAwareResultListener -> androidx.fragment.app.FragmentManager$LifecycleAwareResultListener:
    244:248:void <init>(androidx.lifecycle.Lifecycle,androidx.fragment.app.FragmentResultListener,androidx.lifecycle.LifecycleEventObserver) -> <init>
    251:251:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    256:257:void onFragmentResult(java.lang.String,android.os.Bundle) -> onFragmentResult
    260:261:void removeObserver() -> removeObserver
androidx.fragment.app.FragmentManager$PopBackStackState -> androidx.fragment.app.FragmentManager$PopBackStackState:
    3519:3523:void <init>(androidx.fragment.app.FragmentManager,java.lang.String,int,int) -> <init>
    3528:3538:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3553:3556:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3612:3613:void cancelTransaction() -> cancelTransaction
    3596:3605:void completeTransaction() -> completeTransaction
    3586:3586:boolean isReady() -> isReady
    3565:3570:void onStartEnterTransition() -> onStartEnterTransition
    3579:3580:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerNonConfig -> androidx.fragment.app.FragmentManagerNonConfig:
    49:53:void <init>(java.util.Collection,java.util.Map,java.util.Map) -> <init>
    76:76:java.util.Map getChildNonConfigs() -> getChildNonConfigs
    68:68:java.util.Collection getFragments() -> getFragments
    84:84:java.util.Map getViewModelStores() -> getViewModelStores
    57:60:boolean isRetaining(androidx.fragment.app.Fragment) -> isRetaining
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:38:void <init>() -> <init>
    32:49:void <init>(android.os.Parcel) -> <init>
    53:53:int describeContents() -> describeContents
    58:66:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:88:void <init>(boolean) -> <init>
    112:125:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:202:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    274:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:173:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    249:267:androidx.fragment.app.FragmentManagerNonConfig getSnapshot() -> getSnapshot
    178:183:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:289:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:105:void onCleared() -> onCleared
    154:164:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    212:240:void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig) -> restoreFromSnapshot
    96:97:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    122:123:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    104:141:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    195:206:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    240:256:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    283:283:long getItemId(int) -> getItemId
    161:188:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    260:260:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    287:287:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    271:271:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    266:266:android.os.Parcelable saveState() -> saveState
    211:236:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    151:155:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    131:131:void <clinit>() -> <clinit>
    43:56:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:72:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    77:106:java.lang.String toString() -> toString
    116:129:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    51:66:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:112:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:145:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    577:583:void activityCreated() -> activityCreated
    832:834:void addViewToContainer() -> addViewToContainer
    428:466:void attach() -> attach
    170:254:int computeExpectedState() -> computeExpectedState
    469:482:void create() -> create
    485:574:void createView() -> createView
    754:806:void destroy() -> destroy
    733:751:void destroyFragmentView() -> destroyFragmentView
    809:826:void detach() -> detach
    382:398:void ensureInflatedView() -> ensureInflatedView
    149:149:androidx.fragment.app.Fragment getFragment() -> getFragment
    615:625:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    258:379:void moveToExpectedState() -> moveToExpectedState
    629:634:void pause() -> pause
    401:425:void restoreState(java.lang.ClassLoader) -> restoreState
    594:612:void resume() -> resume
    681:713:android.os.Bundle saveBasicState() -> saveBasicState
    673:677:androidx.fragment.app.Fragment$SavedState saveInstanceState() -> saveInstanceState
    646:668:androidx.fragment.app.FragmentState saveState() -> saveState
    717:730:void saveViewState() -> saveViewState
    159:160:void setFragmentManagerState(int) -> setFragmentManagerState
    586:591:void start() -> start
    637:642:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    534:534:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    537:539:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    543:543:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    177:177:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    129:130:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    107:148:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    213:231:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    265:281:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    172:206:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    285:285:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    313:341:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    291:308:android.os.Parcelable saveState() -> saveState
    236:261:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    158:162:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:97:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:168:void burpActive() -> burpActive
    291:291:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:105:void dispatchStateChange(int) -> dispatchStateChange
    371:400:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    314:318:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    247:262:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    267:287:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    301:309:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    339:366:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    241:241:int getActiveFragmentCount() -> getActiveFragmentCount
    208:214:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    229:237:java.util.List getActiveFragments() -> getActiveFragments
    296:296:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    219:224:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:87:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:156:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:129:void moveToExpectedState() -> moveToExpectedState
    132:136:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:52:void resetActiveFragments() -> resetActiveFragments
    55:68:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:185:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:44:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    49:139:void <init>(android.content.Context) -> <init>
    49:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    270:289:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    402:428:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    242:249:void ensureContent() -> ensureContent
    164:187:void ensureHierarchy(android.content.Context) -> ensureHierarchy
    433:439:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    153:159:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    299:334:void onAttachedToWindow() -> onAttachedToWindow
    344:346:void onDetachedFromWindow() -> onDetachedFromWindow
    371:378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:360:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:397:void onTabChanged(java.lang.String) -> onTabChanged
    259:260:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
    209:214:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    226:239:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> androidx.fragment.app.FragmentTabHost$DummyTabFactory:
    75:77:void <init>(android.content.Context) -> <init>
    81:84:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    92:93:void <init>(android.os.Parcelable) -> <init>
    96:98:void <init>(android.os.Parcel) -> <init>
    109:110:java.lang.String toString() -> toString
    102:104:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$TabInfo:
    65:69:void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    94:123:void <init>() -> <init>
    94:129:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    163:163:androidx.fragment.app.FragmentTransaction add(java.lang.Class,android.os.Bundle,java.lang.String) -> add
    171:172:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    181:181:androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle) -> add
    189:190:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    213:213:androidx.fragment.app.FragmentTransaction add(int,java.lang.Class,android.os.Bundle,java.lang.String) -> add
    234:235:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:137:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    596:616:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    655:661:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    424:426:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    142:154:androidx.fragment.app.Fragment createFragment(java.lang.Class,android.os.Bundle) -> createFragment
    407:409:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    682:687:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:277:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    373:375:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    672:672:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    481:481:boolean isEmpty() -> isEmpty
    357:359:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    285:285:androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle) -> replace
    293:293:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    318:318:androidx.fragment.app.FragmentTransaction replace(int,java.lang.Class,android.os.Bundle,java.lang.String) -> replace
    340:344:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    818:823:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    792:792:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    732:734:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    747:749:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    701:703:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    716:718:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    538:538:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    575:579:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    472:473:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    447:449:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    782:783:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    626:627:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    639:639:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    389:391:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    73:74:void <init>() -> <init>
    76:81:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    83:88:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    1314:1315:void <init>() -> <init>
    695:701:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1261:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1130:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:217:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1150:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1029:1046:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:523:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:933:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:868:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:514:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1052:1067:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:811:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:681:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:416:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:297:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1271:1275:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    940:946:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    554:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    567:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:971:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    540:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1090:1111:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:335:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:92:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1013:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:464:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:998:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1074:1081:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:167:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
    1153:1153:boolean supportsTransition() -> supportsTransition
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:279:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:332:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:400:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:462:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:679:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:808:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    331:335:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:115:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:217:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    43:47:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    188:210:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:139:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    339:343:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:327:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:181:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:256:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    78:90:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    347:359:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:289:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:74:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:300:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    52:57:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    171:171:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:167:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    175:175:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    179:179:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:157:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    246:246:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:242:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    250:250:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    254:254:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:237:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    281:281:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:278:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    284:284:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    287:287:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    273:273:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:379:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:235:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    386:391:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    406:411:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:256:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:108:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    398:398:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:167:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:351:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:303:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:277:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:208:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:206:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:275:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:349:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    44:50:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    101:126:androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory() -> getDefaultViewModelProviderFactory
    79:80:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    132:133:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    55:56:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    88:89:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    63:67:void initialize() -> initialize
    73:73:boolean isInitialized() -> isInitialized
    137:138:void performRestore(android.os.Bundle) -> performRestore
    141:142:void performSave(android.os.Bundle) -> performSave
    84:85:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    50:78:void <init>() -> <init>
    350:401:void ensureList() -> ensureList
    330:330:android.widget.ListAdapter getListAdapter() -> getListAdapter
    230:231:android.widget.ListView getListView() -> getListView
    221:222:long getSelectedItemId() -> getSelectedItemId
    213:214:int getSelectedItemPosition() -> getSelectedItemPosition
    98:143:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    160:166:void onDestroyView() -> onDestroyView
    180:180:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    151:153:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    341:346:android.widget.ListAdapter requireListAdapter() -> requireListAdapter
    240:249:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    186:196:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    266:267:void setListShown(boolean) -> setListShown
    288:321:void setListShown(boolean,boolean) -> setListShown
    274:275:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    205:207:void setSelection(int) -> setSelection
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$1:
    53:53:void <init>(androidx.fragment.app.ListFragment) -> <init>
    56:57:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$2:
    61:61:void <init>(androidx.fragment.app.ListFragment) -> <init>
    64:65:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:32:void <init>(java.lang.String) -> <init>
    35:36:void close() -> close
    39:40:void flush() -> flush
    55:59:void flushBuilder() -> flushBuilder
    43:52:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:94:void <init>(android.view.ViewGroup) -> <init>
    193:225:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:161:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:179:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:188:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:170:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    260:301:void executePendingOperations() -> executePendingOperations
    135:140:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:150:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    304:335:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:257:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    117:130:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    54:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:79:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:250:void markPostponedState() -> markPostponedState
    338:347:void updateFinalState() -> updateFinalState
    228:229:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:213:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:222:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    444:607:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    708:711:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    744:746:void complete() -> complete
    715:740:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    505:533:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    645:646:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    592:604:void cancel() -> cancel
    686:697:void complete() -> complete
    671:674:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    542:542:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    561:561:androidx.fragment.app.Fragment getFragment() -> getFragment
    552:552:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    565:565:boolean isCanceled() -> isCanceled
    677:677:boolean isComplete() -> isComplete
    659:661:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    607:642:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    651:651:void onStart() -> onStart
    571:588:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    527:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    530:531:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    484:496:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    385:401:void <clinit>() -> <clinit>
    385:385:void <init>(java.lang.String,int) -> <init>
    444:478:void applyState(android.view.View) -> applyState
    412:415:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    426:434:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.AbstractSavedStateViewModelFactory -> androidx.lifecycle.AbstractSavedStateViewModelFactory:
    53:57:void <init>(androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    67:71:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    80:84:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    103:104:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
    34:36:void <init>(android.app.Application) -> <init>
    44:44:android.app.Application getApplication() -> getApplication
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    39:39:void <clinit>() -> <clinit>
    37:46:void <init>() -> <init>
    109:165:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    74:76:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    85:90:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    49:69:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    95:106:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    174:186:void <init>(java.util.Map) -> <init>
    190:193:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    197:202:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    211:215:void <init>(int,java.lang.reflect.Method) -> <init>
    240:248:boolean equals(java.lang.Object) -> equals
    253:253:int hashCode() -> hashCode
    220:236:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:28:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:39:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    56:57:void <init>() -> <init>
    46:123:void <init>(java.util.concurrent.Executor) -> <init>
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    143:144:void invalidate() -> invalidate
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$1:
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$2:
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$3:
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.DefaultLifecycleObserver:
    43:43:void onCreate(androidx.lifecycle.LifecycleOwner) -> onCreate
    102:102:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    78:78:void onPause(androidx.lifecycle.LifecycleOwner) -> onPause
    66:66:void onResume(androidx.lifecycle.LifecycleOwner) -> onResume
    54:54:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    90:90:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.EmptyActivityLifecycleCallbacks:
    23:23:void <init>() -> <init>
    26:26:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    50:50:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    38:38:void onActivityPaused(android.app.Activity) -> onActivityPaused
    34:34:void onActivityResumed(android.app.Activity) -> onActivityResumed
    46:46:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    30:30:void onActivityStarted(android.app.Activity) -> onActivityStarted
    42:42:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:30:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:59:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    45:52:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    135:224:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    94:123:void <clinit>() -> <clinit>
    95:95:void <init>(java.lang.String,int) -> <init>
    135:143:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    157:165:androidx.lifecycle.Lifecycle$Event downTo(androidx.lifecycle.Lifecycle$State) -> downTo
    224:238:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    179:187:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    201:209:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
    94:94:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    94:94:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    246:286:void <clinit>() -> <clinit>
    247:247:void <init>(java.lang.String,int) -> <init>
    295:295:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    246:246:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    246:246:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.LifecycleDispatcher:
    37:37:void <clinit>() -> <clinit>
    65:66:void <init>() -> <init>
    40:45:void init(android.content.Context) -> init
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback:
    49:49:void <init>() -> <init>
    53:54:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    62:62:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    58:58:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:92:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:98:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:207:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:288:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    335:335:androidx.lifecycle.LifecycleRegistry createUnsafe(androidx.lifecycle.LifecycleOwner) -> createUnsafe
    315:321:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:269:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    242:243:int getObserverCount() -> getObserverCount
    133:135:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:111:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:150:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:211:void popParentState() -> popParentState
    214:215:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:233:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:122:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:311:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:349:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:356:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.LifecycleRegistryOwner -> androidx.lifecycle.LifecycleRegistryOwner:
    25:25:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    212:213:void <init>() -> <init>
    106:112:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    120:139:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    209:209:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    56:57:androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> getCallback
    144:150:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    202:202:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    69:99:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    155:198:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    57:57:void <init>(androidx.lifecycle.LifecycleEventObserver) -> <init>
    61:62:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:105:void <init>(java.lang.Object) -> <init>
    60:113:void <init>() -> <init>
    486:490:void assertMainThread(java.lang.String) -> assertMainThread
    378:398:void changeActiveCounter(int) -> changeActiveCounter
    117:134:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:159:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    322:326:java.lang.Object getValue() -> getValue
    330:330:int getVersion() -> getVersion
    373:373:boolean hasActiveObservers() -> hasActiveObservers
    363:363:boolean hasObservers() -> hasObservers
    191:206:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    224:235:void observeForever(androidx.lifecycle.Observer) -> observeForever
    341:341:void onActive() -> onActive
    354:354:void onInactive() -> onInactive
    286:294:void postValue(java.lang.Object) -> postValue
    244:251:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    261:267:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    306:310:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:94:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    475:477:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    481:481:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    404:407:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    437:438:void detachObserver() -> detachObserver
    432:432:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    417:428:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    444:448:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    460:470:void activeStateChanged(boolean) -> activeStateChanged
    457:457:void detachObserver() -> detachObserver
    453:453:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:130:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:120:void onActive() -> onActive
    125:128:void onInactive() -> onInactive
    108:112:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    133:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    150:154:void onChanged(java.lang.Object) -> onChanged
    141:142:void plug() -> plug
    145:146:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
    36:40:boolean approveCall(java.lang.String,int) -> approveCall
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    33:34:void <init>(java.lang.Object) -> <init>
    40:41:void <init>() -> <init>
    45:46:void postValue(java.lang.Object) -> postValue
    50:51:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    30:30:void <init>() -> <init>
    30:30:java.lang.Object create(android.content.Context) -> create
    35:37:androidx.lifecycle.LifecycleOwner create(android.content.Context) -> create
    43:43:java.util.List dependencies() -> dependencies
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.ProcessLifecycleOwner:
    92:92:void <clinit>() -> <clinit>
    58:156:void <init>() -> <init>
    130:134:void activityPaused() -> activityPaused
    118:127:void activityResumed() -> activityResumed
    110:115:void activityStarted() -> activityStarted
    137:139:void activityStopped() -> activityStopped
    160:207:void attach(android.content.Context) -> attach
    142:146:void dispatchPauseIfNeeded() -> dispatchPauseIfNeeded
    149:153:void dispatchStopIfNeeded() -> dispatchStopIfNeeded
    102:102:androidx.lifecycle.LifecycleOwner get() -> get
    212:212:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    106:107:void init(android.content.Context) -> init
androidx.lifecycle.ProcessLifecycleOwner$1 -> androidx.lifecycle.ProcessLifecycleOwner$1:
    67:67:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    70:72:void run() -> run
androidx.lifecycle.ProcessLifecycleOwner$2 -> androidx.lifecycle.ProcessLifecycleOwner$2:
    76:76:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    79:79:void onCreate() -> onCreate
    88:89:void onResume() -> onResume
    83:84:void onStart() -> onStart
androidx.lifecycle.ProcessLifecycleOwner$3 -> androidx.lifecycle.ProcessLifecycleOwner$3:
    163:163:void <init>(androidx.lifecycle.ProcessLifecycleOwner) -> <init>
    192:195:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    199:200:void onActivityPaused(android.app.Activity) -> onActivityPaused
    174:185:void onActivityPreCreated(android.app.Activity,android.os.Bundle) -> onActivityPreCreated
    204:205:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$3$1 -> androidx.lifecycle.ProcessLifecycleOwner$3$1:
    174:174:void <init>(androidx.lifecycle.ProcessLifecycleOwner$3) -> <init>
    182:183:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    177:178:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    33:36:void <init>(java.lang.Object) -> <init>
    40:41:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:71:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:146:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    81:84:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    93:96:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    87:90:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    74:74:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    42:56:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:103:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:137:void onDestroy() -> onDestroy
    121:123:void onPause() -> onPause
    114:117:void onResume() -> onResume
    107:110:void onStart() -> onStart
    127:129:void onStop() -> onStop
    149:150:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    173:173:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    229:229:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:206:void onActivityPaused(android.app.Activity) -> onActivityPaused
    178:179:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:197:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:188:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:225:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:202:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:211:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    192:192:void onActivityResumed(android.app.Activity) -> onActivityResumed
    220:220:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    183:183:void onActivityStarted(android.app.Activity) -> onActivityStarted
    215:215:void onActivityStopped(android.app.Activity) -> onActivityStopped
    167:168:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandle -> androidx.lifecycle.SavedStateHandle:
    376:408:void <clinit>() -> <clinit>
    58:99:void <init>(java.util.Map) -> <init>
    58:106:void <init>() -> <init>
    343:344:void clearSavedStateProvider(java.lang.String) -> clearSavedStateProvider
    146:146:boolean contains(java.lang.String) -> contains
    110:133:androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle) -> createHandle
    240:240:java.lang.Object get(java.lang.String) -> get
    158:158:androidx.lifecycle.MutableLiveData getLiveData(java.lang.String) -> getLiveData
    192:192:androidx.lifecycle.MutableLiveData getLiveData(java.lang.String,java.lang.Object) -> getLiveData
    201:215:androidx.lifecycle.MutableLiveData getLiveDataInternal(java.lang.String,boolean,java.lang.Object) -> getLiveDataInternal
    227:230:java.util.Set keys() -> keys
    292:297:java.lang.Object remove(java.lang.String) -> remove
    138:138:androidx.savedstate.SavedStateRegistry$SavedStateProvider savedStateProvider() -> savedStateProvider
    251:260:void set(java.lang.String,java.lang.Object) -> set
    329:330:void setSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> setSavedStateProvider
    263:271:void validateValue(java.lang.Object) -> validateValue
androidx.lifecycle.SavedStateHandle$1 -> androidx.lifecycle.SavedStateHandle$1:
    64:64:void <init>(androidx.lifecycle.SavedStateHandle) -> <init>
    71:89:android.os.Bundle saveState() -> saveState
androidx.lifecycle.SavedStateHandle$SavingStateLiveData -> androidx.lifecycle.SavedStateHandle$SavingStateLiveData:
    351:354:void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String,java.lang.Object) -> <init>
    357:360:void <init>(androidx.lifecycle.SavedStateHandle,java.lang.String) -> <init>
    371:372:void detach() -> detach
    364:368:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    32:38:void <init>(java.lang.String,androidx.lifecycle.SavedStateHandle) -> <init>
    98:104:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:51:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    67:72:androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle) -> create
    62:62:androidx.lifecycle.SavedStateHandle getHandle() -> getHandle
    41:41:boolean isAttached() -> isAttached
    55:59:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:122:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:119:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:93:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SavedStateViewModelFactory -> androidx.lifecycle.SavedStateViewModelFactory:
    149:151:void <clinit>() -> <clinit>
    68:69:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner) -> <init>
    90:98:void <init>(android.app.Application,androidx.savedstate.SavedStateRegistryOwner,android.os.Bundle) -> <init>
    103:132:androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> create
    142:146:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    156:162:java.lang.reflect.Constructor findMatchingConstructor(java.lang.Class,java.lang.Class[]) -> findMatchingConstructor
    167:168:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:27:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:33:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:36:void <init>() -> <init>
    71:78:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
    135:159:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> switchMap
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    72:72:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    75:76:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$2:
    136:136:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    141:157:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$2$1:
    150:150:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    153:154:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:139:void clear() -> clear
    186:193:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
    121:121:void onCleared() -> onCleared
    156:169:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    99:102:void <init>(androidx.lifecycle.ViewModelStoreOwner) -> <init>
    114:115:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    125:128:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:190:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    257:259:void <init>(android.app.Application) -> <init>
    264:278:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    244:247:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    196:196:void <init>() -> <init>
    219:223:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    207:210:androidx.lifecycle.ViewModelProvider$NewInstanceFactory getInstance() -> getInstance
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
    56:56:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:65:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    31:33:void <init>() -> <init>
    63:71:androidx.lifecycle.LifecycleOwner get(android.view.View) -> get
    49:50:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    31:33:void <init>() -> <init>
    63:72:androidx.lifecycle.ViewModelStoreOwner get(android.view.View) -> get
    50:51:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    235:236:void enableDebugLogging(boolean) -> enableDebugLogging
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
    242:242:boolean hasRunningLoaders() -> hasRunningLoaders
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:400:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> createAndInstallLoader
    453:466:void destroyLoader(int) -> destroyLoader
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    471:476:androidx.loader.content.Loader getLoader(int) -> getLoader
    503:503:boolean hasRunningLoaders() -> hasRunningLoaders
    408:424:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    481:482:void markForRedelivery() -> markForRedelivery
    433:447:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> restartLoader
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    61:67:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    149:167:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    71:71:androidx.loader.content.Loader getLoader() -> getLoader
    125:129:boolean isCallbackWaitingForData() -> isCallbackWaitingForData
    111:121:void markForRedelivery() -> markForRedelivery
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    172:185:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> setCallback
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    237:242:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    272:274:void dump(java.lang.String,java.io.PrintWriter) -> dump
    255:255:boolean hasDeliveredData() -> hasDeliveredData
    246:252:void onChanged(java.lang.Object) -> onChanged
    260:264:void reset() -> reset
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    307:308:void finishCreatingLoader() -> finishCreatingLoader
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> getLoader
    324:331:boolean hasRunningLoaders() -> hasRunningLoaders
    303:303:boolean isCreatingLoader() -> isCreatingLoader
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
    311:312:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> putLoader
    320:321:void removeLoader(int) -> removeLoader
    299:300:void startCreatingLoader() -> startCreatingLoader
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    128:129:void <init>(android.content.Context) -> <init>
    124:134:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    322:322:void cancelLoadInBackground() -> cancelLoadInBackground
    233:243:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    246:261:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    356:373:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    210:230:void executePendingTask() -> executePendingTask
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:196:boolean onCancelLoad() -> onCancelLoad
    207:207:void onCanceled(java.lang.Object) -> onCanceled
    152:157:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
    144:148:void setUpdateThrottle(long) -> setUpdateThrottle
    347:351:void waitForLoader() -> waitForLoader
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    60:74:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    94:98:void onCancelled(java.lang.Object) -> onCancelled
    83:87:void onPostExecute(java.lang.Object) -> onPostExecute
    104:106:void run() -> run
    111:115:void waitForLoader() -> waitForLoader
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    123:125:void <init>(android.content.Context) -> <init>
    136:143:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    86:93:void cancelLoadInBackground() -> cancelLoadInBackground
    41:41:void deliverResult(java.lang.Object) -> deliverResult
    98:115:void deliverResult(android.database.Cursor) -> deliverResult
    239:249:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    202:202:java.lang.String[] getProjection() -> getProjection
    211:211:java.lang.String getSelection() -> getSelection
    220:220:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    229:229:java.lang.String getSortOrder() -> getSortOrder
    193:193:android.net.Uri getUri() -> getUri
    41:41:java.lang.Object loadInBackground() -> loadInBackground
    56:80:android.database.Cursor loadInBackground() -> loadInBackground
    41:41:void onCanceled(java.lang.Object) -> onCanceled
    173:176:void onCanceled(android.database.Cursor) -> onCanceled
    180:189:void onReset() -> onReset
    154:160:void onStartLoading() -> onStartLoading
    168:169:void onStopLoading() -> onStopLoading
    206:207:void setProjection(java.lang.String[]) -> setProjection
    215:216:void setSelection(java.lang.String) -> setSelection
    224:225:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    233:234:void setSortOrder(java.lang.String) -> setSortOrder
    197:198:void setUri(android.net.Uri) -> setUri
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    44:120:void <init>(android.content.Context) -> <init>
    409:411:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:486:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:147:void deliverCancellation() -> deliverCancellation
    131:134:void deliverResult(java.lang.Object) -> deliverResult
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:348:void forceLoad() -> forceLoad
    154:154:android.content.Context getContext() -> getContext
    161:161:int getId() -> getId
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    425:425:void onAbandon() -> onAbandon
    334:334:boolean onCancelLoad() -> onCancelLoad
    511:519:void onContentChanged() -> onContentChanged
    356:356:void onForceLoad() -> onForceLoad
    463:463:void onReset() -> onReset
    296:296:void onStartLoading() -> onStartLoading
    392:392:void onStopLoading() -> onStopLoading
    173:178:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
    207:211:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    447:453:void reset() -> reset
    496:499:void rollbackContentChanged() -> rollbackContentChanged
    282:286:void startLoading() -> startLoading
    380:382:void stopLoading() -> stopLoading
    471:474:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:194:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    223:230:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    58:60:void <init>(androidx.loader.content.Loader) -> <init>
    64:64:boolean deliverSelfNotifications() -> deliverSelfNotifications
    69:70:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    60:84:void <clinit>() -> <clinit>
    88:173:void <init>() -> <init>
    332:333:boolean cancel(boolean) -> cancel
    398:398:androidx.loader.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    462:463:void execute(java.lang.Runnable) -> execute
    433:454:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    487:493:void finish(java.lang.Object) -> finish
    348:348:java.lang.Object get() -> get
    368:368:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    115:120:android.os.Handler getHandler() -> getHandler
    195:195:androidx.loader.content.ModernAsyncTask$Status getStatus() -> getStatus
    299:299:boolean isCancelled() -> isCancelled
    270:271:void onCancelled(java.lang.Object) -> onCancelled
    286:286:void onCancelled() -> onCancelled
    239:239:void onPostExecute(java.lang.Object) -> onPostExecute
    223:223:void onPreExecute() -> onPreExecute
    252:252:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    183:186:java.lang.Object postResult(java.lang.Object) -> postResult
    176:180:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    480:484:void publishProgress(java.lang.Object[]) -> publishProgress
    126:127:void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:149:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:171:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$AsyncTaskResult:
    528:531:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$InternalHandler:
    497:498:void <init>() -> <init>
    503:513:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    99:111:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$WorkerRunnable:
    519:520:void <init>() -> <init>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:83:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    540:548:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    47:51:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    144:145:void <clinit>() -> <clinit>
    84:86:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    129:137:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
    118:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> setBackgroundThreadExecutor
    102:103:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> setMainThreadExecutor
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    162:164:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    148:197:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    392:393:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> addListListener
    216:216:java.util.List getCurrentList() -> getCurrentList
    364:370:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> latchList
    375:381:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> onCurrentListChanged
    403:404:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> removeListListener
    231:232:void submitList(java.util.List) -> submitList
    254:357:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$1:
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:355:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$1$1:
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    316:328:boolean areContentsTheSame(int,int) -> areContentsTheSame
    305:311:boolean areItemsTheSame(int,int) -> areItemsTheSame
    334:343:java.lang.Object getChangePayload(int,int) -> getChangePayload
    300:300:int getNewListSize() -> getNewListSize
    295:295:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$1$2:
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:353:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor:
    122:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.AsyncListUtil:
    64:293:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    155:162:java.lang.Object getItem(int) -> getItem
    175:175:int getItemCount() -> getItemCount
    107:107:boolean isRefreshPending() -> isRefreshPending
    79:80:void log(java.lang.String,java.lang.Object[]) -> log
    119:124:void onRangeChanged() -> onRangeChanged
    133:135:void refresh() -> refresh
    179:209:void updateRange() -> updateRange
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.AsyncListUtil$1:
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    289:289:boolean isRequestedGeneration(int) -> isRequestedGeneration
    282:286:void recycleAllTiles() -> recycleAllTiles
    264:276:void removeTile(int,int) -> removeTile
    218:229:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.AsyncListUtil$2:
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> acquireTile
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> addTile
    421:438:void flushTileCache(int) -> flushTileCache
    350:350:int getTileStart(int) -> getTileStart
    401:401:boolean isTileLoaded(int) -> isTileLoaded
    366:378:void loadTile(int,int) -> loadTile
    441:442:void log(java.lang.String,java.lang.Object[]) -> log
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    308:312:void refresh(int) -> refresh
    413:418:void removeTile(int) -> removeTile
    355:362:void requestTiles(int,int,int,boolean) -> requestTiles
    322:347:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.AsyncListUtil$DataCallback:
    451:451:void <init>() -> <init>
    511:511:int getMaxCachedTiles() -> getMaxCachedTiles
    489:489:void recycleData(java.lang.Object[],int) -> recycleData
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.AsyncListUtil$ViewCallback:
    521:521:void <init>() -> <init>
    577:581:void extendRangeInto(int[],int[],int) -> extendRangeInto
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    41:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.ConcatAdapter -> androidx.recyclerview.widget.ConcatAdapter:
    89:90:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter[]) -> <init>
    103:104:void <init>(androidx.recyclerview.widget.ConcatAdapter$Config,androidx.recyclerview.widget.RecyclerView$Adapter[]) -> <init>
    113:114:void <init>(java.util.List) -> <init>
    125:132:void <init>(androidx.recyclerview.widget.ConcatAdapter$Config,java.util.List) -> <init>
    145:145:boolean addAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    161:161:boolean addAdapter(int,androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    302:302:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    280:280:java.util.List getAdapters() -> getAdapters
    238:238:int getItemCount() -> getItemCount
    226:226:long getItemId(int) -> getItemId
    177:177:int getItemViewType(int) -> getItemViewType
    233:234:void internalSetStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> internalSetStateRestorationPolicy
    263:264:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    188:189:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    183:183:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    268:269:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    243:243:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    248:249:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    253:254:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    258:259:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    172:172:boolean removeAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> removeAdapter
    200:200:void setHasStableIds(boolean) -> setHasStableIds
    219:219:void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> setStateRestorationPolicy
androidx.recyclerview.widget.ConcatAdapter$Config -> androidx.recyclerview.widget.ConcatAdapter$Config:
    362:362:void <clinit>() -> <clinit>
    364:367:void <init>(boolean,androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode) -> <init>
androidx.recyclerview.widget.ConcatAdapter$Config$Builder -> androidx.recyclerview.widget.ConcatAdapter$Config$Builder:
    410:412:void <init>() -> <init>
    454:454:androidx.recyclerview.widget.ConcatAdapter$Config build() -> build
    428:429:androidx.recyclerview.widget.ConcatAdapter$Config$Builder setIsolateViewTypes(boolean) -> setIsolateViewTypes
    445:446:androidx.recyclerview.widget.ConcatAdapter$Config$Builder setStableIdMode(androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode) -> setStableIdMode
androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode -> androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode:
    372:404:void <clinit>() -> <clinit>
    372:372:void <init>(java.lang.String,int) -> <init>
    372:372:androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode valueOf(java.lang.String) -> valueOf
    372:372:androidx.recyclerview.widget.ConcatAdapter$Config$StableIdMode[] values() -> values
androidx.recyclerview.widget.ConcatAdapterController -> androidx.recyclerview.widget.ConcatAdapterController:
    60:105:void <init>(androidx.recyclerview.widget.ConcatAdapter,androidx.recyclerview.widget.ConcatAdapter$Config) -> <init>
    132:132:boolean addAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    142:179:boolean addAdapter(int,androidx.recyclerview.widget.RecyclerView$Adapter) -> addAdapter
    286:290:void calculateAndUpdateStateRestorationPolicy() -> calculateAndUpdateStateRestorationPolicy
    373:378:boolean canRestoreState() -> canRestoreState
    293:304:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy computeStateRestorationPolicy() -> computeStateRestorationPolicy
    204:212:int countItemsBefore(androidx.recyclerview.widget.NestedAdapterWrapper) -> countItemsBefore
    337:355:androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition findWrapperAndLocalPosition(int) -> findWrapperAndLocalPosition
    109:113:androidx.recyclerview.widget.NestedAdapterWrapper findWrapperFor(androidx.recyclerview.widget.RecyclerView$Adapter) -> findWrapperFor
    486:490:androidx.recyclerview.widget.RecyclerView$Adapter getBoundAdapter(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getBoundAdapter
    495:502:java.util.List getCopyOfAdapters() -> getCopyOfAdapters
    216:219:long getItemId(int) -> getItemId
    317:320:int getItemViewType(int) -> getItemViewType
    461:480:int getLocalAdapterPosition(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> getLocalAdapterPosition
    309:313:int getTotalCount() -> getTotalCount
    414:419:androidx.recyclerview.widget.NestedAdapterWrapper getWrapper(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getWrapper
    506:506:boolean hasStableIds() -> hasStableIds
    117:123:int indexOfWrapper(androidx.recyclerview.widget.RecyclerView$Adapter) -> indexOfWrapper
    423:428:boolean isAttachedTo(androidx.recyclerview.widget.RecyclerView) -> isAttachedTo
    432:439:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    366:370:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    225:227:void onChanged(androidx.recyclerview.widget.NestedAdapterWrapper) -> onChanged
    324:325:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    442:454:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    402:409:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    232:237:void onItemRangeChanged(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeChanged
    242:248:void onItemRangeChanged(androidx.recyclerview.widget.NestedAdapterWrapper,int,int,java.lang.Object) -> onItemRangeChanged
    253:258:void onItemRangeInserted(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeInserted
    273:278:void onItemRangeMoved(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeMoved
    263:268:void onItemRangeRemoved(androidx.recyclerview.widget.NestedAdapterWrapper,int,int) -> onItemRangeRemoved
    282:283:void onStateRestorationPolicyChanged(androidx.recyclerview.widget.NestedAdapterWrapper) -> onStateRestorationPolicyChanged
    382:384:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    387:389:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    392:399:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    359:363:void releaseWrapperAndLocalPosition(androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition) -> releaseWrapperAndLocalPosition
    183:200:boolean removeAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> removeAdapter
androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition -> androidx.recyclerview.widget.ConcatAdapterController$WrapperAndLocalPosition:
    513:513:void <init>() -> <init>
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    87:87:void <clinit>() -> <clinit>
    83:85:void <init>() -> <init>
    274:326:androidx.recyclerview.widget.DiffUtil$Snake backward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> backward
    106:106:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    124:178:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    217:264:androidx.recyclerview.widget.DiffUtil$Snake forward(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray,int) -> forward
    191:207:androidx.recyclerview.widget.DiffUtil$Snake midPoint(androidx.recyclerview.widget.DiffUtil$Range,androidx.recyclerview.widget.DiffUtil$Callback,androidx.recyclerview.widget.DiffUtil$CenteredArray,androidx.recyclerview.widget.DiffUtil$CenteredArray) -> midPoint
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    87:87:void <init>() -> <init>
    87:87:int compare(java.lang.Object,java.lang.Object) -> compare
    90:90:int compare(androidx.recyclerview.widget.DiffUtil$Diagonal,androidx.recyclerview.widget.DiffUtil$Diagonal) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    332:332:void <init>() -> <init>
    396:396:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$CenteredArray -> androidx.recyclerview.widget.DiffUtil$CenteredArray:
    1037:1040:void <init>(int) -> <init>
    1047:1047:int[] backingData() -> backingData
    1055:1056:void fill(int) -> fill
    1043:1043:int get(int) -> get
    1051:1052:void set(int,int) -> set
androidx.recyclerview.widget.DiffUtil$Diagonal -> androidx.recyclerview.widget.DiffUtil$Diagonal:
    481:485:void <init>(int,int,int) -> <init>
    488:488:int endX() -> endX
    492:492:int endY() -> endY
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    664:676:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    683:690:void addEdgeDiagonals() -> addEdgeDiagonals
    795:803:int convertNewPositionToOld(int) -> convertNewPositionToOld
    773:781:int convertOldPositionToNew(int) -> convertOldPositionToNew
    840:841:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    855:968:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    738:761:void findMatchingAddition(int) -> findMatchingAddition
    698:714:void findMatchingItems() -> findMatchingItems
    718:730:void findMoveMatches() -> findMoveMatches
    975:994:androidx.recyclerview.widget.DiffUtil$PostponedUpdate getPostponedUpdate(java.util.Collection,int,boolean) -> getPostponedUpdate
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    409:409:void <init>() -> <init>
    468:468:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    1021:1025:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    577:578:void <init>() -> <init>
    580:585:void <init>(int,int,int,int) -> <init>
    592:592:int newSize() -> newSize
    588:588:int oldSize() -> oldSize
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    501:501:void <init>() -> <init>
    536:536:int diagonalSize() -> diagonalSize
    528:528:boolean hasAdditionOrRemoval() -> hasAdditionOrRemoval
    532:532:boolean isAddition() -> isAddition
    545:559:androidx.recyclerview.widget.DiffUtil$Diagonal toDiagonal() -> toDiagonal
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.DividerItemDecoration:
    48:48:void <clinit>() -> <clinit>
    57:75:void <init>(android.content.Context,int) -> <init>
    151:175:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawHorizontal
    124:148:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawVertical
    108:108:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    180:189:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    113:121:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    97:101:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    84:89:void setOrientation(int) -> setOrientation
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:259:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:544:int[] getHorizontalRange() -> getHorizontalRange
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    533:535:int[] getVerticalRange() -> getVerticalRange
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    244:255:void hide(int) -> hide
    461:475:void horizontalScrollTo(float) -> horizontalScrollTo
    220:220:boolean isDragging() -> isDragging
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    268:288:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    262:264:void resetHideDelay(int) -> resetHideDelay
    479:490:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    228:240:void show() -> show
    339:375:void updateScrollPosition(int,int) -> updateScrollPosition
    446:458:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    549:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:262:void buildTaskList() -> buildTaskList
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:364:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:369:void prefetch(long) -> prefetch
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:307:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:406:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    112:136:void addPosition(int,int) -> addPosition
    152:156:void clearPrefetchPositions() -> clearPrefetchPositions
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:145:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:76:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:51:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:87:void <init>(android.content.Context,int) -> <init>
    44:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    785:802:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:196:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:315:void calculateItemBorders(int) -> calculateItemBorders
    325:344:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    527:537:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1223:1226:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1205:1208:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1314:1352:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1281:1310:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1232:1235:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1214:1217:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:371:void ensureViewSet() -> ensureViewSet
    422:462:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    811:811:int getSpanCount() -> getSpanCount
    467:479:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    483:500:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    504:521:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    760:763:void guessMeasurement(float,int) -> guessMeasurement
    1277:1277:boolean isUsingSpansToEstimateScrollbarDimensions() -> isUsingSpansToEstimateScrollbarDimensions
    542:714:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    726:747:void measureChild(android.view.View,int,boolean) -> measureChild
    767:777:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1078:1195:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    824:835:void setSpanCount(int) -> setSpanCount
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    108:114:void setStackFromEnd(boolean) -> setStackFromEnd
    1265:1266:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> setUsingSpansToEstimateScrollbarDimensions
    1200:1200:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:286:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1358:1358:void <init>() -> <init>
    1367:1367:int getSpanIndex(int,int) -> getSpanIndex
    1362:1362:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1385:1391:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1395:void <init>(int,int) -> <init>
    1385:1399:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1385:1403:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1385:1407:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1424:1424:int getSpanIndex() -> getSpanIndex
    1434:1434:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    844:850:void <init>() -> <init>
    1007:1025:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    940:949:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    927:936:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1039:1071:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    976:1003:int getSpanIndex(int,int) -> getSpanIndex
    905:906:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    897:898:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    923:923:boolean isSpanGroupIndexCacheEnabled() -> isSpanGroupIndexCacheEnabled
    914:914:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    886:890:void setSpanGroupIndexCacheEnabled(boolean) -> setSpanGroupIndexCacheEnabled
    869:873:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    168:450:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    1294:1295:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    469:484:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1241:1264:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    984:1038:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1268:1290:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    496:511:void destroyCallbacks() -> destroyCallbacks
    918:930:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1159:1169:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1043:1058:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    804:849:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    954:976:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    935:936:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    530:540:void getSelectedDxDy(float[]) -> getSelectedDxDy
    727:733:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    453:456:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    857:890:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    940:944:void obtainVelocityTracker() -> obtainVelocityTracker
    894:894:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    898:911:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    557:566:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    544:552:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    703:723:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    947:951:void releaseVelocityTracker() -> releaseVelocityTracker
    1321:1328:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    741:800:boolean scrollIfNecessary() -> scrollIfNecessary
    577:698:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    487:493:void setupCallbacks() -> setupCallbacks
    1096:1108:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    514:517:void startGestureDetection() -> startGestureDetection
    1143:1155:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    520:527:void stopGestureDetection() -> stopGestureDetection
    1195:1237:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1174:1192:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    259:259:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    262:269:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    315:315:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    319:359:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    422:426:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    364:418:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    638:638:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    641:663:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    703:703:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    706:721:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1298:1298:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1301:1312:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1405:1412:void <clinit>() -> <clinit>
    1389:1425:void <init>() -> <init>
    1630:1630:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1806:1857:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2042:2043:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1577:1592:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1486:1501:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1597:1598:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2136:2142:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1694:1694:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1470:1470:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1905:1909:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1724:1724:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1750:1750:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    1710:1710:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1774:1774:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1602:1603:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    1608:1609:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    2170:2188:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1682:1682:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1667:1667:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1533:1533:int makeFlag(int,int) -> makeFlag
    1516:1518:int makeMovementFlags(int,int) -> makeMovementFlags
    2075:2077:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2109:2111:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1982:1996:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    2001:2026:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1948:1977:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1899:1902:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1405:1405:void <init>() -> <init>
    1408:1408:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1412:1412:void <init>() -> <init>
    1415:1416:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2318:2321:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2328:2329:void doNotReactToLongPress() -> doNotReactToLongPress
    2333:2333:boolean onDown(android.view.MotionEvent) -> onDown
    2338:2369:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2400:2426:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2438:2439:void cancel() -> cancel
    2477:2478:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2469:2473:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2483:2483:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2465:2465:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2429:2430:void setDuration(long) -> setDuration
    2442:2443:void setFraction(float) -> setFraction
    2433:2435:void start() -> start
    2450:2460:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2417:2417:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2420:2421:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    2237:2240:void <init>(int,int) -> <init>
    2291:2291:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2297:2298:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2276:2276:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    2261:2262:void setDefaultDragDirs(int) -> setDefaultDragDirs
    2250:2251:void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:85:void clearView(android.view.View) -> clearView
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:160:void <init>(android.content.Context) -> <init>
    67:172:void <init>(android.content.Context,int,boolean) -> <init>
    67:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1413:1416:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    485:500:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    298:298:boolean canScrollHorizontally() -> canScrollHorizontally
    306:306:boolean canScrollVertically() -> canScrollVertically
    1372:1383:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1294:1320:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1283:1287:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1151:1151:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1141:1141:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1161:1161:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1181:1187:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1170:1176:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1192:1198:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    513:521:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1156:1156:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1146:1146:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1166:1166:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1720:1753:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1059:1059:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1048:1051:void ensureLayoutState() -> ensureLayoutState
    1576:1626:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1967:1968:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1924:1924:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1805:1809:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1787:1791:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1950:1951:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2007:2008:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1928:1928:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1990:1991:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2039:2061:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    2017:2034:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1912:1913:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1919:1920:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1837:1906:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean,boolean) -> findReferenceChild
    410:423:android.view.View findViewByPosition(int) -> findViewByPosition
    969:986:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    994:1011:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1775:1775:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1765:1765:android.view.View getChildClosestToStart() -> getChildClosestToStart
    450:453:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1366:1366:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    333:333:int getOrientation() -> getOrientation
    212:212:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    379:379:boolean getReverseLayout() -> getReverseLayout
    322:322:boolean getStackFromEnd() -> getStackFromEnd
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1044:1044:boolean isLayoutRTL() -> isLayoutRTL
    1229:1229:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1631:1700:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    759:806:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2116:2123:void logChildren() -> logChildren
    747:747:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2068:2108:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    540:724:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    728:733:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:291:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2187:2214:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1550:1560:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1425:1440:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1506:1536:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1457:1488:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1277:1278:boolean resolveIsInfinite() -> resolveIsInfinite
    365:370:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1386:1408:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1121:1124:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1078:1084:void scrollToPosition(int) -> scrollToPosition
    1106:1112:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1133:1136:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1351:1352:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    343:356:void setOrientation(int) -> setOrientation
    229:230:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    397:403:void setReverseLayout(boolean) -> setReverseLayout
    1219:1220:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    313:319:void setStackFromEnd(boolean) -> setStackFromEnd
    1704:1706:boolean shouldMeasureTwice() -> shouldMeasureTwice
    505:509:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2177:2177:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    838:875:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    883:961:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    810:828:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1235:1274:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1015:1016:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1019:1026:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1029:1030:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1033:1041:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2136:2173:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2482:2484:void <init>() -> <init>
    2498:2501:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2567:2575:void assignFromView(android.view.View,int) -> assignFromView
    2520:2564:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2514:2516:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2487:2491:void reset() -> reset
    2505:2505:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2578:2578:void <init>() -> <init>
    2585:2589:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2220:2306:void <init>() -> <init>
    2360:2361:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2364:2371:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2317:2317:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2404:2406:void log() -> log
    2327:2332:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2343:2356:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2374:2400:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2458:2458:void <clinit>() -> <clinit>
    2422:2424:void <init>() -> <init>
    2426:2430:void <init>(android.os.Parcel) -> <init>
    2432:2436:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2448:2448:int describeContents() -> describeContents
    2439:2439:boolean hasValidAnchor() -> hasValidAnchor
    2443:2444:void invalidateAnchor() -> invalidateAnchor
    2453:2456:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2459:2459:void <init>() -> <init>
    2459:2459:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2462:2462:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2459:2459:java.lang.Object[] newArray(int) -> newArray
    2467:2467:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    79:95:void <init>(android.content.Context) -> <init>
    280:299:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:349:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:324:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    266:271:int clampApplyScroll(int,int) -> clampApplyScroll
    218:219:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:233:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:263:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    222:257:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    142:145:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    161:168:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    183:204:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    271:274:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    262:265:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    97:111:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    97:117:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    173:173:java.util.List getCurrentList() -> getCurrentList
    150:150:java.lang.Object getItem(int) -> getItem
    155:155:int getItemCount() -> getItemCount
    189:189:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
    128:129:void submitList(java.util.List) -> submitList
    146:147:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.ListAdapter$1:
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:103:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
androidx.recyclerview.widget.MessageThreadUtil -> androidx.recyclerview.widget.MessageThreadUtil:
    26:26:void <init>() -> <init>
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
    30:30:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
androidx.recyclerview.widget.MessageThreadUtil$1 -> androidx.recyclerview.widget.MessageThreadUtil$1:
    30:58:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    45:46:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    50:51:void removeTile(int,int) -> removeTile
    54:56:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    40:41:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> androidx.recyclerview.widget.MessageThreadUtil$1$1:
    58:58:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    61:80:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> androidx.recyclerview.widget.MessageThreadUtil$2:
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    112:113:void loadTile(int,int) -> loadTile
    131:134:void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
    117:118:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    100:101:void refresh(int) -> refresh
    121:123:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    126:128:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    106:108:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> androidx.recyclerview.widget.MessageThreadUtil$2$1:
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:168:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> androidx.recyclerview.widget.MessageThreadUtil$MessageQueue:
    233:233:void <init>() -> <init>
    237:243:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> next
    263:283:void removeMessages(int) -> removeMessages
    251:261:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    246:249:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem:
    180:180:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    191:200:void recycle() -> recycle
androidx.recyclerview.widget.NestedAdapterWrapper -> androidx.recyclerview.widget.NestedAdapterWrapper:
    47:133:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.NestedAdapterWrapper$Callback,androidx.recyclerview.widget.ViewTypeStorage,androidx.recyclerview.widget.StableIdStorage$StableIdLookup) -> <init>
    137:139:void dispose() -> dispose
    142:142:int getCachedItemCount() -> getCachedItemCount
    161:162:long getItemId(int) -> getItemId
    146:146:int getItemViewType(int) -> getItemViewType
    157:158:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    152:153:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
androidx.recyclerview.widget.NestedAdapterWrapper$1 -> androidx.recyclerview.widget.NestedAdapterWrapper$1:
    48:48:void <init>(androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    51:53:void onChanged() -> onChanged
    57:63:void onItemRangeChanged(int,int) -> onItemRangeChanged
    68:74:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    78:87:void onItemRangeInserted(int,int) -> onItemRangeInserted
    105:112:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    91:101:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    116:119:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:330:void offsetChild(android.view.View,int) -> offsetChild
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:428:void offsetChild(android.view.View,int) -> offsetChild
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    171:174:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    200:203:int distanceToCenter(android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    218:239:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:142:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    264:267:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    244:249:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    255:258:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    174:174:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    189:189:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    177:185:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    221:609:void <clinit>() -> <clinit>
    681:682:void <init>(android.content.Context) -> <init>
    685:686:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    368:757:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2736:2763:void absorbGlows(int,int) -> absorbGlows
    212:212:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    212:212:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    212:212:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    212:212:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1499:1510:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    3077:3080:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1636:1650:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1665:1666:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1335:1339:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3213:3214:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1773:1777:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    1291:1294:void addRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> addRecyclerListener
    4537:4541:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4555:4573:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4545:4550:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3164:3172:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3182:3197:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4848:4849:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3587:3589:void cancelScroll() -> cancelScroll
    4674:4674:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    6033:6049:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4728:4736:void clearOldPositions() -> clearOldPositions
    1359:1362:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1794:1797:void clearOnScrollListeners() -> clearOnScrollListeners
    2155:2158:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    2130:2133:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2178:2181:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2227:2230:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2203:2206:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2250:2253:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2713:2733:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1996:2031:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    815:865:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3755:3763:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4501:4502:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7864:7875:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7849:7860:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3824:3832:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3986:4032:void dispatchLayout() -> dispatchLayout
    4203:4288:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4295:4318:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4325:4409:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11960:11960:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11965:11965:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11948:11948:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11954:11954:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11928:11928:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11935:11935:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11942:11944:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5370:5387:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5328:5351:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11839:11853:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3890:3891:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1486:1487:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1478:1479:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3253:3264:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4603:4660:void draw(android.graphics.Canvas) -> draw
    5204:5204:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2806:2816:void ensureBottomGlow() -> ensureBottomGlow
    2766:2776:void ensureLeftGlow() -> ensureLeftGlow
    2779:2789:void ensureRightGlow() -> ensureRightGlow
    2792:2803:void ensureTopGlow() -> ensureTopGlow
    764:767:java.lang.String exceptionLabel() -> exceptionLabel
    4185:4193:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5187:5199:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4963:4968:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4980:4981:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3282:3291:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4475:4498:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    6011:6026:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    4072:4095:android.view.View findNextViewToFocus() -> findNextViewToFocus
    5098:5115:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    5160:5175:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    5076:5076:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    5048:5048:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    5120:5142:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2571:2618:boolean fling(int,int) -> fling
    2881:2955:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4679:4682:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4687:4690:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4695:4698:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    807:807:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1260:1260:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11856:11861:int getAdapterPositionInRecyclerView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionInRecyclerView
    1315:1318:int getBaseline() -> getBaseline
    4532:4532:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    5008:5009:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13874:13877:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    5034:5038:long getChildItemId(android.view.View) -> getChildItemId
    5023:5024:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4998:4998:int getChildPosition(android.view.View) -> getChildPosition
    4942:4947:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4986:4989:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1131:1131:boolean getClipToPadding() -> getClipToPadding
    791:791:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5266:5267:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5270:5276:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4173:4181:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2846:2846:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    868:874:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3905:3905:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5279:5300:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1677:1682:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1691:1691:int getItemDecorationCount() -> getItemDecorationCount
    1543:1543:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2656:2656:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2646:2646:int getMinFlingVelocity() -> getMinFlingVelocity
    6058:6061:long getNanoTime() -> getNanoTime
    1437:1437:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4915:4915:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1556:1556:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1603:1603:int getScrollState() -> getScrollState
    13903:13906:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4429:4456:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1103:1103:boolean hasFixedSize() -> hasFixedSize
    11917:11917:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11922:11922:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5403:5404:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    2037:2047:boolean hasUpdatedView() -> hasUpdatedView
    1001:1081:void initAdapterManager() -> initAdapterManager
    778:782:void initAutofill() -> initAutofill
    878:998:void initChildrenHelper() -> initChildrenHelper
    11868:11881:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2819:2820:void invalidateGlows() -> invalidateGlows
    4893:4902:void invalidateItemDecorations() -> invalidateItemDecorations
    3820:3820:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4710:4710:boolean isAnimating() -> isAnimating
    3153:3153:boolean isAttachedToWindow() -> isAttachedToWindow
    3854:3854:boolean isComputingLayout() -> isComputingLayout
    2410:2410:boolean isLayoutFrozen() -> isLayoutFrozen
    2373:2373:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11892:11892:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2967:3021:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1823:1832:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4593:4599:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4877:4886:void markKnownViewsInvalid() -> markKnownViewsInvalid
    1892:1893:void nestedScrollBy(int,int) -> nestedScrollBy
    1907:1945:void nestedScrollByInternal(int,int,android.view.MotionEvent,int) -> nestedScrollByInternal
    5252:5256:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5214:5218:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4773:4787:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4739:4770:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4791:4817:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    3094:3124:void onAttachedToWindow() -> onAttachedToWindow
    5231:5231:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5243:5243:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    3128:3146:void onDetachedFromWindow() -> onDetachedFromWindow
    4664:4670:void onDraw(android.graphics.Canvas) -> onDraw
    3797:3798:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3801:3802:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3805:3817:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3604:3649:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3296:3403:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4577:4581:void onLayout(boolean,int,int,int,int) -> onLayout
    3654:3746:void onMeasure(int,int) -> onMeasure
    3592:3600:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    3084:3089:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1456:1471:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1442:1451:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5365:5365:void onScrollStateChanged(int) -> onScrollStateChanged
    5325:5325:void onScrolled(int,int) -> onScrolled
    3767:3772:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3418:3575:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3913:3917:void postAnimationRunner() -> postAnimationRunner
    3920:3920:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3930:3958:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4867:4870:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2663:2687:void pullGlows(float,float,float,float) -> pullGlows
    4465:4472:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    4099:4170:void recoverFocusFromState() -> recoverFocusFromState
    2690:2710:void releaseGlows() -> releaseGlows
    1204:1217:void removeAndRecycleViews() -> removeAndRecycleViews
    1520:1532:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4508:4525:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1718:1728:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1700:1706:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1348:1352:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3222:3226:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1785:1788:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    1302:1303:void removeRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> removeRecyclerListener
    5678:5693:void repositionShadowingViews() -> repositionShadowingViews
    3026:3030:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    3043:3068:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    3072:3072:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3408:3414:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4585:4590:void requestLayout() -> requestLayout
    4056:4059:void resetFocusInfo() -> resetFocusInfo
    3579:3584:void resetScroll() -> resetScroll
    4035:4053:void saveFocusInfo() -> saveFocusInfo
    4714:4725:void saveOldPositions() -> saveOldPositions
    1869:1883:void scrollBy(int,int) -> scrollBy
    2062:2107:boolean scrollByInternal(int,int,android.view.MotionEvent,int) -> scrollByInternal
    1960:1985:void scrollStep(int,int,int[]) -> scrollStep
    1863:1865:void scrollTo(int,int) -> scrollTo
    1809:1820:void scrollToPosition(int) -> scrollToPosition
    3882:3886:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    801:803:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1193:1197:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1231:1250:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1744:1749:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11829:11835:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1108:1116:void setClipToPadding(boolean) -> setClipToPadding
    2832:2835:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1095:1096:void setHasFixedSize(boolean) -> setHasFixedSize
    3786:3794:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1593:1594:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2401:2402:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1377:1416:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2419:2446:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11887:11888:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1427:1428:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1760:1761:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4932:4933:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1568:1569:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1277:1278:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1607:1619:void setScrollState(int) -> setScrollState
    1144:1158:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1578:1579:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3866:3877:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2455:2456:void smoothScrollBy(int,int) -> smoothScrollBy
    2467:2468:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2486:2487:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2524:2556:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1850:1859:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2268:2272:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11897:11897:boolean startNestedScroll(int) -> startNestedScroll
    11902:11902:boolean startNestedScroll(int,int) -> startNestedScroll
    2285:2316:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11907:11908:void stopNestedScroll() -> stopNestedScroll
    11912:11913:void stopNestedScroll(int) -> stopNestedScroll
    2626:2628:void stopScroll() -> stopScroll
    2634:2638:void stopScrollersInternal() -> stopScrollersInternal
    2345:2363:void suppressLayout(boolean) -> suppressLayout
    1176:1180:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4826:4845:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    401:401:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    404:418:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    599:599:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    602:606:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    609:609:void <init>() -> <init>
    612:613:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    643:643:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    654:655:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    647:649:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    660:672:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    676:677:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    878:878:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    889:894:void addView(android.view.View,int) -> addView
    949:961:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    965:980:void detachViewFromParent(int) -> detachViewFromParent
    923:923:android.view.View getChildAt(int) -> getChildAt
    881:881:int getChildCount() -> getChildCount
    943:943:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    898:898:int indexOfChild(android.view.View) -> indexOfChild
    984:988:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    992:996:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    928:939:void removeAllViews() -> removeAllViews
    903:919:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    1001:1001:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1046:1061:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    1004:1016:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1036:1038:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1070:1072:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1076:1079:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    1021:1024:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    1029:1031:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1042:1043:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1065:1066:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$7 -> androidx.recyclerview.widget.RecyclerView$7:
    7813:7813:void <clinit>() -> <clinit>
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    7173:7176:void <init>() -> <init>
    7325:7346:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7813:7819:boolean canRestoreState() -> canRestoreState
    7294:7305:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7279:7282:int findRelativeAdapterPositionIn(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> findRelativeAdapterPositionIn
    7389:7389:long getItemId(int) -> getItemId
    7361:7361:int getItemViewType(int) -> getItemViewType
    7802:7802:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy getStateRestorationPolicy() -> getStateRestorationPolicy
    7499:7499:boolean hasObservers() -> hasObservers
    7407:7407:boolean hasStableIds() -> hasStableIds
    7584:7585:void notifyDataSetChanged() -> notifyDataSetChanged
    7599:7600:void notifyItemChanged(int) -> notifyItemChanged
    7626:7627:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7689:7690:void notifyItemInserted(int) -> notifyItemInserted
    7704:7705:void notifyItemMoved(int,int) -> notifyItemMoved
    7643:7644:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7673:7674:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7722:7723:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7755:7756:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7738:7739:void notifyItemRemoved(int) -> notifyItemRemoved
    7543:7543:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7254:7255:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7552:7552:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7465:7465:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7479:7479:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7491:7491:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7428:7428:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7518:7519:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7373:7378:void setHasStableIds(boolean) -> setHasStableIds
    7789:7791:void setStateRestorationPolicy(androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy) -> setStateRestorationPolicy
    7531:7532:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy -> androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy:
    7827:7843:void <clinit>() -> <clinit>
    7827:7827:void <init>(java.lang.String,int) -> <init>
    7827:7827:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String) -> valueOf
    7827:7827:androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values() -> values
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12642:12642:void <init>() -> <init>
    12644:12644:boolean hasObservers() -> hasObservers
    12652:12655:void notifyChanged() -> notifyChanged
    12699:12702:void notifyItemMoved(int,int) -> notifyItemMoved
    12664:12665:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12673:12676:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12683:12686:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12693:12696:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    12658:12661:void notifyStateRestorationPolicyChanged() -> notifyStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    12106:12106:void <init>() -> <init>
    12109:12109:void onChanged() -> onChanged
    12113:12113:void onItemRangeChanged(int,int) -> onItemRangeChanged
    12118:12119:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    12123:12123:void onItemRangeInserted(int,int) -> onItemRangeInserted
    12131:12131:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    12127:12127:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    12143:12143:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5771:5771:void <init>() -> <init>
    5804:5804:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    13138:13208:void <init>() -> <init>
    13525:13536:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13713:13713:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    13741:13741:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13609:13613:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13650:13651:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    13749:13754:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    13234:13234:long getAddDuration() -> getAddDuration
    13270:13270:long getChangeDuration() -> getChangeDuration
    13216:13216:long getMoveDuration() -> getMoveDuration
    13252:13252:long getRemoveDuration() -> getRemoveDuration
    13682:13690:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13767:13767:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13624:13624:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13662:13662:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    13357:13357:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    13329:13329:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    13243:13244:void setAddDuration(long) -> setAddDuration
    13279:13280:void setChangeDuration(long) -> setChangeDuration
    13291:13292:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    13225:13226:void setMoveDuration(long) -> setMoveDuration
    13261:13262:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13834:13835:void <init>() -> <init>
    13846:13846:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13862:13867:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    13096:13097:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    13101:13113:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10975:10975:void <init>() -> <init>
    11024:11025:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    11049:11051:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10986:10987:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10994:10994:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    11007:11008:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    11015:11015:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7892:7999:void <init>() -> <init>
    8819:8820:void addDisappearingView(android.view.View) -> addDisappearingView
    8837:8838:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8848:8849:void addView(android.view.View) -> addView
    8860:8861:void addView(android.view.View,int) -> addView
    8864:8915:void addViewInt(android.view.View,int,boolean) -> addViewInt
    8170:8173:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    8206:8209:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    9103:9113:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    9124:9125:void attachView(android.view.View,int) -> attachView
    9135:9136:void attachView(android.view.View) -> attachView
    9998:10004:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8714:8714:boolean canScrollHorizontally() -> canScrollHorizontally
    8724:8724:boolean canScrollVertically() -> canScrollVertically
    8629:8629:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    8185:8194:int chooseSize(int,int,int) -> chooseSize
    8386:8386:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8414:8414:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10427:10427:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10442:10442:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10457:10457:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10472:10472:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10487:10487:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10502:10502:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9490:9495:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    9174:9176:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    9188:9190:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    9061:9065:void detachView(android.view.View) -> detachView
    9083:9084:void detachViewAt(int) -> detachViewAt
    9090:9091:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8417:8419:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8422:8424:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8800:8803:void endAnimation(android.view.View) -> endAnimation
    9002:9012:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    9030:9042:android.view.View findViewByPosition(int) -> findViewByPosition
    8646:8651:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8670:8670:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8963:8963:int getBaseline() -> getBaseline
    10033:10033:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    9233:9233:android.view.View getChildAt(int) -> getChildAt
    9222:9222:int getChildCount() -> getChildCount
    9699:9725:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9741:9782:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    10126:10159:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8529:8529:boolean getClipToPadding() -> getClipToPadding
    10801:10801:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9977:9977:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9929:9930:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9941:9941:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9807:9808:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9794:9795:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9965:9965:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9953:9953:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9387:9394:android.view.View getFocusedChild() -> getFocusedChild
    9297:9297:int getHeight() -> getHeight
    9265:9265:int getHeightMode() -> getHeightMode
    9410:9411:int getItemCount() -> getItemCount
    8984:8984:int getItemViewType(android.view.View) -> getItemViewType
    8790:8790:int getLayoutDirection() -> getLayoutDirection
    10048:10048:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10556:10556:int getMinimumHeight() -> getMinimumHeight
    10548:10548:int getMinimumWidth() -> getMinimumWidth
    9337:9337:int getPaddingBottom() -> getPaddingBottom
    9357:9357:int getPaddingEnd() -> getPaddingEnd
    9307:9307:int getPaddingLeft() -> getPaddingLeft
    9327:9327:int getPaddingRight() -> getPaddingRight
    9347:9347:int getPaddingStart() -> getPaddingStart
    9317:9317:int getPaddingTop() -> getPaddingTop
    8974:8974:int getPosition(android.view.View) -> getPosition
    10905:10914:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    10063:10063:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10784:10784:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10768:10768:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    10018:10018:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9896:9919:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    9281:9281:int getWidth() -> getWidth
    9249:9249:int getWidthMode() -> getWidthMode
    10939:10947:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    9377:9377:boolean hasFocus() -> hasFocus
    9455:9464:void ignoreView(android.view.View) -> ignoreView
    8434:8434:boolean isAttachedToWindow() -> isAttachedToWindow
    8297:8297:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9367:9367:boolean isFocused() -> isFocused
    10265:10280:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8362:8362:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10815:10815:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9622:9622:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    9637:9650:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8778:8778:boolean isSmoothScrolling() -> isSmoothScrolling
    10242:10250:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9841:9844:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9876:9881:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9568:9582:void measureChild(android.view.View,int,int) -> measureChild
    9666:9683:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    9155:9162:void moveView(int,int) -> moveView
    9421:9424:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9433:9436:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10331:10331:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10357:10357:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8486:8486:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8494:8494:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8520:8521:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    10091:10091:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10680:10681:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10696:10707:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10631:10632:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10661:10676:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10711:10717:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10736:10736:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10112:10112:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10375:10375:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10366:10366:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10412:10412:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10382:10382:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10391:10391:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10399:10400:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8584:8585:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8599:8599:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10529:10530:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    10290:10290:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10312:10312:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10586:10586:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10571:10571:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10606:10606:void onScrollStateChanged(int) -> onScrollStateChanged
    10595:10598:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10820:10820:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10836:10862:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10868:10868:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10889:10889:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8447:8450:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8950:8954:void removeAllViews() -> removeAllViews
    10621:10627:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9526:9553:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    9199:9201:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    9210:9213:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8465:8468:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    9145:9146:void removeDetachedView(android.view.View) -> removeDetachedView
    8926:8927:void removeView(android.view.View) -> removeView
    8938:8942:void removeViewAt(int) -> removeViewAt
    10179:10179:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    10200:10214:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    8157:8160:void requestLayout() -> requestLayout
    10748:10749:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9498:9514:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8687:8687:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8738:8738:void scrollToPosition(int) -> scrollToPosition
    8704:8704:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    8225:8226:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    10918:10922:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8345:8352:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    8068:8079:void setMeasureSpecs(int,int) -> setMeasureSpecs
    8146:8151:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10540:10541:void setMeasuredDimension(int,int) -> setMeasuredDimension
    8095:8124:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    9633:9634:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    8052:8065:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9606:9609:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10935:10935:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9591:9593:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8752:8753:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8766:8772:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    9476:9480:void stopIgnoringView(android.view.View) -> stopIgnoringView
    10589:10592:void stopSmoothScroller() -> stopSmoothScroller
    8323:8323:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7901:7901:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7904:7904:android.view.View getChildAt(int) -> getChildAt
    7926:7928:int getChildEnd(android.view.View) -> getChildEnd
    7919:7921:int getChildStart(android.view.View) -> getChildStart
    7914:7914:int getParentEnd() -> getParentEnd
    7909:7909:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7937:7937:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7940:7940:android.view.View getChildAt(int) -> getChildAt
    7963:7965:int getChildEnd(android.view.View) -> getChildEnd
    7956:7958:int getChildStart(android.view.View) -> getChildStart
    7950:7951:int getParentEnd() -> getParentEnd
    7945:7945:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10953:10953:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11976:11985:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11976:11989:void <init>(int,int) -> <init>
    11976:11993:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11976:11997:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11976:12001:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    12086:12086:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    12098:12098:int getBindingAdapterPosition() -> getBindingAdapterPosition
    12071:12071:int getViewAdapterPosition() -> getViewAdapterPosition
    12060:12060:int getViewLayoutPosition() -> getViewLayoutPosition
    12050:12050:int getViewPosition() -> getViewPosition
    12042:12042:boolean isItemChanged() -> isItemChanged
    12031:12031:boolean isItemRemoved() -> isItemRemoved
    12020:12020:boolean isViewInvalid() -> isViewInvalid
    12010:12010:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    13074:13074:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    11137:11137:void <init>() -> <init>
    11146:11146:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    11160:11160:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5816:5842:void <init>() -> <init>
    5964:5965:void attach() -> attach
    5848:5852:void clear() -> clear
    5968:5969:void detach() -> detach
    5948:5951:void factorInBindTime(int,long) -> factorInBindTime
    5942:5945:void factorInCreateTime(int,long) -> factorInCreateTime
    5886:5895:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5873:5873:int getRecycledViewCount(int) -> getRecycledViewCount
    5997:6002:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5985:5994:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5922:5932:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5935:5938:long runningAverage(long,long) -> runningAverage
    5861:5867:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    5904:5911:int size() -> size
    5959:5960:boolean willBindInTime(int,long,long) -> willBindInTime
    5954:5955:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5833:5837:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    6078:6088:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6705:6724:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6480:6499:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6220:6249:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    6101:6103:void clear() -> clear
    7100:7115:void clearOldPositions() -> clearOldPositions
    6794:6798:void clearScrap() -> clearScrap
    6270:6277:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6948:6963:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6803:6828:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    7058:7061:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6786:6786:int getScrapCount() -> getScrapCount
    6133:6133:java.util.List getScrapList() -> getScrapList
    6894:6942:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6839:6889:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6790:6790:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6296:6296:android.view.View getViewForPosition(int) -> getViewForPosition
    6300:6300:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6502:6505:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6508:6526:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    7118:7126:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    7084:7097:void markKnownViewsInvalid() -> markKnownViewsInvalid
    7001:7013:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6973:6998:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    7022:7041:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6967:6969:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6732:6737:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6571:6579:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6596:6602:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6541:6568:void recycleView(android.view.View) -> recycleView
    6610:6694:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6749:6766:void scrapView(android.view.View) -> scrapView
    7048:7055:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    7044:7045:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    6111:6113:void setViewCacheSize(int) -> setViewCacheSize
    6185:6201:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6323:6476:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6775:6783:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    6116:6124:void updateViewCacheSize() -> updateViewCacheSize
    6147:6168:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    7065:7081:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5696:5697:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5701:5708:void onChanged() -> onChanged
    5712:5716:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5720:5724:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5736:5740:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5728:5732:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5753:5763:void onStateRestorationPolicyChanged() -> onStateRestorationPolicyChanged
    5743:5749:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12741:12741:void <clinit>() -> <clinit>
    12719:12722:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12728:12729:void <init>(android.os.Parcelable) -> <init>
    12738:12739:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12733:12735:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12741:12741:void <init>() -> <init>
    12741:12741:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12741:12741:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12744:12744:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12749:12749:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12741:12741:java.lang.Object[] newArray(int) -> newArray
    12754:12754:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    11113:11113:void <init>() -> <init>
    11116:11116:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    11125:11125:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    11121:11121:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    12157:12175:void <init>() -> <init>
    12231:12238:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    12368:12368:android.view.View findViewByPosition(int) -> findViewByPosition
    12361:12361:int getChildCount() -> getChildCount
    12354:12354:int getChildPosition(android.view.View) -> getChildPosition
    12247:12247:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    12299:12299:int getTargetPosition() -> getTargetPosition
    12377:12378:void instantScrollToPosition(int) -> instantScrollToPosition
    12281:12281:boolean isPendingInitialRun() -> isPendingInitialRun
    12289:12289:boolean isRunning() -> isRunning
    12395:12399:void normalize(android.graphics.PointF) -> normalize
    12303:12348:void onAnimation(int,int) -> onAnimation
    12381:12387:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    12217:12218:void setTargetPosition(int) -> setTargetPosition
    12192:12214:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    12257:12271:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12469:12470:void <init>(int,int) -> <init>
    12478:12479:void <init>(int,int,int) -> <init>
    12454:12494:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12573:12573:int getDuration() -> getDuration
    12554:12554:int getDx() -> getDx
    12564:12564:int getDy() -> getDy
    12583:12583:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    12516:12516:boolean hasJumpTarget() -> hasJumpTarget
    12512:12513:void jumpTo(int) -> jumpTo
    12520:12541:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12577:12579:void setDuration(int) -> setDuration
    12558:12560:void setDx(int) -> setDx
    12568:12570:void setDy(int) -> setDy
    12594:12596:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    12609:12614:void update(int,int,int,android.view.animation.Interpolator) -> update
    12544:12550:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12769:12841:void <init>() -> <init>
    12775:12780:void assertLayoutStep(int) -> assertLayoutStep
    12994:12994:boolean didStructureChange() -> didStructureChange
    12946:12949:java.lang.Object get(int) -> get
    13022:13024:int getItemCount() -> getItemCount
    13035:13035:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    13046:13046:int getRemainingScrollVertical() -> getRemainingScrollVertical
    12976:12976:int getTargetScrollPosition() -> getTargetScrollPosition
    12986:12986:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12889:12889:boolean isMeasuring() -> isMeasuring
    12898:12898:boolean isPreLayout() -> isPreLayout
    12867:12872:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12961:12965:void put(int,java.lang.Object) -> put
    12930:12934:void remove(int) -> remove
    13051:13051:java.lang.String toString() -> toString
    12909:12909:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    12920:12920:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    7142:7142:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5412:5422:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5658:5666:int computeScrollDuration(int,int) -> computeScrollDuration
    5590:5602:void fling(int,int) -> fling
    5585:5587:void internalPostOnAnimation() -> internalPostOnAnimation
    5577:5582:void postOnAnimation() -> postOnAnimation
    5426:5574:void run() -> run
    5620:5649:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5670:5672:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11328:11328:void <clinit>() -> <clinit>
    11222:11363:void <init>(android.view.View) -> <init>
    11661:11667:void addChangePayload(java.lang.Object) -> addChangePayload
    11657:11658:void addFlags(int) -> addFlags
    11388:11390:void clearOldPosition() -> clearOldPosition
    11677:11681:void clearPayload() -> clearPayload
    11604:11605:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11608:11609:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11670:11674:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11815:11815:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11366:11369:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11541:11544:int getAbsoluteAdapterPosition() -> getAbsoluteAdapterPosition
    11453:11453:int getAdapterPosition() -> getAdapterPosition
    11556:11556:androidx.recyclerview.widget.RecyclerView$Adapter getBindingAdapter() -> getBindingAdapter
    11488:11503:int getBindingAdapterPosition() -> getBindingAdapterPosition
    11581:11581:long getItemId() -> getItemId
    11588:11588:int getItemViewType() -> getItemViewType
    11440:11440:int getLayoutPosition() -> getLayoutPosition
    11571:11571:int getOldPosition() -> getOldPosition
    11413:11413:int getPosition() -> getPosition
    11684:11693:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11637:11637:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11649:11649:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11645:11645:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11629:11629:boolean isBound() -> isBound
    11621:11621:boolean isInvalid() -> isInvalid
    11798:11799:boolean isRecyclable() -> isRecyclable
    11633:11633:boolean isRemoved() -> isRemoved
    11592:11592:boolean isScrap() -> isScrap
    11641:11641:boolean isTmpDetached() -> isTmpDetached
    11819:11819:boolean isUpdated() -> isUpdated
    11625:11625:boolean needsUpdate() -> needsUpdate
    11372:11385:void offsetPosition(int,boolean) -> offsetPosition
    11717:11725:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11731:11734:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11698:11710:void resetInternal() -> resetInternal
    11393:11396:void saveOldPosition() -> saveOldPosition
    11653:11654:void setFlags(int,int) -> setFlags
    11774:11791:void setIsRecyclable(boolean) -> setIsRecyclable
    11616:11618:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11807:11807:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11399:11399:boolean shouldIgnore() -> shouldIgnore
    11612:11613:void stopIgnoring() -> stopIgnoring
    11739:11758:java.lang.String toString() -> toString
    11596:11597:void unScrap() -> unScrap
    11600:11600:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    112:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:132:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    99:100:void <init>() -> <init>
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    50:50:boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    71:72:void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    137:142:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    210:210:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    226:229:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    123:125:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:117:void setupCallbacks() -> setupCallbacks
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    229:229:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    248:248:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    232:244:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.SortedList:
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    143:144:int add(java.lang.Object) -> add
    542:563:int add(java.lang.Object,boolean) -> add
    162:172:void addAll(java.lang.Object[],boolean) -> addAll
    182:183:void addAll(java.lang.Object[]) -> addAll
    193:195:void addAll(java.util.Collection) -> addAll
    252:265:void addAllInternal(java.lang.Object[]) -> addAllInternal
    793:810:void addToData(int,java.lang.Object) -> addToData
    518:526:void beginBatchedUpdates() -> beginBatchedUpdates
    822:830:void clear() -> clear
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> copyArray
    532:539:void endBatchedUpdates() -> endBatchedUpdates
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    705:716:java.lang.Object get(int) -> get
    728:739:int indexOf(java.lang.Object) -> indexOf
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    408:472:void merge(java.lang.Object[],int) -> merge
    685:693:void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    574:575:boolean remove(java.lang.Object) -> remove
    593:598:boolean remove(java.lang.Object,boolean) -> remove
    586:589:java.lang.Object removeItemAt(int) -> removeItemAt
    602:608:void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    217:224:void replaceAll(java.lang.Object[],boolean) -> replaceAll
    235:236:void replaceAll(java.lang.Object[]) -> replaceAll
    247:249:void replaceAll(java.util.Collection) -> replaceAll
    334:338:void replaceAllInsert(java.lang.Object) -> replaceAllInsert
    268:331:void replaceAllInternal(java.lang.Object[]) -> replaceAllInternal
    341:344:void replaceAllRemove() -> replaceAllRemove
    114:114:int size() -> size
    353:391:int sortAndDedup(java.lang.Object[]) -> sortAndDedup
    479:483:void throwIfInMutationOperation() -> throwIfInMutationOperation
    631:655:void updateItemAt(int,java.lang.Object) -> updateItemAt
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.SortedList$BatchedCallback:
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    1007:1008:void dispatchLastEvent() -> dispatchLastEvent
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    978:979:void onChanged(int,int) -> onChanged
    983:984:void onChanged(int,int,java.lang.Object) -> onChanged
    963:964:void onInserted(int,int) -> onInserted
    973:974:void onMoved(int,int) -> onMoved
    968:969:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.SortedList$Callback:
    840:840:void <init>() -> <init>
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    866:867:void onChanged(int,int,java.lang.Object) -> onChanged
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.SortedListAdapterCallback:
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    54:55:void onChanged(int,int) -> onChanged
    59:60:void onChanged(int,int,java.lang.Object) -> onChanged
    39:40:void onInserted(int,int) -> onInserted
    49:50:void onMoved(int,int) -> onMoved
    44:45:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage:
    79:80:void <init>() -> <init>
    89:89:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
    83:83:long obtainId() -> obtainId
androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage$WrapperStableIdLookup -> androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage$WrapperStableIdLookup:
    92:93:void <init>(androidx.recyclerview.widget.StableIdStorage$IsolatedStableIdStorage) -> <init>
    97:102:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage:
    41:42:void <init>() -> <init>
    52:52:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage$1 -> androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage$1:
    42:42:void <init>(androidx.recyclerview.widget.StableIdStorage$NoStableIdStorage) -> <init>
    45:45:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage -> androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage:
    59:60:void <init>() -> <init>
    70:70:androidx.recyclerview.widget.StableIdStorage$StableIdLookup createStableIdLookup() -> createStableIdLookup
androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage$1 -> androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage$1:
    60:60:void <init>(androidx.recyclerview.widget.StableIdStorage$SharedPoolStableIdStorage) -> <init>
    63:63:long localToGlobal(long) -> localToGlobal
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    106:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    106:249:void <init>(int,int) -> <init>
    1780:1783:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    794:827:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1839:1845:boolean areAllEndsEqual() -> areAllEndsEqual
    1849:1855:boolean areAllStartsEqual() -> areAllStartsEqual
    527:530:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1724:1737:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2017:2021:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2001:2001:boolean canScrollHorizontally() -> canScrollHorizontally
    1996:1996:boolean canScrollVertically() -> canScrollVertically
    269:310:boolean checkForGaps() -> checkForGaps
    2247:2247:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    402:415:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2097:2129:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1096:1096:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1076:1076:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1116:1116:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1100:1105:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1080:1085:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1120:1125:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2026:2038:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1111:1111:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1091:1091:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1131:1131:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2366:2399:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1706:1711:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1715:1720:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    257:260:void createOrientationHelpers() -> createOrientationHelpers
    1549:1702:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    998:1007:int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    2192:2200:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1361:1380:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1331:1351:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1319:1321:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    966:975:int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    1062:1071:int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    2209:2216:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1030:1039:int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    1385:1400:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1404:1419:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2222:2226:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2233:2233:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2238:2241:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2182:2183:int getFirstChildPosition() -> getFirstChildPosition
    499:499:int getGapStrategy() -> getGapStrategy
    2177:2178:int getLastChildPosition() -> getLastChildPosition
    1859:1866:int getMaxEnd(int) -> getMaxEnd
    1817:1824:int getMaxStart(int) -> getMaxStart
    1870:1877:int getMinEnd(int) -> getMinEnd
    1828:1835:int getMinStart(int) -> getMinStart
    1954:1990:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    2251:2251:int getOrientation() -> getOrientation
    579:579:boolean getReverseLayout() -> getReverseLayout
    538:538:int getSpanCount() -> getSpanCount
    1505:1545:void handleUpdate(int,int,int) -> handleUpdate
    338:398:android.view.View hasGapsToFix() -> hasGapsToFix
    548:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    253:253:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    567:567:boolean isLayoutRTL() -> isLayoutRTL
    1136:1197:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1201:1214:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1460:1464:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1468:1472:void offsetChildrenVertical(int) -> offsetChildrenVertical
    611:615:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    322:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2258:2352:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1294:1311:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1481:1482:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1486:1488:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1492:1493:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1476:1477:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1498:1499:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    604:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    619:730:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    734:739:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1230:1240:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1244:1289:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    315:318:void onScrollStateChanged(int) -> onScrollStateChanged
    1944:1947:boolean preferLastSpan(int) -> preferLastSpan
    2134:2146:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1787:1790:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1740:1776:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1910:1938:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1881:1907:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    742:788:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    559:564:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2149:2173:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2007:2007:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2051:2057:void scrollToPosition(int) -> scrollToPosition
    2073:2079:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2013:2013:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    512:523:void setGapStrategy(int) -> setGapStrategy
    1453:1456:void setLayoutStateDirection(int) -> setLayoutStateDirection
    586:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    448:460:void setOrientation(int) -> setOrientation
    476:482:void setReverseLayout(boolean) -> setReverseLayout
    428:439:void setSpanCount(int) -> setSpanCount
    2044:2047:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    943:943:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1793:1799:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    848:852:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    857:931:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    830:841:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1422:1450:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    935:939:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1802:1814:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1217:1225:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    215:215:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    218:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3243:3245:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3270:3272:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3275:3280:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3248:3256:void reset() -> reset
    3259:3267:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2424:2425:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2428:2429:void <init>(int,int) -> <init>
    2432:2433:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2436:2437:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2440:2441:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2472:2475:int getSpanIndex() -> getSpanIndex
    2462:2462:boolean isFullSpan() -> isFullSpan
    2452:2453:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2812:2812:void <init>() -> <init>
    2983:3003:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2891:2895:void clear() -> clear
    2879:2888:void ensureSize(int) -> ensureSize
    2823:2831:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3027:3042:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3006:3015:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2858:2861:int getSpan(int) -> getSpan
    2838:2853:int invalidateAfter(int) -> invalidateAfter
    2957:2979:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2928:2937:void offsetForAddition(int,int) -> offsetForAddition
    2898:2907:void offsetForRemoval(int,int) -> offsetForRemoval
    2940:2950:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2910:2925:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2866:2868:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2871:2875:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3105:3105:void <clinit>() -> <clinit>
    3059:3068:void <init>(android.os.Parcel) -> <init>
    3070:3071:void <init>() -> <init>
    3079:3079:int describeContents() -> describeContents
    3074:3074:int getGapForSpan(int) -> getGapForSpan
    3097:3101:java.lang.String toString() -> toString
    3084:3093:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3106:3106:void <init>() -> <init>
    3106:3106:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3109:3109:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3106:3106:java.lang.Object[] newArray(int) -> newArray
    3114:3114:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3215:3215:void <clinit>() -> <clinit>
    3138:3139:void <init>() -> <init>
    3141:3162:void <init>(android.os.Parcel) -> <init>
    3164:3175:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3194:3194:int describeContents() -> describeContents
    3186:3190:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3178:3183:void invalidateSpanInfo() -> invalidateSpanInfo
    3199:3213:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3216:3216:void <init>() -> <init>
    3216:3216:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3219:3219:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3216:3216:java.lang.Object[] newArray(int) -> newArray
    3224:3224:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2483:2491:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2574:2584:void appendToSpan(android.view.View) -> appendToSpan
    2589:2606:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2539:2549:void calculateCachedEnd() -> calculateCachedEnd
    2505:2515:void calculateCachedStart() -> calculateCachedStart
    2609:2612:void clear() -> clear
    2680:2682:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    2674:2676:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2668:2670:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2698:2700:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    2692:2694:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2686:2688:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2730:2757:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2767:2767:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2761:2761:int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    2651:2651:int getDeletedSize() -> getDeletedSize
    2527:2535:int getEndLine(int) -> getEndLine
    2553:2557:int getEndLine() -> getEndLine
    2775:2804:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2655:2655:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2494:2501:int getStartLine(int) -> getStartLine
    2519:2523:int getStartLine() -> getStartLine
    2615:2617:void invalidateCache() -> invalidateCache
    2659:2665:void onOffset(int) -> onOffset
    2624:2635:void popEnd() -> popEnd
    2638:2648:void popStart() -> popStart
    2561:2571:void prependToSpan(android.view.View) -> prependToSpan
    2620:2621:void setLine(int) -> setLine
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.TileList:
    31:37:void <init>(int) -> <init>
    71:81:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> addOrReplace
    56:57:void clear() -> clear
    64:67:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> getAtIndex
    40:48:java.lang.Object getItemAt(int) -> getItemAt
    85:90:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> removeAtPos
    52:52:int size() -> size
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.TileList$Tile:
    99:103:void <init>(java.lang.Class,int) -> <init>
    106:106:boolean containsPosition(int) -> containsPosition
    110:110:java.lang.Object getByPosition(int) -> getByPosition
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:149:void addFlags(int) -> addFlags
    166:189:boolean boundsMatch() -> boundsMatch
    156:162:int compare(int,int) -> compare
    152:153:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:56:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:274:void onDetach() -> onDetach
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    326:327:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage -> androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage:
    120:123:void <init>() -> <init>
    147:147:androidx.recyclerview.widget.ViewTypeStorage$ViewTypeLookup createViewTypeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> createViewTypeWrapper
    134:140:androidx.recyclerview.widget.NestedAdapterWrapper getWrapperForGlobalType(int) -> getWrapperForGlobalType
    126:128:int obtainViewType(androidx.recyclerview.widget.NestedAdapterWrapper) -> obtainViewType
    151:157:void removeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> removeWrapper
androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage$WrapperViewTypeLookup -> androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage$WrapperViewTypeLookup:
    160:166:void <init>(androidx.recyclerview.widget.ViewTypeStorage$IsolatedViewTypeStorage,androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    193:194:void dispose() -> dispose
    183:188:int globalToLocal(int) -> globalToLocal
    170:178:int localToGlobal(int) -> localToGlobal
androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage -> androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage:
    50:53:void <init>() -> <init>
    72:72:androidx.recyclerview.widget.ViewTypeStorage$ViewTypeLookup createViewTypeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> createViewTypeWrapper
    58:65:androidx.recyclerview.widget.NestedAdapterWrapper getWrapperForGlobalType(int) -> getWrapperForGlobalType
    76:84:void removeWrapper(androidx.recyclerview.widget.NestedAdapterWrapper) -> removeWrapper
androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage$WrapperViewTypeLookup -> androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage$WrapperViewTypeLookup:
    89:91:void <init>(androidx.recyclerview.widget.ViewTypeStorage$SharedIdRangeViewTypeStorage,androidx.recyclerview.widget.NestedAdapterWrapper) -> <init>
    115:116:void dispose() -> dispose
    110:110:int globalToLocal(int) -> globalToLocal
    96:105:int localToGlobal(int) -> localToGlobal
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:66:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:93:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:101:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:113:void add(java.lang.String) -> add
    106:108:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:53:void <init>() -> <init>
    76:88:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    134:134:boolean isRestored() -> isRestored
    190:209:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:230:void performSave(android.os.Bundle) -> performSave
    109:114:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:181:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
    123:124:void unregisterSavedStateProvider(java.lang.String) -> unregisterSavedStateProvider
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:63:void performRestore(android.os.Bundle) -> performRestore
    74:75:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    30:32:void <init>() -> <init>
    70:80:androidx.savedstate.SavedStateRegistryOwner get(android.view.View) -> get
    53:54:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.startup.AppInitializer -> androidx.startup.AppInitializer:
    55:55:void <clinit>() -> <clinit>
    71:75:void <init>(android.content.Context) -> <init>
    177:208:void discoverAndInitialize() -> discoverAndInitialize
    123:171:java.lang.Object doInitialize(java.lang.Class,java.util.Set) -> doInitialize
    84:91:androidx.startup.AppInitializer getInstance(android.content.Context) -> getInstance
    104:104:java.lang.Object initializeComponent(java.lang.Class) -> initializeComponent
    115:115:boolean isEagerlyInitialized(java.lang.Class) -> isEagerlyInitialized
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
    37:37:void <init>() -> <init>
    77:77:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    63:63:java.lang.String getType(android.net.Uri) -> getType
    69:69:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    40:46:boolean onCreate() -> onCreate
    57:57:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    86:86:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.startup.StartupException -> androidx.startup.StartupException:
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    39:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
androidx.startup.StartupLogger -> androidx.startup.StartupLogger:
    32:34:void <init>() -> <init>
    62:63:void e(java.lang.String,java.lang.Throwable) -> e
    52:53:void i(java.lang.String) -> i
androidx.tracing.Trace -> androidx.tracing.Trace:
    240:241:void <init>() -> <init>
    111:118:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    177:191:void beginAsyncSectionFallback(java.lang.String,int) -> beginAsyncSectionFallback
    80:83:void beginSection(java.lang.String) -> beginSection
    131:138:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    194:208:void endAsyncSectionFallback(java.lang.String,int) -> endAsyncSectionFallback
    93:96:void endSection() -> endSection
    229:238:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:173:boolean isEnabledFallback() -> isEnabledFallback
    149:156:void setCounter(java.lang.String,int) -> setCounter
    211:226:void setCounterFallback(java.lang.String,int) -> setCounterFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    33:35:void <init>() -> <init>
    49:50:void beginSection(java.lang.String) -> beginSection
    60:61:void endSection() -> endSection
androidx.tracing.TraceApi29Impl -> androidx.tracing.TraceApi29Impl:
    33:35:void <init>() -> <init>
    46:47:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    58:59:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    68:69:void setCounter(java.lang.String,int) -> setCounter
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
    151:152:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    156:733:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:536:boolean canApplyTheme() -> canApplyTheme
    856:867:void clearAnimationCallbacks() -> clearAnimationCallbacks
    920:929:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    143:143:void clearColorFilter() -> clearColorFilter
    212:219:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    877:889:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:831:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    661:679:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:851:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    899:907:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:652:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:150:void <init>() -> <init>
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:68:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:922:void <init>() -> <init>
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    673:684:void dumpKeyframes(java.lang.Object[],java.lang.String) -> dumpKeyframes
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    917:917:boolean isColorType(int) -> isColorType
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:495:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:167:void <init>() -> <init>
    177:179:void <init>(androidx.core.graphics.PathParser$PathDataNode[]) -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:199:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    195:223:float getInterpolation(float) -> getInterpolation
    130:134:void initCubic(float,float,float,float) -> initCubic
    137:181:void initPath(android.graphics.Path) -> initPath
    123:127:void initQuad(float,float) -> initQuad
    82:120:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    53:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    311:323:void <init>() -> <init>
    311:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:690:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:650:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:428:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    618:631:float getPixelSize() -> getPixelSize
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:879:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:534:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    907:909:boolean needMirroring() -> needMirroring
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    734:748:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    882:899:void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int) -> printGroupTree
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:903:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:812:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    477:483:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1810:1810:boolean isClipPath() -> isClipPath
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1822:1837:void <init>() -> <init>
    1822:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1972:1973:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1886:1886:boolean canApplyTheme() -> canApplyTheme
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1859:1867:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1872:1880:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1967:boolean onStateChanged(int[]) -> onStateChanged
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1445:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1445:1507:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1669:boolean isStateful() -> isStateful
    1674:1678:boolean onStateChanged(int[]) -> onStateChanged
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
    1563:1568:void updateLocalMatrix() -> updateLocalMatrix
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> isStateful
    1438:1438:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1687:1695:void <init>() -> <init>
    1687:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1741:1741:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1737:1737:boolean canApplyTheme() -> canApplyTheme
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1744:1744:boolean isClipPath() -> isClipPath
    1708:1716:java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[]) -> nodesToString
    1698:1705:void printVPath(int) -> printVPath
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1730:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1171:1195:void <init>() -> <init>
    1171:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1379:1379:float cross(float,float,float,float) -> cross
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1015:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1015:1123:void <init>() -> <init>
    1093:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1108:boolean canReuseCache() -> canReuseCache
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1149:boolean onStateChanged(int[]) -> onStateChanged
    1114:1119:void updateCacheStates() -> updateCacheStates
    1078:1081:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    45:45:void onPostParceling() -> onPostParceling
    36:36:void onPreParceling(boolean) -> onPreParceling
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    58:61:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:117:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
    144:157:java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String) -> getVersionedParcelableList
    91:97:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> putVersionedParcelable
    126:133:void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List) -> putVersionedParcelableList
    70:73:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1219:1237:java.lang.Exception createException(int,java.lang.String) -> createException
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1208:1209:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    995:1010:int getType(java.lang.Object) -> getType
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    578:581:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    587:595:boolean[] readBooleanArray() -> readBooleanArray
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1245:1248:byte readByte(byte,int) -> readByte
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    625:636:char[] readCharArray(char[],int) -> readCharArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1344:1386:java.util.Collection readCollection(java.util.Collection) -> readCollection
    441:444:double readDouble(double,int) -> readDouble
    795:798:double[] readDoubleArray(double[],int) -> readDoubleArray
    804:812:double[] readDoubleArray() -> readDoubleArray
    1170:1178:java.lang.Exception readException(java.lang.Exception,int) -> readException
    1198:1199:java.lang.Exception readException(int,java.lang.String) -> readException
    1193:1194:int readExceptionCode() -> readExceptionCode
    430:433:float readFloat(float,int) -> readFloat
    751:754:float[] readFloatArray(float[],int) -> readFloatArray
    760:768:float[] readFloatArray() -> readFloatArray
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    663:666:int[] readIntArray(int[],int) -> readIntArray
    672:680:int[] readIntArray() -> readIntArray
    1337:1340:java.util.List readList(java.util.List,int) -> readList
    419:422:long readLong(long,int) -> readLong
    707:710:long[] readLongArray(long[],int) -> readLongArray
    716:724:long[] readLongArray() -> readLongArray
    1401:1419:java.util.Map readMap(java.util.Map,int) -> readMap
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1523:1553:java.io.Serializable readSerializable() -> readSerializable
    1318:1321:java.util.Set readSet(java.util.Set,int) -> readSet
    1256:1264:android.util.Size readSize(android.util.Size,int) -> readSize
    1272:1280:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1289:1302:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    941:943:void writeArray(java.lang.Object[],int) -> writeArray
    948:992:void writeArray(java.lang.Object[]) -> writeArray
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    557:559:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    564:573:void writeBooleanArray(boolean[]) -> writeBooleanArray
    285:287:void writeBundle(android.os.Bundle,int) -> writeBundle
    504:506:void writeByte(byte,int) -> writeByte
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    316:318:void writeByteArray(byte[],int,int,int) -> writeByteArray
    601:611:void writeCharArray(char[],int) -> writeCharArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    875:877:void writeCollection(java.util.Collection,int) -> writeCollection
    880:928:void writeCollection(java.util.Collection) -> writeCollection
    361:363:void writeDouble(double,int) -> writeDouble
    774:776:void writeDoubleArray(double[],int) -> writeDoubleArray
    781:790:void writeDoubleArray(double[]) -> writeDoubleArray
    1107:1147:void writeException(java.lang.Exception,int) -> writeException
    352:354:void writeFloat(float,int) -> writeFloat
    730:732:void writeFloatArray(float[],int) -> writeFloatArray
    737:746:void writeFloatArray(float[]) -> writeFloatArray
    334:336:void writeInt(int,int) -> writeInt
    642:644:void writeIntArray(int[],int) -> writeIntArray
    649:658:void writeIntArray(int[]) -> writeIntArray
    840:841:void writeList(java.util.List,int) -> writeList
    343:345:void writeLong(long,int) -> writeLong
    686:688:void writeLongArray(long[],int) -> writeLongArray
    693:702:void writeLongArray(long[]) -> writeLongArray
    854:872:void writeMap(java.util.Map,int) -> writeMap
    1157:1158:void writeNoException() -> writeNoException
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    1057:1059:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    1062:1081:void writeSerializable(java.io.Serializable) -> writeSerializable
    826:827:void writeSet(java.util.Set,int) -> writeSet
    514:520:void writeSize(android.util.Size,int) -> writeSize
    528:534:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    539:552:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    370:372:void writeString(java.lang.String,int) -> writeString
    379:381:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    276:278:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1586:1600:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1048:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1643:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:54:void <init>(android.os.Parcel) -> <init>
    41:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    253:253:android.os.Bundle readBundle() -> readBundle
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    221:221:double readDouble() -> readDouble
    70:84:boolean readField(int) -> readField
    216:216:float readFloat() -> readFloat
    206:206:int readInt() -> readInt
    211:211:long readLong() -> readLong
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    231:231:android.os.IBinder readStrongBinder() -> readStrongBinder
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    191:192:void writeBundle(android.os.Bundle) -> writeBundle
    126:132:void writeByteArray(byte[]) -> writeByteArray
    136:142:void writeByteArray(byte[],int,int) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    161:162:void writeDouble(double) -> writeDouble
    156:157:void writeFloat(float) -> writeFloat
    146:147:void writeInt(int) -> writeInt
    151:152:void writeLong(long) -> writeLong
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
    171:172:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    186:187:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    44:44:void <clinit>() -> <clinit>
    76:78:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    71:123:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    142:152:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    127:127:boolean isStream() -> isStream
    402:404:boolean readBoolean() -> readBoolean
    429:438:android.os.Bundle readBundle() -> readBundle
    381:390:byte[] readByteArray() -> readByteArray
    396:396:java.lang.CharSequence readCharSequence() -> readCharSequence
    356:358:double readDouble() -> readDouble
    164:186:boolean readField(int) -> readField
    347:349:float readFloat() -> readFloat
    329:331:int readInt() -> readInt
    338:340:long readLong() -> readLong
    489:538:void readObject(int,java.lang.String,android.os.Bundle) -> readObject
    323:323:android.os.Parcelable readParcelable() -> readParcelable
    365:374:java.lang.String readString() -> readString
    317:317:android.os.IBinder readStrongBinder() -> readStrongBinder
    191:194:void setOutputField(int) -> setOutputField
    134:138:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:292:void writeBoolean(boolean) -> writeBoolean
    411:425:void writeBundle(android.os.Bundle) -> writeBundle
    199:208:void writeByteArray(byte[]) -> writeByteArray
    213:222:void writeByteArray(byte[],int,int) -> writeByteArray
    226:229:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    263:268:void writeDouble(double) -> writeDouble
    253:258:void writeFloat(float) -> writeFloat
    234:238:void writeInt(int) -> writeInt
    243:248:void writeLong(long) -> writeLong
    442:486:void writeObject(java.lang.Object) -> writeObject
    303:306:void writeParcelable(android.os.Parcelable) -> writeParcelable
    273:283:void writeString(java.lang.String) -> writeString
    296:299:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    310:313:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$1 -> androidx.versionedparcelable.VersionedParcelStream$1:
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:93:int read() -> read
    98:105:int read(byte[],int,int) -> read
    110:117:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    544:552:void <init>(int,java.io.DataOutputStream) -> <init>
    555:563:void flushField() -> flushField
androidx.viewbinding.BuildConfig -> androidx.viewbinding.BuildConfig:
    6:6:void <init>() -> <init>
androidx.viewbinding.ViewBindings -> androidx.viewbinding.ViewBindings:
    30:31:void <init>() -> <init>
    40:51:android.view.View findChildViewById(android.view.View,int) -> findChildViewById
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:295:void notifyDataSetChanged() -> notifyDataSetChanged
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:319:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    83:84:void <init>(android.content.Context) -> <init>
    68:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
    285:301:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    61:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:254:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:452:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    221:224:void setTextSize(int,float) -> setTextSize
    173:175:void setTextSpacing(int) -> setTextSpacing
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:416:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:515:void onChanged() -> onChanged
    500:501:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    480:485:void onPageScrolled(int,float,int) -> onPageScrolled
    489:496:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    155:393:void <init>(android.content.Context) -> <init>
    155:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    2528:2544:boolean beginFakeDrag() -> beginFakeDrag
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:748:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2554:2576:void endFakeDrag() -> endFakeDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2628:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2289:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1847:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1279:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:672:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    939:940:void smoothScrollTo(int,int) -> smoothScrollTo
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3126:3146:void <init>() -> <init>
    3126:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3083:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
    330:330:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
b.RecordManager$$ExternalSyntheticLambda0 -> b.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.utils.RecordManager com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$1.f$0 -> a
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$1.<init>(com.lizhidan.voicebutton.utils.RecordManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$1.onError(android.media.MediaRecorder,int,int) -> onError
      # {"id":"com.android.tools.r8.synthesized"}
b.RecordManager$$ExternalSyntheticLambda1 -> b.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.utils.RecordManager com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$0.f$0 -> a
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$0.<init>(com.lizhidan.voicebutton.utils.RecordManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$0.onInfo(android.media.MediaRecorder,int,int) -> onInfo
      # {"id":"com.android.tools.r8.synthesized"}
b.RecordManager$$ExternalSyntheticLambda2 -> b.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.utils.RecordManager com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$2.f$0 -> b
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$2.<init>(com.lizhidan.voicebutton.utils.RecordManager) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.utils.RecordManager$$InternalSyntheticLambda$0$434d2a96fe382830e6450424aa9bc9d0406d8fc763a79fa0703393fd449cb55d$2.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
c.MainActivity$initView$2$$ExternalSyntheticLambda0 -> c.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebuttondemo.MainActivity com.lizhidan.voicebuttondemo.MainActivity$initView$2$$InternalSyntheticLambda$1$64f6f032ffdfcac15bd16ab2b40965f0850f7dd7d148fb5578c34e1678cca323$0.f$0 -> a
    void com.lizhidan.voicebuttondemo.MainActivity$initView$2$$InternalSyntheticLambda$1$64f6f032ffdfcac15bd16ab2b40965f0850f7dd7d148fb5578c34e1678cca323$0.<init>(com.lizhidan.voicebuttondemo.MainActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebuttondemo.MainActivity$initView$2$$InternalSyntheticLambda$1$64f6f032ffdfcac15bd16ab2b40965f0850f7dd7d148fb5578c34e1678cca323$0.onCompletion(android.media.MediaPlayer) -> onCompletion
      # {"id":"com.android.tools.r8.synthesized"}
com.google.common.util.concurrent.ListenableFuture -> a.a:
com.lizhidan.voicebutton.BuildConfig -> com.lizhidan.voicebutton.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.lizhidan.voicebutton.VoiceButton -> com.lizhidan.voicebutton.VoiceButton:
# {"id":"sourceFile","fileName":"VoiceButton.kt"}
    20:306:void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:285:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    254:254:void _init_$lambda-7(int) -> _init_$lambda-7
    280:282:boolean _init_$lambda-8(com.lizhidan.voicebutton.VoiceButton,android.view.View) -> _init_$lambda-8
    void $r8$lambda$3ul-b4-b1i00I9RzdMWkDH9g4YI(com.lizhidan.voicebutton.VoiceButton) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    20:20:void access$changeState(com.lizhidan.voicebutton.VoiceButton,int) -> access$changeState
    20:20:java.lang.Runnable access$getMUpdateMicStatusTimer$p(com.lizhidan.voicebutton.VoiceButton) -> access$getMUpdateMicStatusTimer$p
    20:20:com.lizhidan.voicebutton.utils.RecordDialogManager access$getRecordDialogManager$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordDialogManager$p
    20:20:com.lizhidan.voicebutton.utils.RecordManager access$getRecordManager$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordManager$p
    20:20:long access$getRecordTime$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordTime$p
    20:20:com.lizhidan.voicebutton.VoiceButton$RecorderListener access$getRecorderListener$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecorderListener$p
    20:20:void access$resetRecordState(com.lizhidan.voicebutton.VoiceButton) -> access$resetRecordState
    20:20:void access$setRecording$p(com.lizhidan.voicebutton.VoiceButton,boolean) -> access$setRecording$p
    void $r8$lambda$LBF6CLAbgk4iwM-rU3aGKAnKA8w(com.lizhidan.voicebutton.VoiceButton) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$Rrs80gGYonkxK4I1TQ1_KtBEm78(int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    172:189:void changeState(int) -> changeState
    void $r8$lambda$qgHXZQ4N21znlPbcWlLA0g2uoeo(com.lizhidan.voicebutton.VoiceButton) -> d
      # {"id":"com.android.tools.r8.synthesized"}
    91:91:void dismissDialogRunable$lambda-6(com.lizhidan.voicebutton.VoiceButton) -> dismissDialogRunable$lambda-6
    boolean $r8$lambda$xWjpdumfHDc_vdUEJRMsBB1vZbE(com.lizhidan.voicebutton.VoiceButton,android.view.View) -> e
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$z073bzpWYLCB6z8d1wpPh74IIKg(com.lizhidan.voicebutton.VoiceButton) -> f
      # {"id":"com.android.tools.r8.synthesized"}
    69:84:void mUpdateMicStatusTimer$lambda-3(com.lizhidan.voicebutton.VoiceButton) -> mUpdateMicStatusTimer$lambda-3
    111:161:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    300:305:void releaseAudioFocus() -> releaseAudioFocus
    288:297:void requestAudioFocus() -> requestAudioFocus
    195:198:void resetRecordState() -> resetRecordState
    48:51:void setFmt(java.lang.String) -> setFmt
    43:46:void setMaxRecordLength(int) -> setMaxRecordLength
    106:107:void setRecorderListener(com.lizhidan.voicebutton.VoiceButton$RecorderListener) -> setRecorderListener
    53:56:void setSampleRate(int) -> setSampleRate
    86:87:void updateDialogRunable$lambda-4(com.lizhidan.voicebutton.VoiceButton) -> updateDialogRunable$lambda-4
    89:90:void updateRemainingTimeRunable$lambda-5(com.lizhidan.voicebutton.VoiceButton) -> updateRemainingTimeRunable$lambda-5
    167:167:boolean wantToCancel(float) -> wantToCancel
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda0 -> com.lizhidan.voicebutton.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$4 com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$4.INSTANCE -> a
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$4.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$4.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$4.onAudioFocusChange(int) -> onAudioFocusChange
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda1 -> com.lizhidan.voicebutton.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$5.f$0 -> b
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$5.<init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$5.onLongClick(android.view.View) -> onLongClick
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda2 -> com.lizhidan.voicebutton.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$0.f$0 -> b
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$0.<init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda3 -> com.lizhidan.voicebutton.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$3.f$0 -> b
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$3.<init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$3.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda4 -> com.lizhidan.voicebutton.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$1.f$0 -> b
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$1.<init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$$ExternalSyntheticLambda5 -> com.lizhidan.voicebutton.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebutton.VoiceButton com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$2.f$0 -> b
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$2.<init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebutton.VoiceButton$$InternalSyntheticLambda$0$d0fabe435c7d5bfab452a740ac013664ec6035b110bba48a54185281972a9fd7$2.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
com.lizhidan.voicebutton.VoiceButton$Companion -> com.lizhidan.voicebutton.VoiceButton$Companion:
# {"id":"sourceFile","fileName":"VoiceButton.kt"}
    231:231:void <init>() -> <init>
com.lizhidan.voicebutton.VoiceButton$RecorderListener -> com.lizhidan.voicebutton.VoiceButton$RecorderListener:
# {"id":"sourceFile","fileName":"VoiceButton.kt"}
com.lizhidan.voicebutton.VoiceButton$RecorderStateListener -> com.lizhidan.voicebutton.VoiceButton$RecorderStateListener:
# {"id":"sourceFile","fileName":"VoiceButton.kt"}
    200:200:void <init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
    202:203:void onError(int,int) -> onError
    222:228:void onReachMaxRecordTime(java.lang.String) -> onReachMaxRecordTime
    217:218:void onStop(java.lang.String) -> onStop
    206:214:void wellPrepared() -> wellPrepared
com.lizhidan.voicebutton.databinding.DialogRecorderBinding -> com.lizhidan.voicebutton.databinding.DialogRecorderBinding:
    42:49:void <init>(android.widget.RelativeLayout,android.widget.ImageView,android.widget.ImageView,android.widget.LinearLayout,android.widget.ProgressBar,android.widget.TextView) -> <init>
    78:112:com.lizhidan.voicebutton.databinding.DialogRecorderBinding bind(android.view.View) -> bind
    21:21:android.view.View getRoot() -> getRoot
    54:54:android.widget.RelativeLayout getRoot() -> getRoot
    59:59:com.lizhidan.voicebutton.databinding.DialogRecorderBinding inflate(android.view.LayoutInflater) -> inflate
    65:69:com.lizhidan.voicebutton.databinding.DialogRecorderBinding inflate(android.view.LayoutInflater,android.view.ViewGroup,boolean) -> inflate
com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener -> com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener:
# {"id":"sourceFile","fileName":"MediaRecorderStateListener.kt"}
com.lizhidan.voicebutton.utils.MLog -> com.lizhidan.voicebutton.utils.MLog:
# {"id":"sourceFile","fileName":"MLog.kt"}
    10:52:void <init>() -> <init>
    10:10:boolean access$isDebug$cp() -> access$isDebug$cp
    10:10:void access$setDebug$cp(boolean) -> access$setDebug$cp
com.lizhidan.voicebutton.utils.MLog$Companion -> com.lizhidan.voicebutton.utils.MLog$Companion:
# {"id":"sourceFile","fileName":"MLog.kt"}
    11:11:void <init>() -> <init>
    21:22:void d(java.lang.String) -> d
    38:39:void d(java.lang.String,java.lang.String) -> d
    25:26:void e(java.lang.String) -> e
    42:43:void e(java.lang.String,java.lang.String) -> e
    17:18:void i(java.lang.String) -> i
    34:35:void i(java.lang.String,java.lang.String) -> i
    12:12:boolean isDebug() -> isDebug
    12:12:void setDebug(boolean) -> setDebug
    29:30:void v(java.lang.String) -> v
    46:47:void v(java.lang.String,java.lang.String) -> v
com.lizhidan.voicebutton.utils.RecordDialogManager -> com.lizhidan.voicebutton.utils.RecordDialogManager:
# {"id":"sourceFile","fileName":"RecordDialogManager.kt"}
    14:14:void <init>(android.content.Context) -> <init>
    91:95:void dimissDialog() -> dimissDialog
    67:76:void showCancelRecording() -> showCancelRecording
    31:50:void showPrepareDialog() -> showPrepareDialog
    54:63:void showRecordingDialog() -> showRecordingDialog
    80:87:void showRocordTooShortDialog() -> showRocordTooShortDialog
    116:122:void updateRemainingTime(int) -> updateRemainingTime
    103:108:void updateVoiceLevel(int) -> updateVoiceLevel
com.lizhidan.voicebutton.utils.RecordManager -> com.lizhidan.voicebutton.utils.RecordManager:
# {"id":"sourceFile","fileName":"RecordManager.kt"}
    16:42:void <init>(java.lang.String) -> <init>
    void $r8$lambda$DePu5iK09vBzb515YDdm1XUJXIA(com.lizhidan.voicebutton.utils.RecordManager,android.media.MediaRecorder,int,int) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$bCnf87QVh3jMi-HVM6oNuW5-RI8(com.lizhidan.voicebutton.utils.RecordManager) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    void $r8$lambda$yzZwcObdR0p-XtuW92SmwRV0jXo(com.lizhidan.voicebutton.utils.RecordManager,android.media.MediaRecorder,int,int) -> c
      # {"id":"com.android.tools.r8.synthesized"}
    187:193:void cancel() -> cancel
    32:32:int getDb() -> getDb
    31:31:java.lang.String getFmt() -> getFmt
    36:36:int getMaxRecordLength() -> getMaxRecordLength
    22:22:java.lang.String getRecordAbsoluteFileDir() -> getRecordAbsoluteFileDir
    33:33:int getSampleRate() -> getSampleRate
    199:214:int getVoiceLevel(int) -> getVoiceLevel
    53:159:void prepareAudio() -> prepareAudio
    79:85:void prepareAudio$lambda-2(com.lizhidan.voicebutton.utils.RecordManager,android.media.MediaRecorder,int,int) -> prepareAudio$lambda-2
    87:91:void prepareAudio$lambda-4(com.lizhidan.voicebutton.utils.RecordManager,android.media.MediaRecorder,int,int) -> prepareAudio$lambda-4
    115:150:void prepareAudio$lambda-5(com.lizhidan.voicebutton.utils.RecordManager) -> prepareAudio$lambda-5
    163:183:void release() -> release
    32:32:void setDb(int) -> setDb
    31:31:void setFmt(java.lang.String) -> setFmt
    36:36:void setMaxRecordLength(int) -> setMaxRecordLength
    45:46:void setMediaRecorderStateListener(com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener) -> setMediaRecorderStateListener
    33:33:void setSampleRate(int) -> setSampleRate
com.lizhidan.voicebuttondemo.MainActivity -> com.lizhidan.voicebuttondemo.MainActivity:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter recoderAdapter -> d
    com.lizhidan.voicebutton.VoiceButton vbRecord -> b
    androidx.recyclerview.widget.RecyclerView rvVoice -> c
    int lastPlayedPosition -> e
    android.view.View voiceAnim -> f
    25:29:void <init>() -> <init>
    25:25:int access$getLastPlayedPosition$p(com.lizhidan.voicebuttondemo.MainActivity) -> a
    25:25:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter access$getRecoderAdapter$p(com.lizhidan.voicebuttondemo.MainActivity) -> b
    25:25:android.view.View access$getVoiceAnim$p(com.lizhidan.voicebuttondemo.MainActivity) -> c
    25:25:void access$onRecordAudioDenied(com.lizhidan.voicebuttondemo.MainActivity) -> d
    25:25:void access$onRecordAudioNeverAskAgain(com.lizhidan.voicebuttondemo.MainActivity) -> e
    25:25:void access$onRecordAudioShowRationale(com.lizhidan.voicebuttondemo.MainActivity,permissions.dispatcher.PermissionRequest) -> f
    25:25:void access$setLastPlayedPosition$p(com.lizhidan.voicebuttondemo.MainActivity,int) -> g
    25:25:void access$setVoiceAnim$p(com.lizhidan.voicebuttondemo.MainActivity,android.view.View) -> h
    39:45:void checkRecordAudioPermission() -> i
    60:109:void initView() -> j
    48:49:void onRecordAudioDenied() -> k
    56:57:void onRecordAudioNeverAskAgain() -> l
    52:53:void onRecordAudioShowRationale(permissions.dispatcher.PermissionRequest) -> m
    32:37:void onCreate(android.os.Bundle) -> onCreate
    112:114:void onDestroy() -> onDestroy
com.lizhidan.voicebuttondemo.MainActivity$Companion -> com.lizhidan.voicebuttondemo.MainActivity$a:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    116:116:void <init>() -> <init>
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$1 -> com.lizhidan.voicebuttondemo.MainActivity$b:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    41:41:void invoke(permissions.dispatcher.PermissionRequest) -> c
    41:41:java.lang.Object invoke(java.lang.Object) -> invoke
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$2 -> com.lizhidan.voicebuttondemo.MainActivity$c:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    42:42:java.lang.Object invoke() -> a
    42:42:void invoke() -> c
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$3 -> com.lizhidan.voicebuttondemo.MainActivity$d:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    43:43:java.lang.Object invoke() -> a
    43:43:void invoke() -> c
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$4 -> com.lizhidan.voicebuttondemo.MainActivity$e:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$4 INSTANCE -> b
    39:39:java.lang.Object invoke() -> a
    45:45:void invoke() -> c
com.lizhidan.voicebuttondemo.MainActivity$initView$1 -> com.lizhidan.voicebuttondemo.MainActivity$f:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    com.lizhidan.voicebuttondemo.MainActivity this$0 -> a
    63:63:void <init>(com.lizhidan.voicebuttondemo.MainActivity) -> <init>
    72:74:void onFinish(long,java.lang.String) -> onFinish
    65:66:void onStart() -> onStart
com.lizhidan.voicebuttondemo.MainActivity$initView$2 -> com.lizhidan.voicebuttondemo.MainActivity$g:
# {"id":"sourceFile","fileName":"MainActivity.kt"}
    com.lizhidan.voicebuttondemo.MainActivity this$0 -> a
    79:79:void <init>(com.lizhidan.voicebuttondemo.MainActivity) -> <init>
    82:106:void onItemClick(android.view.View,int) -> a
    void $r8$lambda$JhOH7Snhgs2FZ83xcWhfy5MpifU(com.lizhidan.voicebuttondemo.MainActivity,android.media.MediaPlayer) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    102:103:void onItemClick$lambda-0(com.lizhidan.voicebuttondemo.MainActivity,android.media.MediaPlayer) -> c
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter:
# {"id":"sourceFile","fileName":"RecoderAdapter.kt"}
    android.content.Context mContext -> a
    java.util.List mDatas -> b
    android.view.LayoutInflater mInflater -> e
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener onItemClickListener -> f
    int mMaxWidth -> d
    int mMinWidth -> c
    21:114:void <init>(android.content.Context,java.util.List) -> <init>
    21:21:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener access$getOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter) -> a
    98:100:void addData(com.lizhidan.voicebuttondemo.bean.RecorderInfo) -> b
    88:88:com.lizhidan.voicebuttondemo.bean.RecorderInfo getItem(int) -> c
    74:81:void onBindViewHolder(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder,int) -> d
    63:67:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder onCreateViewHolder(android.view.ViewGroup,int) -> e
    41:42:void setOnItemClickListener(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> f
    84:84:int getItemCount() -> getItemCount
    21:21:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    21:21:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$a:
# {"id":"sourceFile","fileName":"RecoderAdapter.kt"}
    void onItemClick(android.view.View,int) -> a
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder:
# {"id":"sourceFile","fileName":"RecoderAdapter.kt"}
    android.widget.LinearLayout llRecoderLength -> a
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter this$0 -> c
    android.widget.TextView tvVoiceDuration -> b
    44:56:void <init>(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,android.view.View) -> <init>
    void $r8$lambda$BN44lh_x8ARH-efuVQUygYsevwA(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder,android.view.View) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    52:55:void _init_$lambda-0(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder,android.view.View) -> b
    45:45:android.widget.LinearLayout getLlRecoderLength() -> c
    46:46:android.widget.TextView getTvVoiceDuration() -> d
com.lizhidan.voicebuttondemo.bean.RecorderInfo -> com.lizhidan.voicebuttondemo.bean.RecorderInfo:
# {"id":"sourceFile","fileName":"RecorderInfo.kt"}
    6:10:void <init>(long,java.lang.String) -> <init>
    10:10:java.lang.String getFilePath() -> getFilePath
    8:8:long getTime() -> getTime
    10:10:void setFilePath(java.lang.String) -> setFilePath
    8:8:void setTime(long) -> setTime
    14:16:java.lang.String toString() -> toString
com.lizhidan.voicebuttondemo.databinding.ActivityMainBinding -> com.lizhidan.voicebuttondemo.databinding.ActivityMainBinding:
    39:39:android.widget.LinearLayout getRoot() -> a
    19:19:android.view.View getRoot() -> getRoot
com.lizhidan.voicebuttondemo.databinding.ItemRecoderBinding -> com.lizhidan.voicebuttondemo.databinding.ItemRecoderBinding:
    42:42:android.widget.LinearLayout getRoot() -> a
    18:18:android.view.View getRoot() -> getRoot
com.lizhidan.voicebuttondemo.utils.MediaPlayerManager -> e.c:
# {"id":"sourceFile","fileName":"MediaPlayerManager.kt"}
    com.lizhidan.voicebuttondemo.utils.MediaPlayerManager INSTANCE -> a
    android.media.MediaPlayer mMediaPlayer -> b
    android.media.AudioTrack audioplayer -> c
    14:14:void <init>() -> <init>
    void $r8$lambda$66whcYMj4tKuvJGR077pnZgLnGY(int,java.io.DataInputStream) -> a
      # {"id":"com.android.tools.r8.synthesized"}
    boolean $r8$lambda$GCRBjHK-28YYl8SjS_R80-4ZFpQ(android.media.MediaPlayer,int,int) -> b
      # {"id":"com.android.tools.r8.synthesized"}
    128:132:boolean isPlaying() -> c
    29:91:void playSound(java.lang.String,android.media.MediaPlayer$OnCompletionListener,int) -> d
    25:27:void playSound$default(com.lizhidan.voicebuttondemo.utils.MediaPlayerManager,java.lang.String,android.media.MediaPlayer$OnCompletionListener,int,int,java.lang.Object) -> e
    36:37:boolean playSound$lambda-0(android.media.MediaPlayer,int,int) -> f
    62:86:void playSound$lambda-1(int,java.io.DataInputStream) -> g
    152:162:void release() -> h
    139:145:void stop() -> i
d.RecoderAdapter$RecordHolder$$ExternalSyntheticLambda0 -> d.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$$InternalSyntheticLambda$0$eacb73b30a385242d6a8d318b88f0ff4fc0cc273061128c75569e05b3fa00527$0.f$1 -> c
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$$InternalSyntheticLambda$0$eacb73b30a385242d6a8d318b88f0ff4fc0cc273061128c75569e05b3fa00527$0.f$0 -> b
    void com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$$InternalSyntheticLambda$0$eacb73b30a385242d6a8d318b88f0ff4fc0cc273061128c75569e05b3fa00527$0.<init>(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$$InternalSyntheticLambda$0$eacb73b30a385242d6a8d318b88f0ff4fc0cc273061128c75569e05b3fa00527$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
e.MediaPlayerManager$$ExternalSyntheticLambda0 -> e.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$0 com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$0.INSTANCE -> a
    void com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$0.<clinit>() -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    boolean com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$0.onError(android.media.MediaPlayer,int,int) -> onError
      # {"id":"com.android.tools.r8.synthesized"}
e.MediaPlayerManager$$ExternalSyntheticLambda1 -> e.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.io.DataInputStream com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$1.f$1 -> c
    int com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$1.f$0 -> b
    void com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$1.<init>(int,java.io.DataInputStream) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    void com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$$InternalSyntheticLambda$2$dd03b650cc44d34b2b5520dea17cc3f36260d4e0b721cc4677830eb67ba26832$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.Function -> f.a:
# {"id":"sourceFile","fileName":"Function.kt"}
kotlin.Pair -> f.b:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    java.lang.Object first -> b
    java.lang.Object second -> c
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    java.lang.Object component1() -> a
    java.lang.Object component2() -> b
    27:27:java.lang.Object getFirst() -> c
    28:28:java.lang.Object getSecond() -> d
    34:34:java.lang.String toString() -> toString
kotlin.Result -> f.c:
# {"id":"sourceFile","fileName":"Result.kt"}
    kotlin.Result$Companion Companion -> b
    java.lang.Object constructor-impl(java.lang.Object) -> a
kotlin.Result$Companion -> f.c$a:
# {"id":"sourceFile","fileName":"Result.kt"}
    85:85:void <init>() -> <init>
kotlin.Result$Failure -> f.c$b:
# {"id":"sourceFile","fileName":"Result.kt"}
    java.lang.Throwable exception -> b
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> f.d:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> a
    132:133:void throwOnFailure(java.lang.Object) -> b
kotlin.TuplesKt -> f.e:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> a
kotlin.UninitializedPropertyAccessException -> f.f:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> f.g:
# {"id":"sourceFile","fileName":"Unit.kt"}
    kotlin.Unit INSTANCE -> a
    22:22:void <init>() -> <init>
    23:23:java.lang.String toString() -> toString
kotlin.collections.ArraysKt__ArraysJVMKt -> g.a:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
kotlin.collections.ArraysKt__ArraysKt -> g.b:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> g.c:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.ArraysKt___ArraysKt -> g.d:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    2890:2893:char single(char[]) -> b
kotlin.collections.ArraysUtilJVM -> g.e:
    13:13:java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.BooleanIterator -> g.f:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    67:67:void <init>() -> <init>
    67:67:java.lang.Object next() -> next
    68:68:java.lang.Boolean next() -> next
kotlin.collections.CollectionsKt__CollectionsJVMKt -> g.g:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
kotlin.collections.CollectionsKt__CollectionsKt -> g.h:
# {"id":"sourceFile","fileName":"Collections.kt"}
    71:71:java.util.List emptyList() -> a
    77:77:java.util.List listOf(java.lang.Object[]) -> b
    463:463:void throwIndexOverflow() -> c
kotlin.collections.CollectionsKt__IterablesKt -> g.i:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> d
kotlin.collections.EmptyIterator -> g.j:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyIterator INSTANCE -> b
    15:15:void <init>() -> <init>
    20:20:java.lang.Void next() -> a
    21:21:java.lang.Void previous() -> b
    16:16:boolean hasNext() -> hasNext
    17:17:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    18:18:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    19:19:int previousIndex() -> previousIndex
kotlin.collections.EmptyList -> g.k:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyList INSTANCE -> b
    24:24:void <init>() -> <init>
    33:33:boolean contains(java.lang.Void) -> a
    36:36:java.lang.Void get(int) -> b
    31:31:int getSize() -> c
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    37:37:int indexOf(java.lang.Void) -> d
    38:38:int lastIndexOf(java.lang.Void) -> e
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    28:28:int hashCode() -> hashCode
    24:24:int indexOf(java.lang.Object) -> indexOf
    32:32:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    52:52:java.lang.Object readResolve() -> readResolve
    24:24:int size() -> size
    48:49:java.util.List subList(int,int) -> subList
    29:29:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> g.l:
# {"id":"sourceFile","fileName":"Maps.kt"}
    kotlin.collections.EmptyMap INSTANCE -> b
    14:14:void <init>() -> <init>
    25:25:boolean containsValue(java.lang.Void) -> a
    26:26:java.lang.Void get(java.lang.Object) -> b
    27:27:java.util.Set getEntries() -> c
    24:24:boolean containsKey(java.lang.Object) -> containsKey
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    28:28:java.util.Set getKeys() -> d
    21:21:int getSize() -> e
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    29:29:java.util.Collection getValues() -> f
    java.lang.Void remove(java.lang.Object) -> g
    14:14:java.lang.Object get(java.lang.Object) -> get
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    31:31:java.lang.Object readResolve() -> readResolve
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> g.m:
# {"id":"sourceFile","fileName":"Sets.kt"}
    kotlin.collections.EmptySet INSTANCE -> b
    14:14:void <init>() -> <init>
    23:23:boolean contains(java.lang.Void) -> a
    21:21:int getSize() -> b
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    28:28:java.lang.Object readResolve() -> readResolve
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
kotlin.collections.IntIterator -> g.n:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
    36:36:java.lang.Integer next() -> next
kotlin.collections.LongIterator -> g.o:
# {"id":"sourceFile","fileName":"Iterators.kt"}
    43:43:void <init>() -> <init>
    43:43:java.lang.Object next() -> next
    44:44:java.lang.Long next() -> next
kotlin.collections.MapsKt__MapWithDefaultKt -> g.p:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> g.q:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    148:156:int mapCapacity(int) -> a
    27:27:java.util.Map mapOf(kotlin.Pair) -> b
    140:159:java.util.Map toSingletonMap(java.util.Map) -> c
kotlin.collections.MapsKt__MapsKt -> g.r:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> d
    784:788:java.util.Map optimizeReadOnlyMap(java.util.Map) -> e
    415:418:void putAll(java.util.Map,java.lang.Iterable) -> f
    546:553:java.util.Map toMap(java.lang.Iterable) -> g
    560:790:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> h
kotlin.coroutines.Continuation -> h.a:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> h.b:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    kotlin.coroutines.ContinuationInterceptor$Key Key -> a
    void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> b
kotlin.coroutines.ContinuationInterceptor$Key -> h.b$a:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE -> a
    24:24:void <init>() -> <init>
kotlin.coroutines.CoroutineContext -> h.c:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
kotlin.coroutines.CoroutineContext$Element -> h.c$a:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Key -> h.c$b:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.EmptyCoroutineContext -> h.d:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    kotlin.coroutines.EmptyCoroutineContext INSTANCE -> b
    94:94:void <init>() -> <init>
    99:99:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
    103:103:int hashCode() -> hashCode
    97:97:java.lang.Object readResolve() -> readResolve
    104:104:java.lang.String toString() -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> i.a:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES -> e
    kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED -> c
    kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED -> d
    kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED -> b
    64:64:void <clinit>() -> <clinit>
    62:64:void <init>(java.lang.String,int) -> <init>
    kotlin.coroutines.intrinsics.CoroutineSingletons[] $values() -> a
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> i.b:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    122:214:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation) -> a
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> i.b$a:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    java.lang.Object $receiver$inlined -> d
    int label -> b
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> c
    168:168:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    172:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> i.b$b:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    java.lang.Object $receiver$inlined -> f
    int label -> d
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> e
    186:186:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object) -> <init>
    190:205:java.lang.Object invokeSuspend(java.lang.Object) -> invokeSuspend
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> i.c:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> b
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> j.a:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    14:18:void <init>(kotlin.coroutines.Continuation) -> <init>
    60:60:kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation) -> create
    64:64:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation) -> create
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    18:18:kotlin.coroutines.Continuation getCompletion() -> getCompletion
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    57:57:void releaseIntercepted() -> releaseIntercepted
    23:49:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.CompletedContinuation -> j.b:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE -> b
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
    132:132:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> j.c:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    kotlin.coroutines.Continuation intercepted -> c
    kotlin.coroutines.CoroutineContext _context -> b
    98:101:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext) -> <init>
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    116:121:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> j.d:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> j.e:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> j.f:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:105:void checkDebugMetadataVersion(int,int) -> a
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> b
    93:99:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> c
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> d
kotlin.coroutines.jvm.internal.DebugProbesKt -> j.g:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
    47:47:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation) -> a
    66:66:void probeCoroutineResumed(kotlin.coroutines.Continuation) -> b
    82:82:void probeCoroutineSuspended(kotlin.coroutines.Continuation) -> c
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> j.h:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9 -> b
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache -> c
    kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE -> a
    61:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    76:135:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> a
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> b
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> j.h$a:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    java.lang.reflect.Method nameMethod -> c
    java.lang.reflect.Method getModuleMethod -> a
    java.lang.reflect.Method getDescriptorMethod -> b
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> j.i:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    81:90:void <init>(kotlin.coroutines.Continuation) -> <init>
    93:93:kotlin.coroutines.CoroutineContext getContext() -> getContext
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda -> j.j:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    141:144:void <init>(int,kotlin.coroutines.Continuation) -> <init>
    145:145:void <init>(int) -> <init>
    142:142:int getArity() -> getArity
    148:151:java.lang.String toString() -> toString
kotlin.jvm.JvmClassMappingKt -> k.a:
# {"id":"sourceFile","fileName":"JvmClassMapping.kt"}
    58:71:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> a
kotlin.jvm.KotlinReflectionNotSupportedError -> k.b:
# {"id":"sourceFile","fileName":"KotlinReflectionNotSupportedError.kt"}
    11:11:void <init>() -> <init>
kotlin.jvm.functions.Function0 -> l.a:
# {"id":"sourceFile","fileName":"Functions.kt"}
    java.lang.Object invoke() -> a
kotlin.jvm.functions.Function1 -> l.l:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function10 -> l.b:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function11 -> l.c:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function12 -> l.d:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function13 -> l.e:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function14 -> l.f:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function15 -> l.g:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function16 -> l.h:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function17 -> l.i:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function18 -> l.j:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function19 -> l.k:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> l.p:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function20 -> l.m:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function21 -> l.n:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function22 -> l.o:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function3 -> l.q:
# {"id":"sourceFile","fileName":"Functions.kt"}
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
kotlin.jvm.functions.Function4 -> l.r:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function5 -> l.s:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function6 -> l.t:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function7 -> l.u:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function8 -> l.v:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function9 -> l.w:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.CallableReference -> kotlin.jvm.internal.a:
    48:48:void <clinit>() -> <clinit>
    60:61:void <init>() -> <init>
    65:66:void <init>(java.lang.Object) -> <init>
    69:75:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean) -> <init>
    161:161:java.lang.Object call(java.lang.Object[]) -> call
    166:166:java.lang.Object callBy(java.util.Map) -> callBy
    86:91:kotlin.reflect.KCallable compute() -> compute
    150:150:java.util.List getAnnotations() -> getAnnotations
    81:81:java.lang.Object getBoundReceiver() -> getBoundReceiver
    120:120:java.lang.String getName() -> getName
    111:111:kotlin.reflect.KDeclarationContainer getOwner() -> getOwner
    140:140:java.util.List getParameters() -> getParameters
    96:100:kotlin.reflect.KCallable getReflected() -> getReflected
    145:145:kotlin.reflect.KType getReturnType() -> getReturnType
    132:132:java.lang.String getSignature() -> getSignature
    156:156:java.util.List getTypeParameters() -> getTypeParameters
    172:172:kotlin.reflect.KVisibility getVisibility() -> getVisibility
    190:190:boolean isAbstract() -> isAbstract
    178:178:boolean isFinal() -> isFinal
    184:184:boolean isOpen() -> isOpen
    196:196:boolean isSuspend() -> isSuspend
kotlin.jvm.internal.CallableReference$NoReceiver -> kotlin.jvm.internal.a$a:
    kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE -> b
    52:52:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    51:51:kotlin.jvm.internal.CallableReference$NoReceiver access$000() -> a
    55:55:java.lang.Object readResolve() -> readResolve
kotlin.jvm.internal.ClassBasedDeclarationContainer -> m.a:
# {"id":"sourceFile","fileName":"ClassBasedDeclarationContainer.kt"}
    java.lang.Class getJClass() -> a
kotlin.jvm.internal.ClassReference -> m.b:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    java.util.Map FUNCTION_CLASSES -> c
    java.lang.Class jClass -> b
    java.util.HashMap classFqNames -> f
    java.util.HashMap primitiveWrapperFqNames -> e
    java.util.HashMap primitiveFqNames -> d
    101:220:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.Class) -> <init>
    10:10:java.lang.Class getJClass() -> a
    91:91:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    97:97:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> m.b$a:
# {"id":"sourceFile","fileName":"ClassReference.kt"}
    99:99:void <init>() -> <init>
kotlin.jvm.internal.CollectionToArray -> m.c:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    java.lang.Object[] EMPTY -> a
    14:127:void <clinit>() -> <clinit>
    19:104:java.lang.Object[] toArray(java.util.Collection) -> a
    30:126:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
kotlin.jvm.internal.DefaultConstructorMarker -> m.d:
kotlin.jvm.internal.FunctionBase -> m.e:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.FunctionReference -> m.f:
    40:41:void <init>(int) -> <init>
    45:46:void <init>(int,java.lang.Object) -> <init>
    50:53:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    69:69:kotlin.reflect.KCallable computeReflected() -> computeReflected
    104:118:boolean equals(java.lang.Object) -> equals
    57:57:int getArity() -> getArity
    12:12:kotlin.reflect.KCallable getReflected() -> getReflected
    63:63:kotlin.reflect.KFunction getReflected() -> getReflected
    123:123:int hashCode() -> hashCode
    81:81:boolean isExternal() -> isExternal
    93:93:boolean isInfix() -> isInfix
    75:75:boolean isInline() -> isInline
    87:87:boolean isOperator() -> isOperator
    99:99:boolean isSuspend() -> isSuspend
    128:134:java.lang.String toString() -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> m.g:
    15:20:void <init>(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String) -> <init>
    24:25:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
    29:30:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int) -> <init>
kotlin.jvm.internal.InlineMarker -> m.h:
    25:25:void finallyEnd(int) -> a
    22:22:void finallyStart(int) -> b
kotlin.jvm.internal.Intrinsics -> m.i:
    16:17:void <init>() -> <init>
    167:167:boolean areEqual(java.lang.Object,java.lang.Object) -> a
    86:89:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> b
    24:27:void checkNotNull(java.lang.Object) -> c
    92:95:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> d
    130:133:void checkNotNullParameter(java.lang.Object,java.lang.String) -> e
    124:127:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> f
    144:155:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> g
    211:211:void reifiedOperationMarker(int,java.lang.String) -> h
    251:251:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> i
    255:267:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> j
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> k
    45:45:void throwJavaNpe() -> l
    136:136:void throwParameterIsNullIAE(java.lang.String) -> m
    140:140:void throwParameterIsNullNPE(java.lang.String) -> n
    201:201:void throwUndefinedForReified() -> o
    207:207:void throwUndefinedForReified(java.lang.String) -> p
    54:54:void throwUninitializedProperty(java.lang.String) -> q
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> r
kotlin.jvm.internal.Lambda -> m.j:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.PackageReference -> m.k:
# {"id":"sourceFile","fileName":"PackageReference.kt"}
    java.lang.Class jClass -> b
    10:13:void <init>(java.lang.Class,java.lang.String) -> <init>
    12:12:java.lang.Class getJClass() -> a
    19:19:boolean equals(java.lang.Object) -> equals
    22:22:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> m.l:
    kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY -> b
    kotlin.jvm.internal.ReflectionFactory factory -> a
    26:39:void <clinit>() -> <clinit>
    89:89:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> a
    59:59:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> b
    51:51:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class) -> c
    83:83:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> d
    78:78:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> e
kotlin.jvm.internal.ReflectionFactory -> m.m:
    14:14:void <init>() -> <init>
    51:51:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> a
    30:30:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> b
    26:26:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String) -> c
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> d
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> e
kotlin.jvm.internal.StringCompanionObject -> m.n:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    kotlin.jvm.internal.StringCompanionObject INSTANCE -> a
    110:110:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> m.o:
    15:15:void <init>() -> <init>
    341:344:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> a
    258:331:int getFunctionArity(java.lang.Object) -> b
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> c
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> d
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> e
    21:22:void throwCce(java.lang.Object,java.lang.String) -> f
    26:26:void throwCce(java.lang.String) -> g
kotlin.math.MathKt__MathHKt -> n.a:
# {"id":"sourceFile","fileName":"MathH.kt"}
kotlin.math.MathKt__MathJVMKt -> n.b:
# {"id":"sourceFile","fileName":"MathJVM.kt"}
    1132:1132:int roundToInt(float) -> a
kotlin.ranges.ClosedRange -> o.a:
# {"id":"sourceFile","fileName":"Range.kt"}
kotlin.ranges.ClosedRange$DefaultImpls -> o.a$a:
# {"id":"sourceFile","fileName":"Range.kt"}
    26:26:boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable) -> a
    33:33:boolean isEmpty(kotlin.ranges.ClosedRange) -> b
kotlin.ranges.IntProgression -> o.b:
# {"id":"sourceFile","fileName":"Progressions.kt"}
kotlin.ranges.IntRange -> o.c:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    java.lang.Integer getStart() -> a
kotlin.ranges.RangesKt__RangesKt -> o.d:
# {"id":"sourceFile","fileName":"Ranges.kt"}
kotlin.ranges.RangesKt___RangesKt -> o.e:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    1011:1011:int coerceAtMost(int,int) -> a
kotlin.reflect.KAnnotatedElement -> p.a:
# {"id":"sourceFile","fileName":"KAnnotatedElement.kt"}
kotlin.reflect.KCallable -> p.b:
# {"id":"sourceFile","fileName":"KCallable.kt"}
kotlin.reflect.KClass -> p.c:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.reflect.KDeclarationContainer -> p.d:
# {"id":"sourceFile","fileName":"KDeclarationContainer.kt"}
kotlin.reflect.KFunction -> p.e:
# {"id":"sourceFile","fileName":"KFunction.kt"}
kotlin.reflect.KType -> p.f:
# {"id":"sourceFile","fileName":"KType.kt"}
kotlin.reflect.KVisibility -> p.g:
# {"id":"sourceFile","fileName":"KVisibility.kt"}
    kotlin.reflect.KVisibility[] $VALUES -> f
    kotlin.reflect.KVisibility PUBLIC -> b
    kotlin.reflect.KVisibility PROTECTED -> c
    kotlin.reflect.KVisibility INTERNAL -> d
    kotlin.reflect.KVisibility PRIVATE -> e
    34:49:void <clinit>() -> <clinit>
    29:30:void <init>(java.lang.String,int) -> <init>
    kotlin.reflect.KVisibility[] $values() -> a
kotlin.sequences.EmptySequence -> q.a:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    kotlin.sequences.EmptySequence INSTANCE -> a
    44:44:void <init>() -> <init>
    45:45:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence -> q.b:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    kotlin.jvm.functions.Function0 getInitialValue -> a
    kotlin.jvm.functions.Function1 getNextValue -> b
    585:585:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    585:585:kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence) -> a
    585:585:kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence) -> b
    586:612:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence$iterator$1 -> q.b$a:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    java.lang.Object nextItem -> b
    int nextState -> c
    kotlin.sequences.GeneratorSequence this$0 -> d
    586:588:void <init>(kotlin.sequences.GeneratorSequence) -> <init>
    591:593:void calcNext() -> a
    608:610:boolean hasNext() -> hasNext
    596:604:java.lang.Object next() -> next
kotlin.sequences.Sequence -> q.c:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequenceBuilderIterator -> q.d:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    java.util.Iterator nextIterator -> d
    kotlin.coroutines.Continuation nextStep -> e
    java.lang.Object nextValue -> c
    int state -> b
    115:115:void <init>() -> <init>
    174:178:java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> a
    183:188:java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> b
    166:170:java.lang.Throwable exceptionalState() -> d
    163:163:java.lang.Object nextNotReady() -> e
    119:119:void setNextStep(kotlin.coroutines.Continuation) -> f
    199:199:kotlin.coroutines.CoroutineContext getContext() -> getContext
    122:140:boolean hasNext() -> hasNext
    145:158:java.lang.Object next() -> next
    194:196:void resumeWith(java.lang.Object) -> resumeWith
kotlin.sequences.SequenceScope -> q.e:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    59:61:void <init>() -> <init>
    java.lang.Object yield(java.lang.Object,kotlin.coroutines.Continuation) -> a
    java.lang.Object yieldAll(java.util.Iterator,kotlin.coroutines.Continuation) -> b
    100:100:java.lang.Object yieldAll(kotlin.sequences.Sequence,kotlin.coroutines.Continuation) -> c
kotlin.sequences.SequencesKt__SequenceBuilderKt -> q.f:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
    40:42:java.util.Iterator iterator(kotlin.jvm.functions.Function2) -> a
    25:25:kotlin.sequences.Sequence sequence(kotlin.jvm.functions.Function2) -> b
kotlin.sequences.SequencesKt__SequenceBuilderKt$sequence$$inlined$Sequence$1 -> q.f$a:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    kotlin.jvm.functions.Function2 $block$inlined -> a
    21:21:void <init>(kotlin.jvm.functions.Function2) -> <init>
    22:681:java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt__SequencesJVMKt -> q.g:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> q.h:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    659:662:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> c
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2 -> q.h$a:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    java.lang.Object $seed -> b
    662:662:java.lang.Object invoke() -> a
kotlin.text.CharsKt__CharJVMKt -> r.a:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
kotlin.text.CharsKt__CharKt -> r.b:
# {"id":"sourceFile","fileName":"Char.kt"}
    234:240:boolean equals(char,char,boolean) -> a
kotlin.text.Charsets -> r.c:
# {"id":"sourceFile","fileName":"Charsets.kt"}
    java.nio.charset.Charset UTF_8 -> a
    29:61:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
kotlin.text.StringsKt__AppendableKt -> r.d:
# {"id":"sourceFile","fileName":"Appendable.kt"}
kotlin.text.StringsKt__IndentKt -> r.e:
# {"id":"sourceFile","fileName":"Indent.kt"}
kotlin.text.StringsKt__RegexExtensionsJVMKt -> r.f:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> r.g:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> r.h:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> r.i:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> r.j:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> r.k:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
kotlin.text.StringsKt__StringsJVMKt -> r.l:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    439:442:boolean endsWith(java.lang.String,java.lang.String,boolean) -> a
    438:438:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> b
    653:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> c
kotlin.text.StringsKt__StringsKt -> r.m:
# {"id":"sourceFile","fileName":"Strings.kt"}
    379:379:int getLastIndex(java.lang.CharSequence) -> d
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> e
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> f
    956:1621:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> g
    484:485:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> h
    483:483:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> i
permissions.dispatcher.PermissionRequest -> s.a:
    void proceed() -> a
permissions.dispatcher.PermissionUtils -> s.b:
    androidx.collection.SimpleArrayMap MIN_SDK_PERMISSIONS -> a
    19:33:void <clinit>() -> <clinit>
    99:101:boolean hasSelfPermission(android.content.Context,java.lang.String) -> a
    78:83:boolean hasSelfPermissions(android.content.Context,java.lang.String[]) -> b
    64:67:boolean permissionExists(java.lang.String) -> c
    113:118:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String[]) -> d
    129:134:boolean shouldShowRequestPermissionRationale(androidx.fragment.app.Fragment,java.lang.String[]) -> e
    45:53:boolean verifyPermissions(int[]) -> f
permissions.dispatcher.ktx.ActivityExtensionsKt -> t.a:
# {"id":"sourceFile","fileName":"ActivityExtensions.kt"}
    22:29:void withPermissionsCheck(androidx.fragment.app.FragmentActivity,java.lang.String[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> a
permissions.dispatcher.ktx.KtxPermissionRequest -> t.b:
# {"id":"sourceFile","fileName":"KtxPermissionRequest.kt"}
    permissions.dispatcher.ktx.KtxPermissionRequest$Companion Companion -> b
    java.lang.ref.WeakReference requestPermission -> a
    6:6:void <init>(java.lang.ref.WeakReference,java.lang.ref.WeakReference) -> <init>
    11:12:void proceed() -> a
permissions.dispatcher.ktx.KtxPermissionRequest$Companion -> t.b$a:
# {"id":"sourceFile","fileName":"KtxPermissionRequest.kt"}
    18:18:void <init>() -> <init>
    18:18:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:22:permissions.dispatcher.ktx.KtxPermissionRequest create(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> a
permissions.dispatcher.ktx.PermissionRequestType -> t.c:
# {"id":"sourceFile","fileName":"PermissionRequestType.kt"}
    11:11:void <init>() -> <init>
    11:11:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    boolean checkPermissions(android.content.Context,java.lang.String[]) -> a
    97:120:void invoke(java.lang.String[],androidx.fragment.app.FragmentActivity,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> b
    void invokeRequest(permissions.dispatcher.ktx.PermissionsRequestFragment,java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
    74:89:void requestPermissions$ktx_release(java.lang.String[],androidx.fragment.app.FragmentActivity,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> d
permissions.dispatcher.ktx.PermissionRequestType$Others -> t.c$a:
# {"id":"sourceFile","fileName":"PermissionRequestType.kt"}
    permissions.dispatcher.ktx.PermissionRequestType$Others INSTANCE -> a
    12:12:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    14:14:boolean checkPermissions(android.content.Context,java.lang.String[]) -> a
    21:26:void invokeRequest(permissions.dispatcher.ktx.PermissionsRequestFragment,java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
permissions.dispatcher.ktx.PermissionRequestType$invoke$1 -> t.c$b:
# {"id":"sourceFile","fileName":"PermissionRequestType.kt"}
    kotlin.jvm.functions.Function0 $requiresPermission -> e
    kotlin.jvm.functions.Function0 $onPermissionDenied -> g
    kotlin.jvm.functions.Function0 $onNeverAskAgain -> f
    permissions.dispatcher.ktx.PermissionRequestType this$0 -> b
    androidx.fragment.app.FragmentActivity $activity -> d
    java.lang.String[] $permissions -> c
    11:11:java.lang.Object invoke() -> a
    102:109:void invoke() -> c
permissions.dispatcher.ktx.PermissionsRequestFragment -> permissions.dispatcher.ktx.PermissionsRequestFragment:
# {"id":"sourceFile","fileName":"PermissionsRequestFragment.kt"}
    kotlin.jvm.functions.Function0 onPermissionDenied -> e
    kotlin.jvm.functions.Function0 onNeverAskAgain -> d
    java.lang.String tag -> f
    permissions.dispatcher.ktx.PermissionsRequestFragment$Companion Companion -> g
    int requestCode -> b
    kotlin.jvm.functions.Function0 requiresPermission -> c
    99:99:void <clinit>() -> <clinit>
    16:17:void <init>() -> <init>
    16:16:java.lang.String access$getTag$cp() -> a
    96:96:kotlin.Unit dismiss() -> b
    69:73:void requestPermissions(java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
    57:65:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    23:30:void onAttach(android.content.Context) -> onAttach
    33:38:void onDestroy() -> onDestroy
    41:54:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
permissions.dispatcher.ktx.PermissionsRequestFragment$Companion -> permissions.dispatcher.ktx.PermissionsRequestFragment$a:
# {"id":"sourceFile","fileName":"PermissionsRequestFragment.kt"}
    98:98:void <init>() -> <init>
    98:98:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    99:99:java.lang.String getTag() -> a
    100:100:permissions.dispatcher.ktx.PermissionsRequestFragment newInstance() -> b
